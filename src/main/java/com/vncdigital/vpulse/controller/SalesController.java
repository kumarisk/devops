package com.vncdigital.vpulse.controller;

import java.io.ByteArrayOutputStream;
import java.security.Principal;
import java.sql.Timestamp;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;

import javax.transaction.Transactional;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cache.annotation.Cacheable;
import org.springframework.core.io.ByteArrayResource;
import org.springframework.core.io.Resource;
import org.springframework.core.io.ResourceLoader;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.support.ServletUriComponentsBuilder;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Image;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.vncdigital.vpulse.bill.model.ChargeBill;
import com.vncdigital.vpulse.bill.repository.ChargeBillRepository;
import com.vncdigital.vpulse.bill.serviceImpl.ChargeBillServiceImpl;
import com.vncdigital.vpulse.config.ConstantValues;
import com.vncdigital.vpulse.laboratory.model.LaboratoryRegistration;
import com.vncdigital.vpulse.laboratory.repository.LaboratoryRegistrationRepository;
import com.vncdigital.vpulse.laboratory.serviceImpl.LaboratoryRegistrationServiceImpl;
import com.vncdigital.vpulse.osp.model.OspService;
import com.vncdigital.vpulse.osp.repository.OspServiceRepository;
import com.vncdigital.vpulse.patient.model.CashPlusCard;
import com.vncdigital.vpulse.patient.model.PatientPayment;
import com.vncdigital.vpulse.patient.model.PatientRegistration;
import com.vncdigital.vpulse.patient.repository.CashPlusCardRepository;
import com.vncdigital.vpulse.patient.repository.PatientPaymentRepository;
import com.vncdigital.vpulse.patient.repository.PatientRegistrationRepository;
import com.vncdigital.vpulse.patient.serviceImpl.PatientRegistrationServiceImpl;
import com.vncdigital.vpulse.pharmacist.dto.SalesDto;
import com.vncdigital.vpulse.pharmacist.helper.HeaderFooterPageEvent;
import com.vncdigital.vpulse.pharmacist.helper.RefSalesIds;
import com.vncdigital.vpulse.pharmacist.model.MedicineDetails;
import com.vncdigital.vpulse.pharmacist.model.MedicineProcurement;
import com.vncdigital.vpulse.pharmacist.model.Sales;
import com.vncdigital.vpulse.pharmacist.model.SalesPaymentPdf;
import com.vncdigital.vpulse.pharmacist.model.SalesReturn;
import com.vncdigital.vpulse.pharmacist.repository.MedicineDetailsRepository;
import com.vncdigital.vpulse.pharmacist.repository.MedicineProcurementRepository;
import com.vncdigital.vpulse.pharmacist.repository.MedicineQuantityRepository;
import com.vncdigital.vpulse.pharmacist.repository.PatientSalesRepository;
import com.vncdigital.vpulse.pharmacist.repository.SalesRepository;
import com.vncdigital.vpulse.pharmacist.repository.SalesReturnRepository;
import com.vncdigital.vpulse.pharmacist.serviceImpl.LocationServiceImpl;
import com.vncdigital.vpulse.pharmacist.serviceImpl.MedicineDetailsServiceImpl;
import com.vncdigital.vpulse.pharmacist.serviceImpl.MedicineProcurementServiceImpl;
import com.vncdigital.vpulse.pharmacist.serviceImpl.MedicineQuantityServiceImpl;
import com.vncdigital.vpulse.pharmacist.serviceImpl.PatientSalesServiceImpl;
import com.vncdigital.vpulse.pharmacist.serviceImpl.SalesPaymentPdfServiceImpl;
import com.vncdigital.vpulse.pharmacist.serviceImpl.SalesServiceImpl;
import com.vncdigital.vpulse.user.model.User;
import com.vncdigital.vpulse.user.serviceImpl.UserServiceImpl;
import com.vncdigital.vpulse.voucher.model.Voucher;
import com.vncdigital.vpulse.voucher.repository.VoucherRepository;



@CrossOrigin(origins="*",maxAge=36000)
@RestController
@RequestMapping("/v1/sales")
public class SalesController 
{
	private static long detailedQty=0;
	private static final Logger Logger=LoggerFactory.getLogger(SalesController.class);
	
	@Autowired
	RefSalesIds refSalesIds;
	
	@Autowired
	CashPlusCardRepository cashPlusCardRepository;
	
	@Autowired
	OspServiceRepository ospServiceRepository;
	
	@Autowired
	PatientPaymentRepository patientPaymentRepository;
	
	@Autowired
	PatientPaymentRepository paymentRepository;
	
	@Autowired
	LaboratoryRegistrationServiceImpl laboratoryRegistrationServiceImpl;
	
	@Autowired
	SalesPaymentPdfServiceImpl salesPaymentPdfServiceImpl;
	
	@Autowired
	PatientRegistrationRepository patientRegistrationRepository;
	
	@Autowired
	SalesRepository salesRepository;
	
	@Autowired
	SalesReturnRepository salesReturnRepository;
	
	@Autowired
	ResourceLoader resourceLoader;
	
	@Autowired
	MedicineDetailsRepository medicineDetailsRepository;
	
	@Autowired
	PatientRegistrationServiceImpl patientRegistrationServiceImpl;
	
	@Autowired
	MedicineProcurementServiceImpl medicineProcurementServiceImpl;
	
	@Autowired
	SalesServiceImpl salesServiceImpl;
	
	@Autowired
	UserServiceImpl userServiceImpl;
	
	@Autowired
	VoucherRepository voucherRepository;
	
	@Autowired
	LocationServiceImpl locationServiceImpl;
	
	@Autowired
	ChargeBillServiceImpl chargeBillServiceImpl;
	
	@Autowired
	MedicineDetailsServiceImpl medicineDetailsServiceImpl;
	
	@Autowired
	MedicineQuantityServiceImpl medicineQuantityServiceImpl;
	
	@Autowired
	MedicineQuantityRepository medicineQuantityRepository;
	
	@Autowired
	LaboratoryRegistrationRepository laboratoryRegistrationRepository;
	
	@Autowired
	PatientSalesServiceImpl patientSalesServiceImpl;
	
	@Autowired
	ChargeBillRepository chargeBillRepository;
	
	@Autowired
	PatientSalesRepository patientSalesRepository;
	
	@Autowired
	ProcurementController procurementController;
	
	@Autowired
	MedicineProcurementRepository medicineProcurementRepository;
	
	/*
	 * Modified code for sales
	 */
	@RequestMapping(value="/getmrp",method=RequestMethod.POST)
	public List<Map<String, String>> findMedicineDetailsModified(@RequestBody List<Map<String,String>> medicine)
	{
		return salesServiceImpl.findMedicineDetailsModified(medicine);
		
	}

	
	/*
	 * end of modified code
	 */
	@RequestMapping(value="/return/findMed/{medicine}",method=RequestMethod.GET)
	public RefSalesIds findMedicineDetails(@PathVariable String medicine)
	{
		return salesServiceImpl.findMedicineDetails(medicine);
	}
	
	/*
	 * User drop down in sales management
	 */
	@RequestMapping(value="/user",method=RequestMethod.GET)
	public List<Map<String, String>> getUserSales()
	{
		List<Map<String,String>> displayInfo=new ArrayList<>();
		List<User> user=userServiceImpl.findByStatus("Active");
		user.forEach((s) -> {
			Map<String,String> info=new HashMap<>();
			info.put("name", s.getFirstName()+" "+s.getMiddleName()+" "+s.getLastName()+"-"+s.getUserId());
			displayInfo.add(info);
		}
		);
		return displayInfo;
	}
	
	/*
	 * populating user details data for sales
	 */
	@RequestMapping(value="/user/{regId}",method=RequestMethod.GET)
	public Map<String, String> getUserDetails(@PathVariable String regId)
	{
		User user = userServiceImpl.findOneByUserId(regId);
		Map<String,String> info=new HashMap<>();
		info.put("Name", user.getFirstName()+" "+user.getMiddleName()+" "+user.getLastName());
		info.put("Mobile",String.valueOf(user.getPersonalContactNumber()));
		info.put("userId", user.getUserId());
		return info;
	}
	
	
	@RequestMapping(value="/create",method=RequestMethod.GET)
	public List<Object> getMedList()
	{
		return salesServiceImpl.getBillIds();
	}
	
	@RequestMapping(value="/create/getBill",method=RequestMethod.GET)
	public List<Object> getBillIds()
	{
		return salesServiceImpl.getBillId();
	}

	@RequestMapping(value="/viewFile/{id}",method=RequestMethod.GET)
	public ResponseEntity<Resource> uriLink(@PathVariable String id)
	{
		
		SalesPaymentPdf salesPaymentPdf=salesPaymentPdfServiceImpl.findByPid(id);
		
		
		 return ResponseEntity.ok()
	        		.contentType(MediaType.parseMediaType("application/pdf"))
	                .header(HttpHeaders.CONTENT_DISPOSITION,String.format("inline; filename=\"" + salesPaymentPdf.getFileName() + "\""))
	                .body(new ByteArrayResource(salesPaymentPdf.getData()));
		
	}
	
	
	@RequestMapping(value="/create",method=RequestMethod.POST)
	public SalesPaymentPdf createSale(@RequestBody SalesDto salesDto,Principal principal)
	{
		Sales sales=new Sales();
		BeanUtils.copyProperties(salesDto, sales);
		return salesServiceImpl.computeSave(sales,principal);
		
	}
	
	/*
	 * Online ward issues
	 */
	@RequestMapping(value="/ward/create",method=RequestMethod.POST)
	public SalesPaymentPdf wardSales(@RequestBody SalesDto salesDto,Principal principal)
	{
		Sales sales=new Sales();
		BeanUtils.copyProperties(salesDto, sales);
		return salesServiceImpl.wardSave(sales, principal);
	}
	
	
	/*
	 * 
	 * New Sales for new requirement
	 * 
	 * 
	 */
	//New code for sales
	@RequestMapping(value="/getMedPro",method=RequestMethod.POST)
	public Map<String, String> showMed(@RequestBody Map<String,String> info)
	{
		Map<String,String> displayInfo=new HashMap<>();
		MedicineDetails medicineDetails=medicineDetailsServiceImpl.findByName(info.get("medName"));
		//List<MedicineProcurement> medicineProcurements=medicineProcurementServiceImpl.findByBatchAndMedicine(info.get("batch"), info.get("medName"));
			List<MedicineProcurement> medicineProcurementsList=medicineProcurementRepository.findOneApproved(medicineDetails);
			ArrayList<String> listOfMed=new ArrayList<>();
			
			if(!medicineProcurementsList.isEmpty()) {
			for(MedicineProcurement medicineProcurementInfo:medicineProcurementsList)
			{
				if(!listOfMed.contains(medicineProcurementInfo.getBatch()))
				{
					List<MedicineProcurement> medicineProcurementsFor=medicineProcurementServiceImpl.findByBatchAndMedicine(medicineProcurementInfo.getBatch(), medicineDetails.getMedicineId());
				
					int procurementQuantity=0;
					int mrp=0;
					
					if (!medicineProcurementsFor.isEmpty()) {

						for (MedicineProcurement medicineProcurement : medicineProcurementsFor) {
							procurementQuantity += medicineProcurement.getQuantity()+Integer.parseInt(medicineProcurement.getFreeSample());
							mrp = (int) medicineProcurement.getMrp();
						}
					}
					int saleQuantity=0;
					
					List<Sales> saleInfoFor=salesRepository.findByBatchAndMedicine(medicineProcurementInfo.getBatch(), medicineDetails.getMedicineId());
					System.out.println("Procurement quantiity: "+procurementQuantity);
					
					if (!saleInfoFor.isEmpty()) {
						for (Sales sale : saleInfoFor) {
							saleQuantity += sale.getQuantity();
						}
					}
			 
					System.out.println("Sale quantiity: "+saleQuantity);
					int available=procurementQuantity-saleQuantity;
					
					if(Integer.parseInt(info.get("quantity"))<=available)
					{
						displayInfo.put("ExpDate", String.valueOf(medicineProcurementInfo.getExpDate()).substring(0,10));
						displayInfo.put("batch", medicineProcurementInfo.getBatch());
						displayInfo.put("quantity", info.get("quantity"));
						displayInfo.put("mrp",String.valueOf( mrp));
						displayInfo.put("Available",String.valueOf( available));
						displayInfo.put("Gst",String.valueOf( medicineProcurementInfo.getGst()));
						break;
						
					}
					
				else
				{
					listOfMed.add(medicineProcurementInfo.getBatch());
				}}
			}
		}
			for(String lis:listOfMed)
			{
				System.out.println(lis);
			}
		
		return displayInfo;
		
		
	}
	/*
	 * 
	 *End of  New Sales for new requirement
	 * 
	 * 
	 */
	
	
	
	
	/*
	 * get info for list of medicine
	 */
	@RequestMapping(value="/medList",method=RequestMethod.POST)
	public List<Map<String, String>> medList(@RequestBody List<Map<String,String>> medInfoList)
	{
		Map<String,String> displayInfo=null;
		
		List<Map<String,String>> displayList=new ArrayList<>();
		
		for(Map<String,String> medInfo:medInfoList)
		{
		displayInfo=new HashMap<>();
		
		MedicineDetails medicineDetails=medicineDetailsRepository.findByName(medInfo.get("medName"));
		displayInfo.put("batchNo",medicineDetails.getBatchNo());
		displayInfo.put("manufacturer", medicineDetails.getManufacturer());
		displayInfo.put("quantity",medInfo.get("quantity"));
		displayInfo.put("medName",medicineDetails.getName());
		List<MedicineProcurement> medicineProcurements=medicineDetails.getMedicineProcurement();
		MedicineProcurement procurement=medicineProcurements.get(medicineProcurements.size()-1);
		displayInfo.put("mrp",String.valueOf(procurement.getMrp()));
		displayInfo.put("exp",procurement.getExpDate());
		float saleValue=Integer.parseInt(medInfo.get("quantity"))*procurement.getMrp();
		float discount=(saleValue*Integer.parseInt(medInfo.get("discount")))/100;
		float netAmt=saleValue-discount;
		
		displayInfo.put("netAmount",String.valueOf(netAmt));
		displayList.add(displayInfo);
		}
		return displayList;
	}
	
	@RequestMapping(value="/getReport",method=RequestMethod.GET)
	public ResponseEntity<?> getReportInfo()
	{
		List<Object> info=new ArrayList<>();
		Map<String,String> displayInfo=new HashMap<>();
		displayInfo.put("name","User Shift Wise Details");
		info.add(displayInfo);
		displayInfo=new HashMap<>();
		displayInfo.put("name","Bill Summary");
		info.add(displayInfo);
		displayInfo=new HashMap<>();
		displayInfo.put("name","Stock Summary");
		info.add(displayInfo);
		displayInfo=new HashMap<>();
		displayInfo.put("name","User Shift Summmary");
		info.add(displayInfo);
		displayInfo=new HashMap<>();
		displayInfo.put("name","UserWiseIpOpSummary");
		info.add(displayInfo);
		displayInfo=new HashMap<>();
		displayInfo.put("name","UserWiseIpOpDetails");
		info.add(displayInfo);
		displayInfo=new HashMap<>();
		displayInfo.put("name","UserWiseIpOpDetailedPatientWise");
		info.add(displayInfo);
		displayInfo=new HashMap<>();
		displayInfo.put("name","UserWiseIpOpAllUsers");
		info.add(displayInfo);
		
		
		List<User> user= (List<User>) userServiceImpl.findByRoleId();
		if(!user.isEmpty())
		{
			info.add(user);
		}
		return ResponseEntity.ok(info);
	}
	
	/*
	 * 23. Should allow to select Batch#, when medicine is there in multiple batches
	 * 
	 * -----To get Batch for particular med----
	 */
   
	@RequestMapping(value="/batch",method=RequestMethod.POST)
	public List<Object> getBatch(@RequestBody Map<String, String> mapInfo)
	{
		
		String med=mapInfo.get("med");
		List<String> existingBatch=new ArrayList<>();
		List<Object> displayInfo=new ArrayList<>();
		Map<String,String> batchName=null;
		
		List<MedicineProcurement> medicineProcurements=medicineProcurementServiceImpl.findByItemNameAndStatus(med,"Approved");
		for(MedicineProcurement medicineProcurementsInfo:medicineProcurements)
		{
			if(!existingBatch.contains(medicineProcurementsInfo.getBatch()))
			{
				List<Sales> salesInfo=salesServiceImpl.findByBatchAndMedicine(medicineProcurementsInfo.getBatch(), medicineProcurementsInfo.getMedicineProcurmentMedicineDetails().getMedicineId());
				long sQty=0;
				for(Sales salesList:salesInfo)
				{
					sQty+=salesList.getQuantity();
					
				}
				List<MedicineProcurement> findByBatchAndMedicine = medicineProcurementServiceImpl.findByBatchAndMedicine(medicineProcurementsInfo.getBatch(), medicineProcurementsInfo.getMedicineProcurmentMedicineDetails().getMedicineId());
				
				findByBatchAndMedicine.forEach((s) -> {
					detailedQty+=s.getDetailedQuantity();
				});
				
				
				if(detailedQty>sQty)
				{
						batchName=new HashMap<>();
						batchName.put("batch", medicineProcurementsInfo.getBatch());
						displayInfo.add(batchName);
					
				}
				
				existingBatch.add(medicineProcurementsInfo.getBatch());
			}
				
		}
		
		detailedQty=0;
		return displayInfo;
	}
	
	/*
	 * 23. Should allow to select Batch#, when medicine is there in multiple batches
	 * 
	 * -----To get avaiable quantity for that Batch and particular med----
	 */
	@RequestMapping(value="/batch/avilable",method=RequestMethod.POST)
	public Map<String, String> getAvailable(@RequestBody Map<String, String> mapInfo)
	{
		
		
		String batch=mapInfo.get("batch");
		String med=mapInfo.get("med");
		//@PathVariable String batch,@PathVariable String med
		long procQuantity=0;
		long salesQuantity=0;
		long available=0;
		String expDate=null;
		long packSize=0;
		float gst=0;
		float mrp=0;
		
		
		Map<String,String> displayInfo=new HashMap<>();
		
		MedicineDetails medicineDetails=medicineDetailsServiceImpl.findByName(med);
		
		List<MedicineProcurement> medicineProcurementsList=medicineProcurementServiceImpl.findByBatchAndMedicine(batch, medicineDetails.getMedicineId());
		
		for(MedicineProcurement medicineProcurementsInfo:medicineProcurementsList)
		{
			procQuantity+=medicineProcurementsInfo.getDetailedQuantity();
			expDate=medicineProcurementsInfo.getExpDate();
			gst=medicineProcurementsInfo.getGst();
			mrp=medicineProcurementsInfo.getMrp();
			packSize=medicineProcurementsInfo.getPackSize();
		}
		
		List<Sales> salesList=salesServiceImpl.findByBatchAndMedicine(batch, medicineDetails.getMedicineId());
		
		for(Sales salesInfo:salesList)
		{
			salesQuantity+=salesInfo.getQuantity();
		}
		
		available=procQuantity-salesQuantity;
		
		if(available>0)
		{
			displayInfo.put("Available",String.valueOf(available));
			displayInfo.put("batch",batch);
			displayInfo.put("ExpDate",expDate.substring(0,10));
			displayInfo.put("Gst",String.valueOf(gst));
			displayInfo.put("mrp",String.valueOf(mrp));
			displayInfo.put("packSize",String.valueOf(packSize));
		}
		else
		{
			throw new RuntimeException("Not Available");
		}
		
		return displayInfo;
		
	}
	
	
	/*
	 * 
	 */
	
	
	
	
	/*
	 * To get all service pdf(fromDate to toDate)
	 */
	@RequestMapping(value="/getReport",method=RequestMethod.POST) 
	public ResponseEntity<?> getReport(@RequestBody Map<String,Object> info,Principal p) throws Exception
	{
		
		if(info.get("reportName").toString().equalsIgnoreCase("User Shift Summmary") && info.get("soldBy")!=null)
		{
			String fromDate= info.get("fromDate").toString();
			String toDate=  info.get("toDate").toString();

			SimpleDateFormat to=new SimpleDateFormat("HH:mm:ss");  // 10:20 PM
			SimpleDateFormat from=new SimpleDateFormat("hh:mm:ss a"); // 22:20
			
			Date n1=from.parse(info.get("fromTime").toString());
			Date n2=from.parse(info.get("toTime").toString());
			
			String fromTime= to.format(n1);
			String toTime=to.format(n2);
			
			
			Timestamp timeFrom=Timestamp.valueOf(fromDate.substring(0,10)+" "+fromTime);
			Timestamp timeTo= Timestamp.valueOf(toDate.substring(0,10)+" "+toTime);
			
			Map<String,Object> sendInfo=new HashMap<>();
			sendInfo.put("fromDate",timeFrom);
			sendInfo.put("toDate",timeTo);
			sendInfo.put("soldBy", info.get("soldBy"));
			
			SalesPaymentPdf salesPaymentPdf=getUserShiftDetailsSummary(sendInfo,p);
			return ResponseEntity.ok(salesPaymentPdf);
		}
		else if(info.get("reportName").toString().equalsIgnoreCase("User Shift Wise Details"))
		{
			
			String fromDate= info.get("fromDate").toString();
			String toDate=  info.get("toDate").toString();
			SimpleDateFormat to=new SimpleDateFormat("HH:mm:ss");  // 10:20 PM
			SimpleDateFormat from=new SimpleDateFormat("hh:mm:ss a"); // 22:20
			
			Date n1=from.parse(info.get("fromTime").toString());
			Date n2=from.parse(info.get("toTime").toString());
			
			String fromTime= to.format(n1);
			String toTime=to.format(n2);
			Timestamp timeFrom=Timestamp.valueOf(fromDate.substring(0,10)+" "+fromTime);
			Timestamp timeTo= Timestamp.valueOf(toDate.substring(0,10)+" "+toTime);
			Map<String,Object> sendInfo=new HashMap<>();
			sendInfo.put("fromDate",timeFrom);
			sendInfo.put("toDate",timeTo);
			sendInfo.put("soldBy", info.get("soldBy"));
			
			SalesPaymentPdf salesPaymentPdf=getUserShiftDetails(sendInfo,p);
			return ResponseEntity.ok(salesPaymentPdf);
		}
		else if(info.get("reportName").toString().equalsIgnoreCase("Bill Summary"))
		{
			
			String fromDate= info.get("fromDate").toString();
			String toDate=  info.get("toDate").toString();
			SimpleDateFormat to=new SimpleDateFormat("HH:mm:ss");  // 10:20 PM
			SimpleDateFormat from=new SimpleDateFormat("hh:mm:ss a"); // 22:20
			
			Date n1=from.parse(info.get("fromTime").toString());
			Date n2=from.parse(info.get("toTime").toString());
			
			String fromTime= to.format(n1);
			String toTime=to.format(n2);
			Timestamp timeFrom=Timestamp.valueOf(fromDate.substring(0,10)+" "+fromTime);
			Timestamp timeTo= Timestamp.valueOf(toDate.substring(0,10)+" "+toTime);
			Map<String,Timestamp> sendInfo=new HashMap<>();
			sendInfo.put("fromDate",timeFrom);
			sendInfo.put("toDate",timeTo);
			SalesPaymentPdf salesPaymentPdf=getBillSummaryDetails(sendInfo,p);
			return ResponseEntity.ok(salesPaymentPdf);

		}
		else if(info.get("reportName").toString().equalsIgnoreCase("Item Expiry Status"))
		{
			
			String fromDate= info.get("fromDate").toString();
			String toDate=  info.get("toDate").toString();
			SimpleDateFormat to=new SimpleDateFormat("HH:mm:ss");  // 10:20 PM
			SimpleDateFormat from=new SimpleDateFormat("hh:mm:ss a"); // 22:20
			
			Date n1=from.parse(info.get("fromTime").toString());
			Date n2=from.parse(info.get("toTime").toString());
			
			String fromTime= to.format(n1);
			String toTime=to.format(n2);
			Timestamp timeFrom=Timestamp.valueOf(fromDate.substring(0,10)+" "+fromTime);
			Timestamp timeTo= Timestamp.valueOf(toDate.substring(0,10)+" "+toTime);
			Map<String,Timestamp> sendInfo=new HashMap<>();
			sendInfo.put("fromDate",timeFrom);
			sendInfo.put("toDate",timeTo);
			SalesPaymentPdf salesPaymentPdf=procurementController.getItemExpiryStatus(sendInfo, p);
			return ResponseEntity.ok(salesPaymentPdf);

		}
		else if(info.get("reportName").toString().equalsIgnoreCase("Stock Summary"))
		{
			String fromDate= info.get("fromDate").toString();
			String toDate=  info.get("toDate").toString();
			SimpleDateFormat to=new SimpleDateFormat("HH:mm:ss");  // 10:20 PM
			SimpleDateFormat from=new SimpleDateFormat("hh:mm:ss a"); // 22:20
			
			Date n1=from.parse(info.get("fromTime").toString());
			Date n2=from.parse(info.get("toTime").toString());
			
			String fromTime= to.format(n1);
			String toTime=to.format(n2);
			Timestamp timeFrom=Timestamp.valueOf(fromDate.substring(0,10)+" "+fromTime);
			Timestamp timeTo= Timestamp.valueOf(toDate.substring(0,10)+" "+toTime);
			Map<String,Timestamp> sendInfo=new HashMap<>();
			sendInfo.put("fromDate",timeFrom);
			sendInfo.put("toDate",timeTo);
			SalesPaymentPdf salesPaymentPdf=procurementController.getStockSummaryDetails(sendInfo,p);
			return ResponseEntity.ok(salesPaymentPdf);
		}
		else if(info.get("reportName").toString().equalsIgnoreCase("UserWiseIpOpSummary"))
		{
			String fromDate= info.get("fromDate").toString();
			String toDate=  info.get("toDate").toString();
			SimpleDateFormat to=new SimpleDateFormat("HH:mm:ss");  // 10:20 PM
			SimpleDateFormat from=new SimpleDateFormat("hh:mm:ss a"); // 22:20
			
			Date n1=from.parse(info.get("fromTime").toString());
			Date n2=from.parse(info.get("toTime").toString());
			
			String fromTime= to.format(n1);
			String toTime=to.format(n2);
			Timestamp timeFrom=Timestamp.valueOf(fromDate.substring(0,10)+" "+fromTime);
			Timestamp timeTo= Timestamp.valueOf(toDate.substring(0,10)+" "+toTime);
			Map<String,Object> sendInfo=new HashMap<>();
			sendInfo.put("fromDate",timeFrom);
			sendInfo.put("toDate",timeTo);
			sendInfo.put("soldBy", info.get("soldBy"));
			SalesPaymentPdf salesPaymentPdf=getUserWiseIpOpSummary(sendInfo,p);
			return ResponseEntity.ok(salesPaymentPdf);
		}
		else if(info.get("reportName").toString().equalsIgnoreCase("UserWiseIpOpDetails"))
		{
			String fromDate= info.get("fromDate").toString();
			String toDate=  info.get("toDate").toString();
			SimpleDateFormat to=new SimpleDateFormat("HH:mm:ss");  // 10:20 PM
			SimpleDateFormat from=new SimpleDateFormat("hh:mm:ss a"); // 22:20
			
			Date n1=from.parse(info.get("fromTime").toString());
			Date n2=from.parse(info.get("toTime").toString());
			
			String fromTime= to.format(n1);
			String toTime=to.format(n2);
			Timestamp timeFrom=Timestamp.valueOf(fromDate.substring(0,10)+" "+fromTime);
			Timestamp timeTo= Timestamp.valueOf(toDate.substring(0,10)+" "+toTime);
			
			/*SimpleDateFormat from=new SimpleDateFormat("yyyy-MM-dd");
			SimpleDateFormat to=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
			String fromParsedDate=to.format(from.parse(fromDate));
			
			from=new SimpleDateFormat("yyyy-MM-dd");
			to=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
			String toParsedDate= to.format(from.parse(toDate));
			
			System.out.println("--------------Nik---------------");
			System.out.println(fromParsedDate);
			System.out.println(toParsedDate);
			
			Timestamp timeFrom=Timestamp.valueOf(fromParsedDate);
			Timestamp timeTo= Timestamp.valueOf(toParsedDate);*/
			

			
			Map<String,Object> sendInfo=new HashMap<>();
			sendInfo.put("fromDate",timeFrom);
			sendInfo.put("toDate",timeTo);
			sendInfo.put("soldBy", info.get("soldBy"));
			SalesPaymentPdf salesPaymentPdf=getUserWiseIpOpDetails(sendInfo,p);
			return ResponseEntity.ok(salesPaymentPdf);
		}
		else if(info.get("reportName").toString().equalsIgnoreCase("UserWiseIpOpDetailedPatientWise"))
		{
			String fromDate= info.get("fromDate").toString();
			String toDate=  info.get("toDate").toString();
			SimpleDateFormat to=new SimpleDateFormat("HH:mm:ss");  // 10:20 PM
			SimpleDateFormat from=new SimpleDateFormat("hh:mm:ss a"); // 22:20
			
			Date n1=from.parse(info.get("fromTime").toString());
			Date n2=from.parse(info.get("toTime").toString());
			
			String fromTime= to.format(n1);
			String toTime=to.format(n2);
			Timestamp timeFrom=Timestamp.valueOf(fromDate.substring(0,10)+" "+fromTime);
			Timestamp timeTo= Timestamp.valueOf(toDate.substring(0,10)+" "+toTime);
			Map<String,Object> sendInfo=new HashMap<>();
			sendInfo.put("fromDate",timeFrom);
			sendInfo.put("toDate",timeTo);
			sendInfo.put("soldBy", info.get("soldBy"));
			SalesPaymentPdf salesPaymentPdf=getUserWiseIpOpDetailPatientWise(sendInfo,p);
			return ResponseEntity.ok(salesPaymentPdf);
		}
		else if(info.get("reportName").toString().equalsIgnoreCase("UserWiseIpOpAllUsers"))
		{
			String fromDate= info.get("fromDate").toString();
			String toDate=  info.get("toDate").toString();
			SimpleDateFormat to=new SimpleDateFormat("HH:mm:ss");  // 10:20 PM
			SimpleDateFormat from=new SimpleDateFormat("hh:mm:ss a"); // 22:20
			
			Date n1=from.parse(info.get("fromTime").toString());
			Date n2=from.parse(info.get("toTime").toString());
			
			String fromTime= to.format(n1);
			String toTime=to.format(n2);
			Timestamp timeFrom=Timestamp.valueOf(fromDate.substring(0,10)+" "+fromTime);
			Timestamp timeTo= Timestamp.valueOf(toDate.substring(0,10)+" "+toTime);
			Map<String,Object> sendInfo=new HashMap<>();
			sendInfo.put("fromDate",timeFrom);
			sendInfo.put("toDate",timeTo);
			sendInfo.put("soldBy", info.get("soldBy"));
			SalesPaymentPdf salesPaymentPdf=getUserWiseIpOpAllUsers(sendInfo,p);
			return ResponseEntity.ok(salesPaymentPdf);
		}
		else
		{
			return ResponseEntity.status(HttpStatus.FORBIDDEN).body("ALL DETAILS REQUIRED");
		}
		
	}
	
	@RequestMapping(value="/saleslist/{days}")
	public List<Object> displayList(@PathVariable int days){
		
		
		return salesServiceImpl.displaySalesList(days);
	}
	
	/*
	 * To get Sales list Pdf 
	 */
	@RequestMapping(value="/pdf/{billNo}")
	public Map<String, Object> getSalesPdf(@PathVariable("billNo") String billNo){
		
		Map<String, Object> map=new HashMap<>();
		
		SalesPaymentPdf salesPaymentPdf=salesPaymentPdfServiceImpl.getSalesPdf(billNo);
		
		map.put("billNo", salesPaymentPdf.getFileuri());
		
		return map;
	}
    
	
	// User shift summary
	// pdf for userwiseShidft report (summary)
	@RequestMapping(value = "/usershiftsummary", method = RequestMethod.POST)
	public SalesPaymentPdf getUserShiftDetailsSummary(@RequestBody Map<String, Object> userShift, Principal principal) {//createdBy(Security)
		User userSecurity=userServiceImpl.findByUserName(principal.getName());
		
		float salesTotalBillAmount = 0;
		float salesTotalDisc = 0;
		float salesTotalDueAmt = 0;
		float salesTotalRescpAmt = 0;

		float salesReturnTotalBillAmount = 0;
		float salesReturnTotalDisc = 0;
		float salesReturnTotalDueAmt = 0;
		float salesReturnTotalRescpAmt = 0;

		float salesCashAmt = 0;
		float returnCashAmt = 0;

		float salesChqAmt = 0;
		float returnChqAmt = 0;

		float salesCardAmt = 0;
		float returnCardAmt = 0;

		float salesDDAmt = 0;
		float returnDDAmt = 0;
		String billNo=null;
		
		float cashPlusCardAmt=0;
		float returnCashPlusCardAmt=0;
		float totalCashPlusCardAmt=0;
		
		//-----------------for returns--------
		float totalReturnBillAmt=0;
		float totalReturnDiscount =0;
		float totalReturnDueAmt=0;
		float totalReturnRecpAmt =0;
		float totalReturnCashAmt=0;
		float totalReturnChequeAmt =0;
		float totalReturnCardAmt=0;
		float totalReturnCPCAmt=0;
		
		
		//--------------------for sales------------------
		float total =0;
		float totalDiscount =0;
		float totalDueAmt=0;
		float totalRecpAmt =0;
		float totalCashAmt =0;
		float totalChequeAmt =0;
		float totalCardAmt =0;
		float totalDDAmt =0;
		float totalCPCAmt=0;
		
		String pType;
		
		Map<String, Object> user = userShift;

		String name=(String)user.get("soldBy");
		
		String[] docName=name.split("-");
		
		Logger.error(user.get("fromDate").toString());
		Logger.error(user.get("toDate").toString());
		Logger.error(docName[1]);
		List<Sales> salesList = salesRepository.findTheUserWiseShift(user.get("fromDate"), user.get("toDate"),
				docName[1]);
		
		if(salesList.isEmpty())
		{
			throw new RuntimeException(ConstantValues.REPORT_ERROR_MSG);
		}
		ArrayList<String> info = new ArrayList<>();
		// ---------
		if(!salesList.isEmpty())
		{
		for (Sales sales : salesList) {

			String bill1 = sales.getBillNo();

			if(sales.getPatientRegistration()!=null) 
			{
				pType = sales.getPatientRegistration().getpType();
				System.out.println(pType);
			}
			
			else 
			{
				pType="WALKERS";
				
			}

			float billAmnt = 0;
			float discount = 0;
			float dueAmt1 = 0;
			float recpAmt = 0;
			float cheque = 0;
		
			float card = 0;
			float cash = 0;
			float dd = 0;

			if (!info.contains(bill1)) 
			{
				List<Sales> findBill = salesRepository.findByBillNo(bill1);
				for (Sales saleInfo : findBill) 
				{
					
					
					if (saleInfo.getPaymentType().equalsIgnoreCase("Card")) 
					{
						card += saleInfo.getActualAmount();
					} 
					else if (saleInfo.getPaymentType().equalsIgnoreCase("Cheque")) 
					{
						cheque += saleInfo.getActualAmount();
						
					} 
					else if (saleInfo.getPaymentType().equalsIgnoreCase("Cash")) 
					{
						cash += saleInfo.getActualAmount();
					} 
					else if (saleInfo.getPaymentType().equalsIgnoreCase("DD")) 
					{
						dd += saleInfo.getActualAmount();
					}
					else if (saleInfo.getPaymentType().equalsIgnoreCase("Cash+Card")) 
					{
						cashPlusCardAmt += saleInfo.getActualAmount();
					}

					if(!saleInfo.getPaymentType().equalsIgnoreCase("Due"))
					{
						billAmnt += saleInfo.getActualAmount();
						System.out.println("bill Amt------------------------"+billAmnt);
						System.out.println("trunc Bill AMt----------------"+(billAmnt*100.0)/100.0);
					discount += saleInfo.getDiscount();
					recpAmt+=saleInfo.getActualAmount();
					}
					if (pType.equalsIgnoreCase("INPATIENT") && saleInfo.getPaid().equalsIgnoreCase("NO")) {
						
						System.out.println(pType);
						// billAmnt+=saleInfo.getAmount();
						dueAmt1 += saleInfo.getActualAmount();
						//recpAmt = 0;
						cheque = 0;
						card = 0;
						cash = 0;
						dd = 0;
						cashPlusCardAmt=0;
					} 
					
					
					

				}
				
				info.add(bill1);
				
				total += Math.round(billAmnt);
				totalDiscount += Math.round(discount);
				totalDueAmt += Math.round(dueAmt1);
				totalRecpAmt += Math.round(recpAmt);
				totalCashAmt += Math.round(cash);
				totalChequeAmt += Math.round(cheque);
				totalCardAmt += Math.round(card);
				totalDDAmt += Math.round(dd);
				totalCPCAmt+=Math.round(cashPlusCardAmt);

			}

		}
		}
		
		List<SalesReturn> salesReturnList = salesReturnRepository.findTheUserWiseShiftReturns(user.get("fromDate"),
				user.get("toDate"),docName[1]);
		ArrayList<String> info1 = new ArrayList<>();
		
		if(!salesReturnList.isEmpty())
		{
		for (SalesReturn sales : salesReturnList) {
			
			String bill1 = sales.getBillNo();
		
			Map<String, String> displayInfo = new HashMap<>();
			float billAmnt = 0;
			float discount = 0;
			float dueAmt1 = 0;
			float recpAmt = 0;
			float cheque = 0;
			float card = 0;
			float cash = 0;
			float dd = 0;
			//float cashPlusCardAmt=0;
			

			if (!info1.contains(bill1)) 
			{
				List<SalesReturn> findBill = salesReturnRepository.getByBill(bill1);
				for (SalesReturn saleInfo : findBill) 
				{
					//for convert db date to dmy format
					Timestamp date1 = saleInfo.getDate();
					DateFormat format1 = new SimpleDateFormat("dd-MMM-yyyy");
					Calendar cal = Calendar.getInstance();
					cal.setTimeInMillis(date1.getTime());
					String saleReturnDate = format1.format(cal.getTime());
					
					
					
					if (saleInfo.getPaymentType().equalsIgnoreCase("Card")) 
					{
						card += saleInfo.getAmount();
					} 
					else if (saleInfo.getPaymentType().equalsIgnoreCase("Cheque")) 
					{
						cheque += saleInfo.getAmount();
					} 
					else if (saleInfo.getPaymentType().equalsIgnoreCase("Cash")) 
					{
						cash += saleInfo.getAmount();
					} 
					
					else if (saleInfo.getPaymentType().equalsIgnoreCase("Cash+Card")) 
					{
						cashPlusCardAmt += saleInfo.getAmount();
					}

					
					billAmnt += saleInfo.getAmount();
					discount += saleInfo.getDiscount();
					dueAmt1=0;
					recpAmt =0;

					/*if (patientType.equalsIgnoreCase("INPATIENT")) 
					{
						// billAmnt+=saleInfo.getAmount();
						dueAmt1 = billAmnt;
						recpAmt = 0;
						cheque = 0;
						card = 0;
						cash = 0;
						dd = 0;

					}
					else 
					{
						recpAmt = billAmnt;
						dueAmt1 = 0;
					}

*/					}
			
				info1.add(bill1);

				
				totalReturnBillAmt += Math.round(billAmnt);
				totalReturnDiscount += Math.round(discount);
				totalReturnDueAmt += Math.round(dueAmt1);
				totalReturnRecpAmt += Math.round(recpAmt);
				totalReturnCashAmt += Math.round(cash);
				totalReturnChequeAmt += Math.round(cheque);
				totalReturnCardAmt += Math.round(card);
				totalReturnCPCAmt+=Math.round(cashPlusCardAmt);

			}

		}
	}
		
		
		
		
		
		
	
		SalesPaymentPdf salesPaymentPdf = null;

		try {

			byte[] pdfByte = null;
			ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();

			Document document = new Document(PageSize.A4.rotate());

			Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 10, Font.NORMAL);
			Font redFont1 = new Font(Font.FontFamily.TIMES_ROMAN, 10, Font.NORMAL, BaseColor.RED);
			Font headFontg = new Font(Font.FontFamily.TIMES_ROMAN, 10, Font.BOLD,BaseColor.MAGENTA);
			Font headFont = new Font(Font.FontFamily.TIMES_ROMAN, 10, Font.BOLD);
			//Font headFont = new Font(Font.FontFamily.TIMES_ROMAN, 10, Font.BOLD,BaseColor.GREEN);
			Font headFont1 = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD);
			PdfWriter writer = PdfWriter.getInstance(document, byteArrayOutputStream);
			HeaderFooterPageEvent event = new HeaderFooterPageEvent();
			 writer.setPageEvent(event);
			Resource fileResourcee = resourceLoader.getResource("classpath:udbhava.png");
			document.open();
			PdfPTable table = new PdfPTable(2);

			Image img = Image.getInstance(fileResourcee.getFile().getAbsolutePath());
			img.scaleAbsolute(75, 95);
			table.setWidthPercentage(105f);

			Phrase pq = new Phrase(new Chunk(img, 5, -80));

			//shantharam addr
			pq.add(new Chunk( ""
					+ ""
					+ "\n                                                                                                                                        Email : udbhavahospital@gmail.com",
			redFont));
			PdfPCell cellp = new PdfPCell(pq);
			
			
			
			PdfPCell cell1 = new PdfPCell();

			// for header Bold
			PdfPTable table96 = new PdfPTable(1);
			table96.setWidths(new float[] { 5f });
			table96.setSpacingBefore(10);

			PdfPCell hcell96;
			hcell96 = new PdfPCell(new Phrase("UDBHAVA PHARMACY", headFont1));
			hcell96.setBorder(Rectangle.NO_BORDER);
			hcell96.setHorizontalAlignment(Element.ALIGN_CENTER);
			hcell96.setPaddingLeft(25f);

			table96.addCell(hcell96);
			cell1.addElement(table96);

			// for header end
			//cell1.setFixedHeight(107f);
			
			PdfPTable table961 = new PdfPTable(1);
			table961.setWidths(new float[] { 5f });
			table961.setSpacingBefore(10);

			
			PdfPCell hcell71;
			hcell71 = new PdfPCell(new Phrase(ConstantValues.HOSPITAL_NAME, headFont1));
			hcell71.setBorder(Rectangle.NO_BORDER);
			hcell71.setHorizontalAlignment(Element.ALIGN_CENTER);
			hcell71.setPaddingLeft(25f);

			table961.addCell(hcell71);
			cell1.addElement(table961);

			
			cell1.addElement(pq);
			cell1.setHorizontalAlignment(Element.ALIGN_CENTER);
			cell1.setColspan(2);
			//table.addCell(cell1);

		//	PdfPCell cell19 = new PdfPCell();

			PdfPTable table21 = new PdfPTable(1);
			table21.setWidths(new float[] { 4f });
			table21.setSpacingBefore(10);

			PdfPCell hcell19;
			hcell19 = new PdfPCell(new Phrase("User Wise Shift Collection (Summary)", headFont1));
			hcell19.setBorder(Rectangle.NO_BORDER);
			hcell19.setHorizontalAlignment(Element.ALIGN_CENTER);
			// hcell19.setPaddingLeft(-70f);
			table21.addCell(hcell19);
			
			// calender format date

			String from = user.get("fromDate").toString();

			Timestamp timestamp = Timestamp.valueOf(from);
			DateFormat dateFormat = new SimpleDateFormat("dd-MMM-yyyy hh.mm aa ");

			Calendar calendar = Calendar.getInstance();
			calendar.setTimeInMillis(timestamp.getTime());

			String from1 = dateFormat.format(calendar.getTime());

			String to = user.get("toDate").toString();

			Timestamp timestamp1 = Timestamp.valueOf(to);
			DateFormat dateFormat1 = new SimpleDateFormat("dd-MMM-yyyy hh.mm aa ");

			Calendar calendar1 = Calendar.getInstance();
			calendar1.setTimeInMillis(timestamp1.getTime());

			String to1 = dateFormat1.format(calendar1.getTime());

			Date date = Calendar.getInstance().getTime();

			// Display a date in day, month, year format
			DateFormat formatter = new SimpleDateFormat("dd-MMM-yyyy hh.mm aa");
			String today = formatter.format(date).toString();

			PdfPCell hcell20;
			hcell20 = new PdfPCell(new Phrase("From Dt  : " + from1 + "           " + "Till Dt  : " + to1, redFont));
			hcell20.setBorder(Rectangle.NO_BORDER);
			hcell20.setHorizontalAlignment(Element.ALIGN_CENTER);
			// hcell19.setPaddingLeft(100f);
			table21.addCell(hcell20);
			cell1.addElement(table21);
			// -------------

			PdfPTable table3 = new PdfPTable(2);
			table3.setWidths(new float[] { 5f, 4f });
			table3.setSpacingBefore(10);

			PdfPCell hcell111;
			hcell111 = new PdfPCell(new Phrase("Printed By          :  " + userSecurity.getFirstName()+" "+userSecurity.getMiddleName()+" "+userSecurity.getLastName(), redFont));
			hcell111.setBorder(Rectangle.NO_BORDER);
			hcell111.setPaddingLeft(-70f);

			table3.addCell(hcell111);

			hcell111 = new PdfPCell(new Phrase("Printed Date & Time    :  " + today, redFont));
			hcell111.setBorder(Rectangle.NO_BORDER);
			// hcell11.setPaddingLeft(110f);
			hcell111.setPaddingRight(-70f);
			hcell111.setHorizontalAlignment(Element.ALIGN_RIGHT);

			table3.addCell(hcell111);

			PdfPCell hcell1;
			hcell1 = new PdfPCell(new Phrase("User Name         :  " + docName[0], redFont));
			hcell1.setBorder(Rectangle.NO_BORDER);
			hcell1.setPaddingLeft(-70f);
			table3.addCell(hcell1);

			hcell1 = new PdfPCell(new Phrase(" ", redFont));
			hcell1.setBorder(Rectangle.NO_BORDER);
			// hcell11.setPaddingLeft(110f);
			hcell1.setPaddingRight(-70f);
			hcell1.setHorizontalAlignment(Element.ALIGN_RIGHT);
			table3.addCell(hcell1);

		/*	cell19.setFixedHeight(80f);
			cell19.setColspan(2);
			cell19.addElement(table21);
			cell19.addElement(table3);
			// cell19.addElement(table4);
			table.addCell(cell19);

			PdfPCell cell31 = new PdfPCell();



			P*/
			cell1.addElement(table3);
			
			
			PdfPTable table1 = new PdfPTable(9);
			table1.setWidths(new float[] { 1f, 1.7f, 2f, 2f, 1.5f, 1.5f,2f, 2f, 2f });

			table1.setSpacingBefore(10);

			PdfPCell hcell;
			hcell = new PdfPCell(new Phrase("Reciept#", redFont));
			hcell.setBorder(Rectangle.NO_BORDER);
			hcell.setBackgroundColor(BaseColor.LIGHT_GRAY);
			hcell.setHorizontalAlignment(Element.ALIGN_LEFT);
			table1.addCell(hcell);

			hcell = new PdfPCell(new Phrase("Transaction Type", redFont));
			hcell.setBorder(Rectangle.NO_BORDER);
			hcell.setBackgroundColor(BaseColor.LIGHT_GRAY);
			hcell.setHorizontalAlignment(Element.ALIGN_CENTER);
			table1.addCell(hcell);

			hcell = new PdfPCell(new Phrase("Bill Amt", redFont));
			hcell.setBorder(Rectangle.NO_BORDER);
			hcell.setBackgroundColor(BaseColor.LIGHT_GRAY);
			hcell.setHorizontalAlignment(Element.ALIGN_CENTER);
			hcell.setPaddingLeft(20f);
			table1.addCell(hcell);

			hcell = new PdfPCell(new Phrase("Disc Amt", redFont));
			hcell.setBorder(Rectangle.NO_BORDER);
			hcell.setBackgroundColor(BaseColor.LIGHT_GRAY);
			hcell.setHorizontalAlignment(Element.ALIGN_CENTER);
			hcell.setPaddingLeft(20f);
			table1.addCell(hcell);

			hcell = new PdfPCell(new Phrase("Due Amt", redFont));
			hcell.setBorder(Rectangle.NO_BORDER);
			hcell.setBackgroundColor(BaseColor.LIGHT_GRAY);
			hcell.setHorizontalAlignment(Element.ALIGN_CENTER);
			table1.addCell(hcell);

			hcell = new PdfPCell(new Phrase("Recp Amt", redFont));
			hcell.setBorder(Rectangle.NO_BORDER);
			hcell.setBackgroundColor(BaseColor.LIGHT_GRAY);
			hcell.setHorizontalAlignment(Element.ALIGN_CENTER);
			table1.addCell(hcell);

			hcell = new PdfPCell(new Phrase("Cash Amt", redFont));
			hcell.setBorder(Rectangle.NO_BORDER);
			hcell.setBackgroundColor(BaseColor.LIGHT_GRAY);
			hcell.setHorizontalAlignment(Element.ALIGN_CENTER);
			table1.addCell(hcell);

			

			hcell = new PdfPCell(new Phrase("Card Amt", redFont));
			hcell.setBorder(Rectangle.NO_BORDER);
			hcell.setBackgroundColor(BaseColor.LIGHT_GRAY);
			hcell.setHorizontalAlignment(Element.ALIGN_CENTER);
			table1.addCell(hcell);
			
			hcell = new PdfPCell(new Phrase("Cash+Card Amt", redFont));
			hcell.setBorder(Rectangle.NO_BORDER);
			hcell.setBackgroundColor(BaseColor.LIGHT_GRAY);
			hcell.setHorizontalAlignment(Element.ALIGN_CENTER);
			table1.addCell(hcell);


			cell1.addElement(table1);
			
		
			
			
		//	PdfPCell cell32 = new PdfPCell();

			PdfPTable table2 = new PdfPTable(9);
			table2.setWidths(new float[] { 1f, 1.7f, 2f, 2f, 1.5f, 1.5f,2f, 2f, 2f });

			table2.setSpacingBefore(10);

			if(!salesList.isEmpty())
			{
				PdfPCell hcell2;
			hcell2 = new PdfPCell(new Phrase("1", redFont));
			hcell2.setBorder(Rectangle.NO_BORDER);
			hcell2.setBackgroundColor(BaseColor.WHITE);
			hcell2.setHorizontalAlignment(Element.ALIGN_LEFT);
			table2.addCell(hcell2);

			hcell2 = new PdfPCell(new Phrase("Sales", redFont));
			hcell2.setBorder(Rectangle.NO_BORDER);
			hcell2.setBackgroundColor(BaseColor.WHITE);
			hcell2.setHorizontalAlignment(Element.ALIGN_CENTER);
			table2.addCell(hcell2);

			hcell2 = new PdfPCell(new Phrase(String.valueOf(Math.round(total)), redFont));
			hcell2.setBorder(Rectangle.NO_BORDER);
			hcell2.setBackgroundColor(BaseColor.WHITE);
			hcell2.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell2.setPaddingRight(29f);
			table2.addCell(hcell2);

			hcell2 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalDiscount)), redFont));
			hcell2.setBorder(Rectangle.NO_BORDER);
			hcell2.setBackgroundColor(BaseColor.WHITE);
			hcell2.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell2.setPaddingRight(26f);
			table2.addCell(hcell2);

			hcell2 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalDueAmt)), redFont));
			hcell2.setBorder(Rectangle.NO_BORDER);
			hcell2.setBackgroundColor(BaseColor.WHITE);
			hcell2.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell2.setPaddingRight(19f);
			table2.addCell(hcell2);

			hcell2 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalRecpAmt)), redFont));
			hcell2.setBorder(Rectangle.NO_BORDER);
			hcell2.setBackgroundColor(BaseColor.WHITE);
			hcell2.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell2.setPaddingRight(20f);
			table2.addCell(hcell2);

			hcell2 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalCashAmt)), redFont));
			hcell2.setBorder(Rectangle.NO_BORDER);
			hcell2.setBackgroundColor(BaseColor.WHITE);
			hcell2.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell2.setPaddingRight(30f);
			table2.addCell(hcell2);

		

			hcell2 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalCardAmt)), redFont));
			hcell2.setBorder(Rectangle.NO_BORDER);
			hcell2.setBackgroundColor(BaseColor.WHITE);
			hcell2.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell2.setPaddingRight(30f);
			table2.addCell(hcell2);
			
			 Logger.error("Cash+Card"+ String.valueOf(cashPlusCardAmt));
			hcell2 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalCPCAmt)), redFont));
			hcell2.setBorder(Rectangle.NO_BORDER);
			hcell2.setBackgroundColor(BaseColor.WHITE);
			hcell2.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell2.setPaddingRight(20f);
			table2.addCell(hcell2);

			
			}
			else
			{
				
				PdfPCell hcell2;
				hcell2 = new PdfPCell(new Phrase("1", redFont));
				hcell2.setBorder(Rectangle.NO_BORDER);
				hcell2.setBackgroundColor(BaseColor.WHITE);
				hcell2.setHorizontalAlignment(Element.ALIGN_LEFT);
				table2.addCell(hcell2);

				hcell2 = new PdfPCell(new Phrase("Sales", redFont));
				hcell2.setBorder(Rectangle.NO_BORDER);
				hcell2.setBackgroundColor(BaseColor.WHITE);
				hcell2.setHorizontalAlignment(Element.ALIGN_CENTER);
				table2.addCell(hcell2);

				hcell2 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
				hcell2.setBorder(Rectangle.NO_BORDER);
				hcell2.setBackgroundColor(BaseColor.WHITE);
				hcell2.setHorizontalAlignment(Element.ALIGN_RIGHT);
				hcell2.setPaddingRight(29f);
				table2.addCell(hcell2);

				hcell2 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
				hcell2.setBorder(Rectangle.NO_BORDER);
				hcell2.setBackgroundColor(BaseColor.WHITE);
				hcell2.setHorizontalAlignment(Element.ALIGN_RIGHT);
				hcell2.setPaddingRight(26f);
				table2.addCell(hcell2);

				hcell2 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
				hcell2.setBorder(Rectangle.NO_BORDER);
				hcell2.setBackgroundColor(BaseColor.WHITE);
				hcell2.setHorizontalAlignment(Element.ALIGN_RIGHT);
				hcell2.setPaddingRight(19f);
				table2.addCell(hcell2);

				hcell2 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
				hcell2.setBorder(Rectangle.NO_BORDER);
				hcell2.setBackgroundColor(BaseColor.WHITE);
				hcell2.setHorizontalAlignment(Element.ALIGN_RIGHT);
				hcell2.setPaddingRight(20f);
				table2.addCell(hcell2);

				hcell2 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
				hcell2.setBorder(Rectangle.NO_BORDER);
				hcell2.setBackgroundColor(BaseColor.WHITE);
				hcell2.setHorizontalAlignment(Element.ALIGN_RIGHT);
				hcell2.setPaddingRight(30f);
				table2.addCell(hcell2);

			

				hcell2 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
				hcell2.setBorder(Rectangle.NO_BORDER);
				hcell2.setBackgroundColor(BaseColor.WHITE);
				hcell2.setHorizontalAlignment(Element.ALIGN_RIGHT);
				hcell2.setPaddingRight(30f);
				table2.addCell(hcell2);
				
				 Logger.error("Cash+Card"+ String.valueOf(cashPlusCardAmt));
				hcell2 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
				hcell2.setBorder(Rectangle.NO_BORDER);
				hcell2.setBackgroundColor(BaseColor.WHITE);
				hcell2.setHorizontalAlignment(Element.ALIGN_RIGHT);
				hcell2.setPaddingRight(20f);
				table2.addCell(hcell2);

			}
			
			
			
			
				if(!salesReturnList.isEmpty())
				{
			PdfPCell hcell3;
			hcell3 = new PdfPCell(new Phrase("2", redFont));
			hcell3.setBorder(Rectangle.NO_BORDER);
			hcell3.setBackgroundColor(BaseColor.WHITE);
			hcell3.setHorizontalAlignment(Element.ALIGN_LEFT);
			table2.addCell(hcell3);

			hcell3 = new PdfPCell(new Phrase("Returns", redFont1));
			hcell3.setBorder(Rectangle.NO_BORDER);
			hcell3.setBackgroundColor(BaseColor.WHITE);
			hcell3.setHorizontalAlignment(Element.ALIGN_CENTER);
			table2.addCell(hcell3);

			hcell3 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalReturnBillAmt)), redFont1));
			hcell3.setBorder(Rectangle.NO_BORDER);
			hcell3.setBackgroundColor(BaseColor.WHITE);
			hcell3.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell3.setPaddingRight(29f);
			table2.addCell(hcell3);

			hcell3 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalReturnDiscount)), redFont1));
			hcell3.setBorder(Rectangle.NO_BORDER);
			hcell3.setBackgroundColor(BaseColor.WHITE);
			hcell3.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell3.setPaddingRight(26f);
			table2.addCell(hcell3);

			hcell3 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalReturnDueAmt)), redFont1));
			hcell3.setBorder(Rectangle.NO_BORDER);
			hcell3.setBackgroundColor(BaseColor.WHITE);
			hcell3.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell3.setPaddingRight(19f);
			table2.addCell(hcell3);

			hcell3 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalReturnRecpAmt)), redFont1));
			hcell3.setBorder(Rectangle.NO_BORDER);
			hcell3.setBackgroundColor(BaseColor.WHITE);
			hcell3.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell3.setPaddingRight(20f);
			table2.addCell(hcell3);

			hcell3 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalReturnCashAmt)), redFont1));
			hcell3.setBorder(Rectangle.NO_BORDER);
			hcell3.setBackgroundColor(BaseColor.WHITE);
			hcell3.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell3.setPaddingRight(30f);
			table2.addCell(hcell3);

			

			hcell3 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalReturnCardAmt)), redFont1));
			hcell3.setBorder(Rectangle.NO_BORDER);
			hcell3.setBackgroundColor(BaseColor.WHITE);
			hcell3.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell3.setPaddingRight(30f);
			table2.addCell(hcell3);
			 Logger.error("Cash+Card"+ String.valueOf(returnCashPlusCardAmt));
			hcell3 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalReturnCPCAmt)), redFont1));
			hcell3.setBorder(Rectangle.NO_BORDER);
			hcell3.setBackgroundColor(BaseColor.WHITE);
			hcell3.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell3.setPaddingRight(20f);
			table2.addCell(hcell3);

			
			}
			else
			{
				

				PdfPCell hcell3;
				hcell3 = new PdfPCell(new Phrase("2", redFont));
				hcell3.setBorder(Rectangle.NO_BORDER);
				hcell3.setBackgroundColor(BaseColor.WHITE);
				hcell3.setHorizontalAlignment(Element.ALIGN_LEFT);
				table2.addCell(hcell3);

				hcell3 = new PdfPCell(new Phrase("Returns", redFont1));
				hcell3.setBorder(Rectangle.NO_BORDER);
				hcell3.setBackgroundColor(BaseColor.WHITE);
				hcell3.setHorizontalAlignment(Element.ALIGN_CENTER);
				table2.addCell(hcell3);

				hcell3 = new PdfPCell(new Phrase(String.valueOf("0"), redFont1));
				hcell3.setBorder(Rectangle.NO_BORDER);
				hcell3.setBackgroundColor(BaseColor.WHITE);
				hcell3.setHorizontalAlignment(Element.ALIGN_RIGHT);
				hcell3.setPaddingRight(29f);
				table2.addCell(hcell3);

				hcell3 = new PdfPCell(new Phrase(String.valueOf("0"), redFont1));
				hcell3.setBorder(Rectangle.NO_BORDER);
				hcell3.setBackgroundColor(BaseColor.WHITE);
				hcell3.setHorizontalAlignment(Element.ALIGN_RIGHT);
				hcell3.setPaddingRight(26f);
				table2.addCell(hcell3);

				hcell3 = new PdfPCell(new Phrase(String.valueOf("0"), redFont1));
				hcell3.setBorder(Rectangle.NO_BORDER);
				hcell3.setBackgroundColor(BaseColor.WHITE);
				hcell3.setHorizontalAlignment(Element.ALIGN_RIGHT);
				hcell3.setPaddingRight(19f);
				table2.addCell(hcell3);

				hcell3 = new PdfPCell(new Phrase(String.valueOf("0"), redFont1));
				hcell3.setBorder(Rectangle.NO_BORDER);
				hcell3.setBackgroundColor(BaseColor.WHITE);
				hcell3.setHorizontalAlignment(Element.ALIGN_RIGHT);
				hcell3.setPaddingRight(20f);
				table2.addCell(hcell3);

				hcell3 = new PdfPCell(new Phrase(String.valueOf("0"), redFont1));
				hcell3.setBorder(Rectangle.NO_BORDER);
				hcell3.setBackgroundColor(BaseColor.WHITE);
				hcell3.setHorizontalAlignment(Element.ALIGN_RIGHT);
				hcell3.setPaddingRight(30f);
				table2.addCell(hcell3);

				

				hcell3 = new PdfPCell(new Phrase(String.valueOf("0"), redFont1));
				hcell3.setBorder(Rectangle.NO_BORDER);
				hcell3.setBackgroundColor(BaseColor.WHITE);
				hcell3.setHorizontalAlignment(Element.ALIGN_RIGHT);
				hcell3.setPaddingRight(30f);
				table2.addCell(hcell3);
				 Logger.error("Cash+Card"+ String.valueOf(returnCashPlusCardAmt));
				hcell3 = new PdfPCell(new Phrase(String.valueOf("0"), redFont1));
				hcell3.setBorder(Rectangle.NO_BORDER);
				hcell3.setBackgroundColor(BaseColor.WHITE);
				hcell3.setHorizontalAlignment(Element.ALIGN_RIGHT);
				hcell3.setPaddingRight(20f);
				table2.addCell(hcell3);


			}
			int count = 0;
			/*cell31.setColspan(2);
			table1.setWidthPercentage(100f);
			cell31.addElement(table1);
			table.addCell(cell31);

			cell32.setColspan(2);
			table2.setWidthPercentage(100f);
			cell32.addElement(table2);
			table.addCell(cell32);*/

			//
			
			
			/*cell19.setColspan(2);
			cell19.addElement(table21);
			cell19.addElement(table3);*/
			table1.setWidthPercentage(100);
			table2.setWidthPercentage(100);
			cell1.addElement(table2);
			/*cell19.addElement(table1);
			cell19.addElement(table2);
			table.addCell(cell19);*/
			
			
			PdfPTable table211 = new PdfPTable(1);
			table211.setWidths(new float[] { 25f });
			//table211.setSpacingBefore(10);

			PdfPCell hcell191;
			hcell191 = new PdfPCell(new Phrase("___________________________________________________________________________________________________________________________________", headFont1));
			hcell191.setBorder(Rectangle.NO_BORDER);
			hcell191.setHorizontalAlignment(Element.ALIGN_CENTER);
			table211.setWidthPercentage(100f);
			// hcell19.setPaddingLeft(-70f);
			table211.addCell(hcell191);
			cell1.addElement(table211);
			
			float totalCashAmount=0;
			float totalCardAmount=0;
			float totalChequeAmount=0;
			float totalDDAmount=0;
			float totalCashPlusCardAmount=0;
			float cashAmount=0;
			float cardAmount=0;
			float chqAmount=0;
			float ddAmount=0;
			float cashCPAmount=0;
			float cardCPAmount=0;
			float chqCPAmount=0;
			float ddCPAmount=0;
		
			
			
			
			
			
			totalCashAmount=Math.round(totalCashAmt - totalReturnCashAmt);
			totalCardAmount=Math.round(totalCardAmt - totalReturnCardAmt);
			totalCashPlusCardAmount=Math.round(totalCPCAmt-totalReturnCPCAmt);
			 Logger.error("Cash+Card sales & return"+ String.valueOf(cashPlusCardAmt +" "+returnCashPlusCardAmt));
			//PdfPCell cell310 = new PdfPCell();

			PdfPTable table10 = new PdfPTable(9);
			table10.setWidths(new float[] { 0.5f, 2.5f, 2f, 2f, 1.5f, 1.5f, 2f, 2f, 2f });

			//table10.setSpacingBefore(10);

			PdfPCell hcell10;

			hcell10 = new PdfPCell(new Phrase("", headFont));
			hcell10.setBorder(Rectangle.NO_BORDER);
			hcell10.setBackgroundColor(BaseColor.WHITE);
			hcell10.setHorizontalAlignment(Element.ALIGN_CENTER);
			table10.addCell(hcell10);

			hcell10 = new PdfPCell(new Phrase("Total Collection :", headFont));
			hcell10.setBorder(Rectangle.NO_BORDER);
			hcell10.setBackgroundColor(BaseColor.WHITE);
			hcell10.setHorizontalAlignment(Element.ALIGN_LEFT);
			hcell10.setPaddingLeft(-10f);
			table10.addCell(hcell10);

			hcell10 = new PdfPCell(
					new Phrase(String.valueOf(Math.round(total - totalReturnBillAmt)), headFont));
			hcell10.setBorder(Rectangle.NO_BORDER);
			hcell10.setBackgroundColor(BaseColor.WHITE);
			hcell10.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell10.setPaddingRight(37f);
			table10.addCell(hcell10);

			hcell10 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalDiscount - totalReturnDiscount)), headFont));
			hcell10.setBorder(Rectangle.NO_BORDER);
			hcell10.setBackgroundColor(BaseColor.WHITE);
			hcell10.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell10.setPaddingRight(33f);
			table10.addCell(hcell10);

			hcell10 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalDueAmt - totalReturnDueAmt)), headFont));
			hcell10.setBorder(Rectangle.NO_BORDER);
			hcell10.setBackgroundColor(BaseColor.WHITE);
			hcell10.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell10.setPaddingRight(28f);
			table10.addCell(hcell10);

			hcell10 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalRecpAmt - totalReturnRecpAmt)), headFont));
			hcell10.setBorder(Rectangle.NO_BORDER);
			hcell10.setBackgroundColor(BaseColor.WHITE);
			// hcell10.setPaddingRight(14f);
			hcell10.setHorizontalAlignment(Element.ALIGN_RIGHT);
			 hcell10.setPaddingRight(25f);
			table10.addCell(hcell10);

			hcell10 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalCashAmount)), headFont));
			hcell10.setBorder(Rectangle.NO_BORDER);
			hcell10.setBackgroundColor(BaseColor.WHITE);
			hcell10.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell10.setPaddingRight(32f);
			table10.addCell(hcell10);

			

			hcell10 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalCardAmount)), headFont));
			hcell10.setBorder(Rectangle.NO_BORDER);
			hcell10.setBackgroundColor(BaseColor.WHITE);
			hcell10.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell10.setPaddingRight(30f);
			table10.addCell(hcell10);
			
			hcell10 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalCashPlusCardAmount)), headFont));
			hcell10.setBorder(Rectangle.NO_BORDER);
			hcell10.setBackgroundColor(BaseColor.WHITE);
			hcell10.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell10.setPaddingRight(20f);
			table10.addCell(hcell10);

			
			
			table10.setWidthPercentage(100f);
			cell1.addElement(table10);
			//
		//	PdfPCell cell319 = new PdfPCell();

			
		
			PdfPTable table213 = new PdfPTable(1);
			table213.setWidths(new float[] { 25f });
			//table211.setSpacingBefore(10);

			PdfPCell hcell193;
			hcell193 = new PdfPCell(new Phrase("____________________________________________________________________________________________________________________________________", headFont1));
			hcell193.setBorder(Rectangle.NO_BORDER);
			hcell193.setHorizontalAlignment(Element.ALIGN_CENTER);
			table213.setWidthPercentage(100f);
			hcell19.setPaddingTop(10f);
			table213.addCell(hcell193);
			cell1.addElement(table213);
			
			
			//------------------------------for cash plus card payments--------------------------
			
			//PdfPCell cell322 = new PdfPCell();
			
			/*PdfPTable table191 = new PdfPTable(9);
			table191.setWidths(new float[] { 7f, 1f, 2f, 2f, 1.5f, 1.5f,2f, 2f, 2f });

			//table191.setSpacingBefore(10);

			PdfPCell hcell181;

			hcell181 = new PdfPCell(new Phrase("GRAND TOTAL AMOUNT :", headFont));
			hcell181.setBorder(Rectangle.NO_BORDER);
			hcell181.setBackgroundColor(BaseColor.WHITE);
			hcell181.setHorizontalAlignment(Element.ALIGN_LEFT);
			hcell181.setPaddingLeft(10f);
			table191.addCell(hcell181);

			hcell181 = new PdfPCell(new Phrase("", headFont));
			hcell181.setBorder(Rectangle.NO_BORDER);
			hcell181.setBackgroundColor(BaseColor.WHITE);
			hcell181.setHorizontalAlignment(Element.ALIGN_RIGHT);
			//hcell181.setPaddingRight(8f);
			table191.addCell(hcell181);

			hcell181 = new PdfPCell(
					new Phrase("", headFont));
			hcell181.setBorder(Rectangle.NO_BORDER);
			hcell181.setBackgroundColor(BaseColor.WHITE);
			hcell181.setHorizontalAlignment(Element.ALIGN_RIGHT);
			//hcell181.setPaddingRight(9f);
			table191.addCell(hcell181);

			hcell181 = new PdfPCell(new Phrase("", headFont));
			hcell181.setBorder(Rectangle.NO_BORDER);
			hcell181.setBackgroundColor(BaseColor.WHITE);
			hcell181.setHorizontalAlignment(Element.ALIGN_RIGHT);
			//hcell181.setPaddingRight(-8f);
			table191.addCell(hcell181);

			hcell181 = new PdfPCell(new Phrase("", headFont));
			hcell181.setBorder(Rectangle.NO_BORDER);
			hcell181.setBackgroundColor(BaseColor.WHITE);
			hcell181.setHorizontalAlignment(Element.ALIGN_RIGHT);
			//hcell181.setPaddingRight(-48f);
			table191.addCell(hcell181);

			hcell181 = new PdfPCell(new Phrase("", headFont));
			hcell181.setBorder(Rectangle.NO_BORDER);
			hcell181.setBackgroundColor(BaseColor.WHITE);
			// hcell18.setPaddingRight(14f);
			hcell181.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell181.setPaddingRight(-60f);
			table191.addCell(hcell181);

			
			hcell181 = new PdfPCell(new Phrase("", headFont));
			hcell181.setBorder(Rectangle.NO_BORDER);
			hcell181.setBackgroundColor(BaseColor.WHITE);
			hcell181.setHorizontalAlignment(Element.ALIGN_RIGHT);
			//hcell181.setPaddingRight(-21f);
			table191.addCell(hcell181);

			hcell181 = new PdfPCell(new Phrase("", headFont));
			hcell181.setBorder(Rectangle.NO_BORDER);
			hcell181.setBackgroundColor(BaseColor.WHITE);
			hcell181.setHorizontalAlignment(Element.ALIGN_RIGHT);
			//hcell181.setPaddingRight(8f);
			table191.addCell(hcell181);
			
			hcell181 = new PdfPCell(new Phrase("", headFont));
			hcell181.setBorder(Rectangle.NO_BORDER);
			hcell181.setBackgroundColor(BaseColor.WHITE);
			hcell181.setHorizontalAlignment(Element.ALIGN_RIGHT);
			//hcell181.setPaddingRight(-10f);
			table191.addCell(hcell181);

		
			cell322.addElement(table191);
			cell322.setColspan(2);
			table.addCell(cell322);
			
			table191.setWidthPercentage(100f);
			cell1.addElement(table191);
			
		//	PdfPCell cell320 = new PdfPCell();
			
			
			PdfPTable table214 = new PdfPTable(1);
			table214.setWidths(new float[] { 25f });
			//table211.setSpacingBefore(10);

			PdfPCell hcell194;
			hcell194 = new PdfPCell(new Phrase("____________________________________________________________________________________________________________________________________", headFont1));
			hcell194.setBorder(Rectangle.NO_BORDER);
			hcell194.setHorizontalAlignment(Element.ALIGN_CENTER);
			table214.setWidthPercentage(100f);
			hcell19.setPaddingTop(10f);
			table214.addCell(hcell194);
			cell1.addElement(table214);*/
			
			
			
			List<String> info2=new ArrayList<>();
			List<CashPlusCard> cashPlusCard=cashPlusCardRepository.findTheSalesCashPlusCardAmt(user.get("fromDate"), user.get("toDate"), docName[1]);
			
			String umr;
			float cashAmount1=0;
			float cardAmount1=0;
			float totalCashAmount1=0;
			float totalCardAmount1=0;
			for (CashPlusCard sales2 : cashPlusCard) {
				//displayInfo.put("umr", umr);
				
				
				if(sales2.getPatientRegistrationCashCard()!=null) 
				{
					pType = sales2.getPatientRegistrationCashCard().getpType();
					System.out.println(pType);
				}
				
				else 
				{
					pType="WALKERS";
					
				}
				
				billNo=sales2.getBillNo();
				if (!info2.contains(billNo)) 
				{
				CashPlusCard cashPlusCards=cashPlusCardRepository.findByBillNoAndDescription(billNo);
				//String billNo = sales2.getBillNo();
				
				if(cashPlusCards!=null)
				{
					if(billNo!=null)
					{
					if(sales2.getPatientRegistrationCashCard()!=null && !pType.equalsIgnoreCase("WALKERS"))
					{
					umr=sales2.getPatientRegistrationCashCard().getPatientDetails().getUmr();
					}
					else
					{
						umr=" ";
					}
				

				
				
					if(cashPlusCards.getDescription().equalsIgnoreCase("Sales") || cashPlusCards.getDescription().equalsIgnoreCase("Walkin Sales"))
					{
					
						
							if(cashPlusCards.getCashAmount()!=0)
							{	
						
							cashAmount1=cashPlusCards.getCashAmount();
							totalCashAmount1+=cashAmount1;
							
						}
						if(cashPlusCards.getCardAmount()!=0)
						{
							cardAmount1+=cashPlusCards.getCardAmount();
							totalCardAmount1+=cardAmount1;
							
						}
						cashAmount1=0;
						cardAmount1=0;
						}
						
						
					}
					
					
					
					}
				info2.add(billNo);
			
				}
		
			
			}
			
			
			
			

			

			cashCPAmount = totalCashAmount + totalCashAmount1;

			cardCPAmount = totalCardAmount + totalCardAmount1;
			
			
			
			PdfPTable table194 = new PdfPTable(9);
			table194.setWidths(new float[] {7f, 1f, 3f, 3f, 1.5f, 1.5f,2f, 2f, 2f});

			//table192.setSpacingBefore(10);

			PdfPCell hcell184;

			hcell184 = new PdfPCell(new Phrase("CASH + CARD AMOUNT:", headFontg));
			hcell184.setBorder(Rectangle.NO_BORDER);
			hcell184.setBackgroundColor(BaseColor.WHITE);
			hcell184.setHorizontalAlignment(Element.ALIGN_LEFT);
			hcell184.setPaddingLeft(10);
			table194.addCell(hcell184);

			hcell184 = new PdfPCell(new Phrase("", headFont));
			hcell184.setBorder(Rectangle.NO_BORDER);
			hcell184.setBackgroundColor(BaseColor.WHITE);
			hcell184.setHorizontalAlignment(Element.ALIGN_LEFT);
			hcell184.setPaddingLeft(10);
			table194.addCell(hcell184);

			hcell184 = new PdfPCell(new Phrase("Cash Amount", headFont));
			hcell184.setBorder(Rectangle.NO_BORDER);
			hcell184.setBackgroundColor(BaseColor.WHITE);
			hcell184.setHorizontalAlignment(Element.ALIGN_LEFT);
			hcell184.setPaddingLeft(-20);
			table194.addCell(hcell184);

			hcell184 = new PdfPCell(new Phrase("Card Amount", headFont));
			hcell184.setBorder(Rectangle.NO_BORDER);
			hcell184.setBackgroundColor(BaseColor.WHITE);
			hcell184.setHorizontalAlignment(Element.ALIGN_LEFT);
			hcell184.setPaddingLeft(-20);
			table194.addCell(hcell184);

			hcell184 = new PdfPCell(new Phrase("", headFont));
			hcell184.setBorder(Rectangle.NO_BORDER);
			hcell184.setBackgroundColor(BaseColor.WHITE);
			hcell184.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell184.setPaddingRight(-48f);
			table194.addCell(hcell184);

			hcell184 = new PdfPCell(new Phrase("", headFont));
			hcell184.setBorder(Rectangle.NO_BORDER);
			hcell184.setBackgroundColor(BaseColor.WHITE);
			// hcell18.setPaddingRight(14f);
			hcell184.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell184.setPaddingRight(-60f);
			table194.addCell(hcell184);

			

			hcell184 = new PdfPCell(new Phrase("", headFont));
			hcell184.setBorder(Rectangle.NO_BORDER);
			hcell184.setBackgroundColor(BaseColor.WHITE);
			hcell184.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell184.setPaddingRight(-21f);
			table194.addCell(hcell184);

			hcell184 = new PdfPCell(new Phrase("", headFont));
			hcell184.setBorder(Rectangle.NO_BORDER);
			hcell184.setBackgroundColor(BaseColor.WHITE);
			hcell184.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell184.setPaddingRight(8f);
			table194.addCell(hcell184);
			
			hcell184 = new PdfPCell(new Phrase("", headFont));
			hcell184.setBorder(Rectangle.NO_BORDER);
			hcell184.setBackgroundColor(BaseColor.WHITE);
			hcell184.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell184.setPaddingRight(-10f);
			table194.addCell(hcell184);

			
		
			table194.setWidthPercentage(100f);
			cell1.addElement(table194);
			
			

		
			

			PdfPTable table222 = new PdfPTable(1);
			table222.setWidths(new float[] { 25f });
			//table211.setSpacingBefore(10);

			PdfPCell hcell129;
			hcell129 = new PdfPCell(new Phrase("____________________________________________________________________________________________________________________________________", headFont1));
			hcell129.setBorder(Rectangle.NO_BORDER);
			hcell129.setHorizontalAlignment(Element.ALIGN_CENTER);
			table222.setWidthPercentage(100f);
			hcell19.setPaddingTop(10f);
			table222.addCell(hcell129);
			cell1.addElement(table222);
			
			
			PdfPTable table197 = new PdfPTable(9);
			table197.setWidths(new float[] {3f, 1f, 3f, 3f, 1.5f, 1.5f,2f, 2f, 2f});

			//table192.setSpacingBefore(10);

			PdfPCell hcell187;

			hcell187 = new PdfPCell(new Phrase("", headFont));
			hcell187.setBorder(Rectangle.NO_BORDER);
			hcell187.setBackgroundColor(BaseColor.WHITE);
			hcell187.setHorizontalAlignment(Element.ALIGN_LEFT);
			hcell187.setPaddingLeft(10);
			table197.addCell(hcell187);

			hcell187 = new PdfPCell(new Phrase("", headFont));
			hcell187.setBorder(Rectangle.NO_BORDER);
			hcell187.setBackgroundColor(BaseColor.WHITE);
			hcell187.setHorizontalAlignment(Element.ALIGN_LEFT);
			hcell187.setPaddingLeft(10);
			table197.addCell(hcell187);

			hcell187 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalCashAmount1)), headFont));
			hcell187.setBorder(Rectangle.NO_BORDER);
			hcell187.setBackgroundColor(BaseColor.WHITE);
			hcell187.setHorizontalAlignment(Element.ALIGN_LEFT);
			hcell187.setPaddingLeft(110f);
			table197.addCell(hcell187);

			hcell187 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalCardAmount1)), headFont));
			hcell187.setBorder(Rectangle.NO_BORDER);
			hcell187.setBackgroundColor(BaseColor.WHITE);
			hcell187.setHorizontalAlignment(Element.ALIGN_LEFT);
			hcell187.setPaddingLeft(110f);
			table197.addCell(hcell187);

			hcell187 = new PdfPCell(new Phrase("", headFont));
			hcell187.setBorder(Rectangle.NO_BORDER);
			hcell187.setBackgroundColor(BaseColor.WHITE);
			hcell187.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell187.setPaddingRight(-48f);
			table197.addCell(hcell187);

			hcell187 = new PdfPCell(new Phrase("", headFont));
			hcell187.setBorder(Rectangle.NO_BORDER);
			hcell187.setBackgroundColor(BaseColor.WHITE);
			// hcell18.setPaddingRight(14f);
			hcell187.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell187.setPaddingRight(-60f);
			table197.addCell(hcell187);

			

			hcell187 = new PdfPCell(new Phrase("", headFont));
			hcell187.setBorder(Rectangle.NO_BORDER);
			hcell187.setBackgroundColor(BaseColor.WHITE);
			hcell187.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell187.setPaddingRight(-21f);
			table197.addCell(hcell187);

			hcell187 = new PdfPCell(new Phrase("", headFont));
			hcell187.setBorder(Rectangle.NO_BORDER);
			hcell187.setBackgroundColor(BaseColor.WHITE);
			hcell187.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell187.setPaddingRight(8f);
			table197.addCell(hcell187);
			
			hcell187 = new PdfPCell(new Phrase("", headFont));
			hcell187.setBorder(Rectangle.NO_BORDER);
			hcell187.setBackgroundColor(BaseColor.WHITE);
			hcell187.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell187.setPaddingRight(-10f);
			table197.addCell(hcell187);

			
		
			table197.setWidthPercentage(100f);
			cell1.addElement(table197);

			

			PdfPTable table221 = new PdfPTable(1);
			table221.setWidths(new float[] { 25f });
			//table211.setSpacingBefore(10);

			PdfPCell hcell126;
			hcell126 = new PdfPCell(new Phrase("____________________________________________________________________________________________________________________________________", headFont1));
			hcell126.setBorder(Rectangle.NO_BORDER);
			hcell126.setHorizontalAlignment(Element.ALIGN_CENTER);
			table221.setWidthPercentage(100f);
			hcell19.setPaddingTop(10f);
			table221.addCell(hcell126);
			cell1.addElement(table221);
			
			
			
			PdfPTable table198 = new PdfPTable(9);
			table198.setWidths(new float[] {7f, 1f, 1f, 3f, 1.5f, 1.5f,2f, 2f, 2f});

			//table192.setSpacingBefore(10);

			PdfPCell hcell189;

			hcell189 = new PdfPCell(new Phrase("TOTAL COLLECTED AMOUNT:", headFontg));
			hcell189.setBorder(Rectangle.NO_BORDER);
			hcell189.setBackgroundColor(BaseColor.WHITE);
			hcell189.setHorizontalAlignment(Element.ALIGN_LEFT);
			hcell189.setPaddingLeft(10);
			table198.addCell(hcell189);

			hcell189 = new PdfPCell(new Phrase("", headFont));
			hcell189.setBorder(Rectangle.NO_BORDER);
			hcell189.setBackgroundColor(BaseColor.WHITE);
			hcell189.setHorizontalAlignment(Element.ALIGN_LEFT);
			hcell189.setPaddingLeft(10);
			table198.addCell(hcell189);

			hcell189 = new PdfPCell(new Phrase("", headFont));
			hcell189.setBorder(Rectangle.NO_BORDER);
			hcell189.setBackgroundColor(BaseColor.WHITE);
			hcell189.setHorizontalAlignment(Element.ALIGN_LEFT);
			hcell189.setPaddingLeft(10);
			table198.addCell(hcell189);

			hcell189 = new PdfPCell(new Phrase("", headFont));
			hcell189.setBorder(Rectangle.NO_BORDER);
			hcell189.setBackgroundColor(BaseColor.WHITE);
			hcell189.setHorizontalAlignment(Element.ALIGN_LEFT);
			hcell189.setPaddingLeft(10);
			table198.addCell(hcell189);

			hcell189 = new PdfPCell(new Phrase("", headFont));
			hcell189.setBorder(Rectangle.NO_BORDER);
			hcell189.setBackgroundColor(BaseColor.WHITE);
			hcell189.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell189.setPaddingRight(-48f);
			table198.addCell(hcell189);

			hcell189 = new PdfPCell(new Phrase("", headFont));
			hcell189.setBorder(Rectangle.NO_BORDER);
			hcell189.setBackgroundColor(BaseColor.WHITE);
			// hcell18.setPaddingRight(14f);
			hcell189.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell189.setPaddingRight(-60f);
			table198.addCell(hcell189);

			

			hcell189 = new PdfPCell(new Phrase("", headFont));
			hcell189.setBorder(Rectangle.NO_BORDER);
			hcell189.setBackgroundColor(BaseColor.WHITE);
			hcell189.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell189.setPaddingRight(-21f);
			table198.addCell(hcell189);

			hcell189 = new PdfPCell(new Phrase("", headFont));
			hcell189.setBorder(Rectangle.NO_BORDER);
			hcell189.setBackgroundColor(BaseColor.WHITE);
			hcell189.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell189.setPaddingRight(8f);
			table198.addCell(hcell189);
			
			hcell189 = new PdfPCell(new Phrase("", headFont));
			hcell189.setBorder(Rectangle.NO_BORDER);
			hcell189.setBackgroundColor(BaseColor.WHITE);
			hcell189.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell189.setPaddingRight(-10f);
			table198.addCell(hcell189);

			
		
			table198.setWidthPercentage(100f);
			cell1.addElement(table198);
			
			PdfPTable table220 = new PdfPTable(1);
			table220.setWidths(new float[] { 25f });
			//table211.setSpacingBefore(10);

			PdfPCell hcell125;
			hcell125 = new PdfPCell(new Phrase("____________________________________________________________________________________________________________________________________", headFont1));
			hcell125.setBorder(Rectangle.NO_BORDER);
			hcell125.setHorizontalAlignment(Element.ALIGN_CENTER);
			table220.setWidthPercentage(100f);
			hcell19.setPaddingTop(10f);
			table220.addCell(hcell125);
			cell1.addElement(table220);
			
			
			PdfPTable table199 = new PdfPTable(9);
			table199.setWidths(new float[] {3f, 3f, 3f, 3f, 1.5f, 1.5f,2f, 2f, 2f});

			//table192.setSpacingBefore(10);

			PdfPCell hcell190;

			hcell190 = new PdfPCell(new Phrase("Cash Amount", headFont));
			hcell190.setBorder(Rectangle.NO_BORDER);
			hcell190.setBackgroundColor(BaseColor.WHITE);
			hcell190.setHorizontalAlignment(Element.ALIGN_LEFT);
			hcell190.setPaddingLeft(10);
			table199.addCell(hcell190);

			hcell190 = new PdfPCell(new Phrase("Card Amount", headFont));
			hcell190.setBorder(Rectangle.NO_BORDER);
			hcell190.setBackgroundColor(BaseColor.WHITE);
			hcell190.setHorizontalAlignment(Element.ALIGN_LEFT);
			hcell190.setPaddingLeft(10);
			table199.addCell(hcell190);

			hcell190 = new PdfPCell(new Phrase("", headFont));
			hcell190.setBorder(Rectangle.NO_BORDER);
			hcell190.setBackgroundColor(BaseColor.WHITE);
			hcell190.setHorizontalAlignment(Element.ALIGN_LEFT);
			hcell190.setPaddingLeft(10);
			table199.addCell(hcell190);

			hcell190 = new PdfPCell(new Phrase("", headFont));
			hcell190.setBorder(Rectangle.NO_BORDER);
			hcell190.setBackgroundColor(BaseColor.WHITE);
			hcell190.setHorizontalAlignment(Element.ALIGN_LEFT);
			hcell190.setPaddingLeft(10);
			table199.addCell(hcell190);

			hcell190 = new PdfPCell(new Phrase("", headFont));
			hcell190.setBorder(Rectangle.NO_BORDER);
			hcell190.setBackgroundColor(BaseColor.WHITE);
			hcell190.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell190.setPaddingRight(-48f);
			table199.addCell(hcell190);

			hcell190 = new PdfPCell(new Phrase("", headFont));
			hcell190.setBorder(Rectangle.NO_BORDER);
			hcell190.setBackgroundColor(BaseColor.WHITE);
			// hcell18.setPaddingRight(14f);
			hcell190.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell190.setPaddingRight(-60f);
			table199.addCell(hcell190);

			

			hcell190 = new PdfPCell(new Phrase("", headFont));
			hcell190.setBorder(Rectangle.NO_BORDER);
			hcell190.setBackgroundColor(BaseColor.WHITE);
			hcell190.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell190.setPaddingRight(-21f);
			table199.addCell(hcell190);

			hcell190 = new PdfPCell(new Phrase("", headFont));
			hcell190.setBorder(Rectangle.NO_BORDER);
			hcell190.setBackgroundColor(BaseColor.WHITE);
			hcell190.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell190.setPaddingRight(8f);
			table199.addCell(hcell190);
			
			hcell190 = new PdfPCell(new Phrase("", headFont));
			hcell190.setBorder(Rectangle.NO_BORDER);
			hcell190.setBackgroundColor(BaseColor.WHITE);
			hcell190.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell190.setPaddingRight(-10f);
			table199.addCell(hcell190);

			
		
			table199.setWidthPercentage(100f);
			cell1.addElement(table199);
			
			
			
			PdfPTable table215 = new PdfPTable(1);
			table215.setWidths(new float[] { 25f });
			//table211.setSpacingBefore(10);

			PdfPCell hcell195;
			hcell195 = new PdfPCell(new Phrase("____________________________________________________________________________________________________________________________________", headFont1));
			hcell195.setBorder(Rectangle.NO_BORDER);
			hcell195.setHorizontalAlignment(Element.ALIGN_CENTER);
			table215.setWidthPercentage(100f);
			hcell19.setPaddingTop(10f);
			table215.addCell(hcell195);
			cell1.addElement(table215);
			//PdfPCell cell321=new PdfPCell();
			
			PdfPTable table193 = new PdfPTable(9);
			table193.setWidths(new float[] { 3f, 3f, 3f, 3f, 1.5f, 1.5f,2f, 2f, 2f});

			table193.setSpacingBefore(10);

			PdfPCell hcell183;

			hcell183 = new PdfPCell(new Phrase(String.valueOf(cashCPAmount), headFont));
			System.out.println("---------------------------------------------"+cardCPAmount);
			hcell183.setBorder(Rectangle.NO_BORDER);
			hcell183.setBackgroundColor(BaseColor.WHITE);
			hcell183.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell183.setPaddingRight(45f);
			table193.addCell(hcell183);

			hcell183 = new PdfPCell(new Phrase(String.valueOf(cardCPAmount), headFont));
			hcell183.setBorder(Rectangle.NO_BORDER);
			hcell183.setBackgroundColor(BaseColor.WHITE);
			hcell183.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell183.setPaddingRight(45f);
			table193.addCell(hcell183);

			hcell183 = new PdfPCell(new Phrase("", headFont));
			hcell183.setBorder(Rectangle.NO_BORDER);
			hcell183.setBackgroundColor(BaseColor.WHITE);
			hcell183.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell183.setPaddingRight(0f);
			table193.addCell(hcell183);

			hcell183 = new PdfPCell(new Phrase("", headFont));
			hcell183.setBorder(Rectangle.NO_BORDER);
			hcell183.setBackgroundColor(BaseColor.WHITE);
			hcell183.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell183.setPaddingRight(0f);
			table193.addCell(hcell183);

			hcell183 = new PdfPCell(new Phrase("", headFont));
			hcell183.setBorder(Rectangle.NO_BORDER);
			hcell183.setBackgroundColor(BaseColor.WHITE);
			hcell183.setHorizontalAlignment(Element.ALIGN_RIGHT);
			//hcell183.setPaddingRight(-48f);
			table193.addCell(hcell183);

			hcell183 = new PdfPCell(new Phrase("", headFont));
			hcell183.setBorder(Rectangle.NO_BORDER);
			hcell183.setBackgroundColor(BaseColor.WHITE);
			// hcell18.setPaddingRight(14f);
			hcell183.setHorizontalAlignment(Element.ALIGN_RIGHT);
			//hcell183.setPaddingRight(-60f);
			table193.addCell(hcell183);

			

			hcell183 = new PdfPCell(new Phrase("", headFont));
			hcell183.setBorder(Rectangle.NO_BORDER);
			hcell183.setBackgroundColor(BaseColor.WHITE);
			hcell183.setHorizontalAlignment(Element.ALIGN_RIGHT);
			//hcell183.setPaddingRight(-21f);
			table193.addCell(hcell183);

			hcell183 = new PdfPCell(new Phrase("", headFont));
			hcell183.setBorder(Rectangle.NO_BORDER);
			hcell183.setBackgroundColor(BaseColor.WHITE);
			hcell183.setHorizontalAlignment(Element.ALIGN_RIGHT);
			//hcell183.setPaddingRight(8f);
			table193.addCell(hcell183);
			
			hcell183 = new PdfPCell(new Phrase("", headFont));
			hcell183.setBorder(Rectangle.NO_BORDER);
			hcell183.setBackgroundColor(BaseColor.WHITE);
			hcell183.setHorizontalAlignment(Element.ALIGN_RIGHT);
			//hcell183.setPaddingRight(-10f);
			table193.addCell(hcell183);

		
			table193.setWidthPercentage(100f);
			cell1.addElement(table193);
			table.addCell(cell1);
			
			document.add(table);

			document.close();

			System.out.println("finished");
			pdfByte = byteArrayOutputStream.toByteArray();
			String uri = ServletUriComponentsBuilder.fromCurrentContextPath().path("/v1/sales/viewFile/")
					.path(salesPaymentPdfServiceImpl.getNextId()).toUriString();

			salesPaymentPdf = new SalesPaymentPdf();
			salesPaymentPdf.setFileName("User Shift Summary");
			salesPaymentPdf.setFileuri(uri);
			salesPaymentPdf.setPid(salesPaymentPdfServiceImpl.getNextId());
			salesPaymentPdf.setData(pdfByte);
			//System.out.println(salesPaymentPdf);
			// System.out.println(totalBillAmount);

			salesPaymentPdfServiceImpl.save(salesPaymentPdf);

		} catch (Exception e) {
			//Logger.error(e.getMessage());
			e.printStackTrace();
		}

		return salesPaymentPdf;
		}


	/*
	 * User Wise shift details
	 */
	@RequestMapping(value = "/usershift", method = RequestMethod.POST)
	public SalesPaymentPdf getUserShiftDetails(@RequestBody Map<String, Object> userShift,Principal principal) {

		Map<String, Object> user = userShift;
		
		String name=(String)user.get("soldBy");
		String[] docName=name.split("-");
		
		
		List<Sales> salesList1 = salesRepository.findTheUserWiseShift(user.get("fromDate"), user.get("toDate"),docName[1]);

		List<SalesReturn> salesReturnList = salesReturnRepository.findTheUserWiseDetails1(user.get("fromDate"), user.get("toDate"),docName[1]);

		SalesPaymentPdf salesPaymentPdf = null;

		//CreatedBy (Security)
		User userSecurity=userServiceImpl.findByUserName(principal.getName());
		String createdBy=userSecurity.getFirstName()+" "+userSecurity.getMiddleName()+" "+userSecurity.getLastName();
		
		try {

			byte[] pdfByte = null;
			ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();

			Document document = new Document(PageSize.A4.rotate());

			Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 10, Font.NORMAL);

			Font headFont = new Font(Font.FontFamily.TIMES_ROMAN, 10, Font.BOLD);
			//Font headFontLine = new Font(Font.FontFamily.TIMES_ROMAN, 10, Font.BOLD);
			Font headFontc = new Font(Font.FontFamily.TIMES_ROMAN, 10, Font.BOLD,BaseColor.MAGENTA);
			Font headFont1 = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD);
			PdfWriter writer = PdfWriter.getInstance(document, byteArrayOutputStream);
			HeaderFooterPageEvent event = new HeaderFooterPageEvent();
			 writer.setPageEvent(event);
			Resource fileResourcee = resourceLoader.getResource("classpath:udbhava.png");
			document.open();
			PdfPTable table = new PdfPTable(2);

			Image img = Image.getInstance(fileResourcee.getFile().getAbsolutePath());
			img.scaleAbsolute(75, 95);
			table.setWidthPercentage(105f);

			Phrase pq = new Phrase(new Chunk(img, 5, -80));

			//shantharam addr
			pq.add(new Chunk( "",
					redFont));
			PdfPCell cellp = new PdfPCell(pq);
			PdfPCell cell1 = new PdfPCell();

			// for header Bold
			PdfPTable table96 = new PdfPTable(1);
			table96.setWidths(new float[] { 5f });
			table96.setSpacingBefore(10);

			PdfPCell hcell96;
			hcell96 = new PdfPCell(new Phrase("UDBHAVA PHARMACY", headFont1));
			hcell96.setBorder(Rectangle.NO_BORDER);
			hcell96.setHorizontalAlignment(Element.ALIGN_CENTER);
			hcell96.setPaddingLeft(25f);

			table96.addCell(hcell96);
			cell1.addElement(table96);
			
			PdfPTable table961 = new PdfPTable(1);
			table961.setWidths(new float[] { 5f });
			table961.setSpacingBefore(10);

			
			PdfPCell hcell71;
			hcell71 = new PdfPCell(new Phrase(ConstantValues.HOSPITAL_NAME, headFont1));
			hcell71.setBorder(Rectangle.NO_BORDER);
			hcell71.setHorizontalAlignment(Element.ALIGN_CENTER);
			hcell71.setPaddingLeft(25f);

			table961.addCell(hcell71);
			cell1.addElement(table961);

			// for header end
			//cell1.setFixedHeight(120f);
			cell1.addElement(pq);
			cell1.setHorizontalAlignment(Element.ALIGN_CENTER);
			cell1.setColspan(2);
			

			//PdfPCell cell19 = new PdfPCell();

			PdfPTable table21 = new PdfPTable(1);
			table21.setWidths(new float[] { 4f });
			table21.setSpacingBefore(10);

			PdfPCell hcell19;
			hcell19 = new PdfPCell(new Phrase("User Wise Shift Collection Detailed", headFont1));
			hcell19.setBorder(Rectangle.NO_BORDER);
			hcell19.setHorizontalAlignment(Element.ALIGN_CENTER);
			// hcell19.setPaddingLeft(-70f);
			table21.addCell(hcell19);

			// calender format date

			String from = user.get("fromDate").toString();
			Timestamp timestamp = Timestamp.valueOf(from);
			DateFormat dateFormat = new SimpleDateFormat("dd-MMM-yyyy hh.mm aa ");
			Calendar calendar = Calendar.getInstance();
			calendar.setTimeInMillis(timestamp.getTime());
			String from1 = dateFormat.format(calendar.getTime());

			String to = user.get("toDate").toString();
			Timestamp timestamp1 = Timestamp.valueOf(to);
			DateFormat dateFormat1 = new SimpleDateFormat("dd-MMM-yyyy hh.mm aa ");
			Calendar calendar1 = Calendar.getInstance();
			calendar1.setTimeInMillis(timestamp1.getTime());
			String to1 = dateFormat1.format(calendar1.getTime());

			Date date = Calendar.getInstance().getTime();

			// Display a date in day, month, year format
			DateFormat formatter = new SimpleDateFormat("dd-MMM-yyyy hh.mm aa");
			String today = formatter.format(date).toString();
			
			

			PdfPCell hcell20;
			hcell20 = new PdfPCell(new Phrase("From Dt  : " + from1 + "           " + "Till Dt  : " + to1, redFont));
			hcell20.setBorder(Rectangle.NO_BORDER);
			hcell20.setHorizontalAlignment(Element.ALIGN_CENTER);
			table21.addCell(hcell20);
			cell1.addElement(table21);
			
			
			PdfPTable table3 = new PdfPTable(2);
			table3.setWidths(new float[] { 5f, 4f });
			table3.setSpacingBefore(10);

			PdfPCell hcell111;
			hcell111 = new PdfPCell(new Phrase("Printed By          :  " + createdBy , redFont));
			hcell111.setBorder(Rectangle.NO_BORDER);
			hcell111.setPaddingLeft(-70f);

			table3.addCell(hcell111);

			hcell111 = new PdfPCell(new Phrase("Printed Date & Time    :  " + today, redFont));
			hcell111.setBorder(Rectangle.NO_BORDER);
			hcell111.setPaddingRight(-70f);
			hcell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
			table3.addCell(hcell111);

			/*cell19.setFixedHeight(60f);
			cell19.setColspan(2);
			cell19.addElement(table21);
			cell19.addElement(table3);
			table.addCell(cell19);*/
			
			cell1.addElement(table3);

			PdfPTable table210 = new PdfPTable(1);
			table210.setWidths(new float[] {20f});

			//table210.setSpacingBefore(5);

			PdfPCell hcell200;

			hcell200 = new PdfPCell(new Phrase("________________________________________________________________________________________________________________________________________________________________", headFont));
			hcell200.setBorder(Rectangle.NO_BORDER);
			hcell200.setHorizontalAlignment(Element.ALIGN_CENTER);
			//hcell188.setPaddingBottom(14f);
			table210.addCell(hcell200);
			table210.setWidthPercentage(100f);
			cell1.addElement(table210);

			
//Start of Sales Return
			
			
			//PdfPCell cell112 = new PdfPCell();
			
			Font h1 = new Font(Font.FontFamily.TIMES_ROMAN, 10, Font.BOLD,BaseColor.BLUE);

			Font h3 = new Font(Font.FontFamily.TIMES_ROMAN, 10, Font.NORMAL,BaseColor.RED);
			//PdfPCell cell11 = new PdfPCell();
			
			Paragraph p10 = new Paragraph("User Name:"+docName[0],h3);
			cell1.addElement(p10);
			//document.add(cell11);
			
			Paragraph p1 = new Paragraph("RETURN",h1);
			cell1.addElement(p1);
			//document.add(cell11);
			
			
			PdfPTable table01 = new PdfPTable(11);
			table01.setWidths(new float[] {  0.7f, 1.7f, 2f, 4.5f, 2f, 2f, 2f, 2f, 2f, 2f,2f});
			table01.setSpacingBefore(5);
			
			PdfPCell hcell01;
			hcell01 = new PdfPCell(new Phrase("S.No", redFont));
			hcell01.setBorder(Rectangle.NO_BORDER);
			hcell01.setBackgroundColor(BaseColor.GRAY);
			hcell01.setHorizontalAlignment(Element.ALIGN_LEFT);
			table01.addCell(hcell01);
			
			hcell01 = new PdfPCell(new Phrase("Bill No", redFont));
			hcell01.setBorder(Rectangle.NO_BORDER);
			hcell01.setBackgroundColor(BaseColor.GRAY);
			hcell01.setHorizontalAlignment(Element.ALIGN_CENTER);
			table01.addCell(hcell01);
			
			hcell01 = new PdfPCell(new Phrase("TRN Date", redFont));
			hcell01.setBorder(Rectangle.NO_BORDER);
			hcell01.setBackgroundColor(BaseColor.GRAY);
			hcell01.setHorizontalAlignment(Element.ALIGN_CENTER);
			table01.addCell(hcell01);
			
			hcell01 = new PdfPCell(new Phrase("Patient Name", redFont));
			hcell01.setBorder(Rectangle.NO_BORDER);
			hcell01.setBackgroundColor(BaseColor.GRAY);
			hcell01.setHorizontalAlignment(Element.ALIGN_CENTER);
			hcell01.setPaddingLeft(-20f);
			table01.addCell(hcell01);
			
			hcell01 = new PdfPCell(new Phrase("Bill Amt", redFont));
			hcell01.setBorder(Rectangle.NO_BORDER);
			hcell01.setBackgroundColor(BaseColor.GRAY);
			hcell01.setHorizontalAlignment(Element.ALIGN_CENTER);
			table01.addCell(hcell01);
			
			hcell01 = new PdfPCell(new Phrase("Disc", redFont));
			hcell01.setBorder(Rectangle.NO_BORDER);
			hcell01.setBackgroundColor(BaseColor.GRAY);
			hcell01.setHorizontalAlignment(Element.ALIGN_CENTER);
			table01.addCell(hcell01);
			
			hcell01 = new PdfPCell(new Phrase("Due Amt", redFont));
			hcell01.setBorder(Rectangle.NO_BORDER);
			hcell01.setBackgroundColor(BaseColor.GRAY);
			hcell01.setHorizontalAlignment(Element.ALIGN_CENTER);
			table01.addCell(hcell01);
			
			hcell01 = new PdfPCell(new Phrase("Recp Amt", redFont));
			hcell01.setBorder(Rectangle.NO_BORDER);
			hcell01.setBackgroundColor(BaseColor.GRAY);
			hcell01.setHorizontalAlignment(Element.ALIGN_CENTER);
			table01.addCell(hcell01);
			
			hcell01 = new PdfPCell(new Phrase("Cash Amt", redFont));
			hcell01.setBorder(Rectangle.NO_BORDER);
			hcell01.setBackgroundColor(BaseColor.GRAY);
			hcell01.setHorizontalAlignment(Element.ALIGN_CENTER);
			table01.addCell(hcell01);
			
			
			hcell01 = new PdfPCell(new Phrase("Card Amt", redFont));
			hcell01.setBorder(Rectangle.NO_BORDER);
			hcell01.setBackgroundColor(BaseColor.GRAY);
			hcell01.setHorizontalAlignment(Element.ALIGN_CENTER);
			table01.addCell(hcell01);
			
			hcell01 = new PdfPCell(new Phrase("Cash+Card Amt", redFont));
			hcell01.setBorder(Rectangle.NO_BORDER);
			hcell01.setBackgroundColor(BaseColor.GRAY);
			hcell01.setHorizontalAlignment(Element.ALIGN_CENTER);
			table01.addCell(hcell01);
			
			table01.setWidthPercentage(100f);
			cell1.addElement(table01);
			
			String patientType = null;

			float totalReturnBillAmt = 0;
			float totalReturnDiscount = 0;
			float totalReturnDueAmt = 0;
			float totalReturnRecpAmt = 0;
			float totalReturnCashAmt = 0;
			float totalReturnChequeAmt = 0;
			float totalReturnCardAmt = 0;
			float totalReturnDDAmt = 0;
			float totalReturnCPCAmt=0;
			
			List<Map<String, String>> showReturn = new ArrayList<>();

			ArrayList<String> info1 = new ArrayList<>();
			if(!salesReturnList.isEmpty())
			{
			for (SalesReturn sales : salesReturnList) {
				
				String bill1 = sales.getBillNo();
				System.out.println(bill1);

				//patientType = sales.getSalesReturnPatientRegistration().getpType();
				System.out.println(patientType);

				Map<String, String> displayInfo = new HashMap<>();
				float billAmnt = 0;
				float discount = 0;
				float dueAmt1 = 0;
				float recpAmt = 0;
				float cheque = 0;
				float card = 0;
				float cash = 0;
				float dd = 0;
				float cashPlusCardAmt=0;
				

				if (!info1.contains(bill1)) 
				{
					List<SalesReturn> findBill = salesReturnRepository.getByBill(bill1);
					for (SalesReturn saleInfo : findBill) 
					{
						//for convert db date to dmy format
						Timestamp date1 = saleInfo.getDate();
						DateFormat format1 = new SimpleDateFormat("dd-MMM-yyyy");
						Calendar cal = Calendar.getInstance();
						cal.setTimeInMillis(date1.getTime());
						String saleReturnDate = format1.format(cal.getTime());
						
						displayInfo.put("BillNo", bill1);
						displayInfo.put("BillDate", String.valueOf(saleReturnDate));

						if (saleInfo.getSalesReturnPatientRegistration() != null) 
						{
							displayInfo.put("name", saleInfo.getSalesReturnPatientRegistration().getPatientDetails().getFirstName()
									+ " " + sales.getSalesReturnPatientRegistration().getPatientDetails().getLastName());
						} 
						else 
						{
							displayInfo.put("name", saleInfo.getName());
						}
						if (saleInfo.getPaymentType().equalsIgnoreCase("Card")) 
						{
							card += saleInfo.getAmount();
						} 
						else if (saleInfo.getPaymentType().equalsIgnoreCase("Cheque")) 
						{
							cheque += saleInfo.getAmount();
						} 
						else if (saleInfo.getPaymentType().equalsIgnoreCase("Cash")) 
						{
							cash += saleInfo.getAmount();
						} 
						
						else if (saleInfo.getPaymentType().equalsIgnoreCase("Cash+Card")) 
						{
							cashPlusCardAmt += saleInfo.getAmount();
						}

						displayInfo.put("BillNo", bill1);
						if(!saleInfo.getPaymentType().equalsIgnoreCase("due"))
						{
						billAmnt += saleInfo.getAmount();
						discount += saleInfo.getDiscount();
						}
						dueAmt1=0;
						recpAmt =0;

						/*if (patientType.equalsIgnoreCase("INPATIENT")) 
						{
							// billAmnt+=saleInfo.getAmount();
							dueAmt1 = billAmnt;
							recpAmt = 0;
							cheque = 0;
							card = 0;
							cash = 0;
							dd = 0;

						}
						else 
						{
							recpAmt = billAmnt;
							dueAmt1 = 0;
						}

*/					}
					displayInfo.put("BillAmt", String.valueOf(Math.round(billAmnt)));
					displayInfo.put("discount", String.valueOf(Math.round(discount)));
					displayInfo.put("card", String.valueOf(Math.round(card)));
					displayInfo.put("cheque", String.valueOf(Math.round(cheque)));
					displayInfo.put("cash", String.valueOf(Math.round(cash)));
					displayInfo.put("cashPlusCardAmt", String.valueOf(Math.round(cashPlusCardAmt)));
					displayInfo.put("dueAmt1", String.valueOf(Math.round(dueAmt1)));
					displayInfo.put("recpAmt", String.valueOf(Math.round(recpAmt)));
					showReturn.add(displayInfo);
					info1.add(bill1);

					totalReturnBillAmt += Math.round(billAmnt);
					totalReturnDiscount += Math.round(discount);
					totalReturnDueAmt += Math.round(dueAmt1);
					totalReturnRecpAmt += Math.round(recpAmt);
					totalReturnCashAmt += Math.round(cash);
					totalReturnChequeAmt += Math.round(cheque);
					totalReturnCardAmt += Math.round(card);
					totalReturnCPCAmt+=Math.round(cashPlusCardAmt);

				}

			}
		}
			
			
			PdfPTable table30 = new PdfPTable(11);
			table30.setWidths(new float[] { 0.7f, 1.7f, 2f, 4.5f, 2f, 2f, 2f, 2f,2f,2f,2f });
			table30.setSpacingBefore(5);

	
			int count1=0;
			for (Map<String, String> show1 : showReturn) {

				PdfPCell cell;
				cell = new PdfPCell(new Phrase(String.valueOf(count1 = count1 + 1), h3));
				cell.setBorder(Rectangle.NO_BORDER);
				cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
				cell.setHorizontalAlignment(Element.ALIGN_CENTER);
				table30.addCell(cell);

				cell = new PdfPCell(new Phrase(show1.get("BillNo"), h3));
				cell.setBorder(Rectangle.NO_BORDER);
				cell.setPaddingLeft(5);
				cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
				cell.setHorizontalAlignment(Element.ALIGN_CENTER);
				table30.addCell(cell);

				cell = new PdfPCell(new Phrase(String.valueOf(show1.get("BillDate")), h3));
				cell.setBorder(Rectangle.NO_BORDER);
				cell.setPaddingLeft(5);
				cell.setVerticalAlignment(Element.ALIGN_LEFT);
				cell.setHorizontalAlignment(Element.ALIGN_LEFT);
				table30.addCell(cell);

				cell = new PdfPCell(new Phrase(show1.get("name"), h3));
				cell.setBorder(Rectangle.NO_BORDER);
				cell.setPaddingLeft(50);
				cell.setVerticalAlignment(Element.ALIGN_LEFT);
				cell.setHorizontalAlignment(Element.ALIGN_LEFT);
				table30.addCell(cell);
				cell = new PdfPCell(new Phrase("-"+String.valueOf(show1.get("BillAmt")), h3));
				cell.setBorder(Rectangle.NO_BORDER);
				//cell.setPaddingLeft(5);
				//cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
				cell.setHorizontalAlignment(Element.ALIGN_RIGHT);
				cell.setPaddingRight(20f);
				table30.addCell(cell);

				cell = new PdfPCell(new Phrase(String.valueOf(show1.get("discount")), h3));
				cell.setBorder(Rectangle.NO_BORDER);
				//cell.setPaddingLeft(5);
				//cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
				//cell.setHorizontalAlignment(Element.ALIGN_RIGHT);
				cell.setHorizontalAlignment(Element.ALIGN_RIGHT);
				cell.setPaddingRight(25f);
				table30.addCell(cell);

				cell = new PdfPCell(new Phrase(String.valueOf(show1.get("dueAmt1")), h3));
				cell.setBorder(Rectangle.NO_BORDER);
				cell.setHorizontalAlignment(Element.ALIGN_RIGHT);
				cell.setPaddingRight(13f);
				table30.addCell(cell);

				cell = new PdfPCell(new Phrase(String.valueOf(show1.get("recpAmt")), h3));
				cell.setBorder(Rectangle.NO_BORDER);
				cell.setHorizontalAlignment(Element.ALIGN_RIGHT);
				cell.setPaddingRight(20f);
				table30.addCell(cell);

				cell = new PdfPCell(new Phrase("-"+String.valueOf(show1.get("cash")), h3));
				cell.setBorder(Rectangle.NO_BORDER);
				cell.setHorizontalAlignment(Element.ALIGN_RIGHT);
				cell.setPaddingRight(20f);
				table30.addCell(cell);

				
				cell = new PdfPCell(new Phrase(String.valueOf(show1.get("card")), h3));
				cell.setBorder(Rectangle.NO_BORDER);
				cell.setHorizontalAlignment(Element.ALIGN_RIGHT);
				cell.setPaddingRight(20f);
				table30.addCell(cell);
				
				cell = new PdfPCell(new Phrase(String.valueOf(show1.get("cashPlusCardAmt")), h3));
				cell.setBorder(Rectangle.NO_BORDER);
				cell.setHorizontalAlignment(Element.ALIGN_RIGHT);
				//cell.setPaddingRight(30);
				table30.addCell(cell);

			

			}
			table30.setWidthPercentage(100f);
			/*cell112.setColspan(2);
			
			cell112.addElement(table01);
			table.addCell(cell112);
			*/
			
			
			cell1.addElement(table30);
			
			

			PdfPTable table208 = new PdfPTable(1);
			table208.setWidths(new float[] {20f});

			//table198.setSpacingBefore(10);

			PdfPCell hcell230;

			hcell230 = new PdfPCell(new Phrase("________________________________________________________________________________________________________________________________________________________________", headFont));
			hcell230.setBorder(Rectangle.NO_BORDER);
			hcell230.setHorizontalAlignment(Element.ALIGN_CENTER);
			//hcell188.setPaddingBottom(14f);
			table208.addCell(hcell230);
			table208.setWidthPercentage(100f);
			cell1.addElement(table208);
			
			//PdfPCell cell003 = new PdfPCell();

			PdfPTable table004 = new PdfPTable(11);
			table004.setWidths(new float[] { 0.5f, 5f, 0.5f, 2.5f, 2f, 2f, 2f, 2f, 2f, 2f, 2f });
			//table004.setSpacingBefore(10);

			PdfPCell hcell001;
			hcell001 = new PdfPCell(new Phrase("", headFont));
			hcell001.setBorder(Rectangle.NO_BORDER);
			hcell001.setBackgroundColor(BaseColor.WHITE);
			hcell001.setHorizontalAlignment(Element.ALIGN_LEFT);
			table004.addCell(hcell001);

			hcell001 = new PdfPCell(new Phrase("Transaction Wise Total :", headFont));
			hcell001.setBorder(Rectangle.NO_BORDER);
			hcell001.setHorizontalAlignment(Element.ALIGN_CENTER);
			hcell001.setPaddingLeft(-20f);
			table004.addCell(hcell001);

			hcell001 = new PdfPCell(new Phrase("", headFont));
			hcell001.setBorder(Rectangle.NO_BORDER);
			hcell001.setBackgroundColor(BaseColor.WHITE);
			hcell001.setHorizontalAlignment(Element.ALIGN_CENTER);
			table004.addCell(hcell001);

			hcell001 = new PdfPCell(new Phrase("", headFont));
			hcell001.setBorder(Rectangle.NO_BORDER);
			hcell001.setBackgroundColor(BaseColor.WHITE);
			hcell001.setHorizontalAlignment(Element.ALIGN_CENTER);
			table004.addCell(hcell001);

			hcell001 = new PdfPCell(new Phrase("-"+String.valueOf(Math.round(totalReturnBillAmt)), headFont));
			hcell001.setBorder(Rectangle.NO_BORDER);
			hcell001.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell001.setPaddingRight(10f);
			table004.addCell(hcell001);

			hcell001 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalReturnDiscount)), headFont));
			hcell001.setBorder(Rectangle.NO_BORDER);
			hcell001.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell001.setPaddingRight(18f);
			table004.addCell(hcell001);

			hcell001 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalReturnDueAmt)), headFont));
			hcell001.setBorder(Rectangle.NO_BORDER);
			hcell001.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell001.setPaddingRight(8f);
			table004.addCell(hcell001);

			hcell001 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalReturnRecpAmt)), headFont));
			hcell001.setBorder(Rectangle.NO_BORDER);
			hcell001.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell001.setPaddingRight(16f);
			table004.addCell(hcell001);

			hcell001 = new PdfPCell(new Phrase("-"+String.valueOf(Math.round(totalReturnCashAmt)), headFont));
			hcell001.setBorder(Rectangle.NO_BORDER);
			hcell001.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell001.setPaddingRight(18f);
			table004.addCell(hcell001);

			hcell001 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalReturnCardAmt)), headFont));
			hcell001.setBorder(Rectangle.NO_BORDER);
			hcell001.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell001.setPaddingRight(18f);
			table004.addCell(hcell001);
			
			hcell001 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalReturnCPCAmt)), headFont));
			hcell001.setBorder(Rectangle.NO_BORDER);
			hcell001.setHorizontalAlignment(Element.ALIGN_RIGHT);
			//hcell001.setPaddingRight(31);
			table004.addCell(hcell001);

		
			table004.setWidthPercentage(100f);
			/*cell003.setColspan(2);
			
			cell003.addElement(table004);
			table.addCell(cell003);
*/
			cell1.addElement(table004);
			
			PdfPTable table201 = new PdfPTable(1);
			table201.setWidths(new float[] {20f});

			//table198.setSpacingBefore(10);

			PdfPCell hcell188;

			hcell188 = new PdfPCell(new Phrase("________________________________________________________________________________________________________________________________________________________________", headFont));
			hcell188.setBorder(Rectangle.NO_BORDER);
			hcell188.setHorizontalAlignment(Element.ALIGN_CENTER);
			//hcell188.setPaddingBottom(14f);
			table201.addCell(hcell188);
			table201.setWidthPercentage(100f);
			cell1.addElement(table201);
			
//-------------End Of Sale Return-----------

			//PdfPCell cell31 = new PdfPCell();
			
			Font h2 = new Font(Font.FontFamily.TIMES_ROMAN, 10, Font.BOLD,BaseColor.BLUE);
			Paragraph p2 = new Paragraph("SALES",h2);
			
			cell1.addElement(p2);

			PdfPTable table1 = new PdfPTable(11);
			table1.setWidths(new float[] {  0.7f, 1.7f, 2f, 4.5f, 2f, 2f, 2f, 2f, 2f, 2f,2f });
			table1.setSpacingBefore(5);

			PdfPCell hcell;
			hcell = new PdfPCell(new Phrase("S.No", redFont));
			hcell.setBorder(Rectangle.NO_BORDER);
			hcell.setBackgroundColor(BaseColor.GRAY);
			hcell.setHorizontalAlignment(Element.ALIGN_LEFT);
			table1.addCell(hcell);

			hcell = new PdfPCell(new Phrase("Bill No", redFont));
			hcell.setBorder(Rectangle.NO_BORDER);
			hcell.setBackgroundColor(BaseColor.GRAY);
			hcell.setHorizontalAlignment(Element.ALIGN_CENTER);
			table1.addCell(hcell);

			hcell = new PdfPCell(new Phrase("TRN Date", redFont));
			hcell.setBorder(Rectangle.NO_BORDER);
			hcell.setBackgroundColor(BaseColor.GRAY);
			hcell.setHorizontalAlignment(Element.ALIGN_CENTER);
			table1.addCell(hcell);

			hcell = new PdfPCell(new Phrase("Patient Name", redFont));
			hcell.setBorder(Rectangle.NO_BORDER);
			hcell.setBackgroundColor(BaseColor.GRAY);
			hcell.setHorizontalAlignment(Element.ALIGN_CENTER);
			table1.addCell(hcell);

			hcell = new PdfPCell(new Phrase("Bill Amt", redFont));
			hcell.setBorder(Rectangle.NO_BORDER);
			hcell.setBackgroundColor(BaseColor.GRAY);
			hcell.setHorizontalAlignment(Element.ALIGN_CENTER);
			table1.addCell(hcell);

			hcell = new PdfPCell(new Phrase("Disc", redFont));
			hcell.setBorder(Rectangle.NO_BORDER);
			hcell.setBackgroundColor(BaseColor.GRAY);
			hcell.setHorizontalAlignment(Element.ALIGN_CENTER);
			table1.addCell(hcell);

			hcell = new PdfPCell(new Phrase("Due Amt", redFont));
			hcell.setBorder(Rectangle.NO_BORDER);
			hcell.setBackgroundColor(BaseColor.GRAY);
			hcell.setHorizontalAlignment(Element.ALIGN_CENTER);
			table1.addCell(hcell);

			hcell = new PdfPCell(new Phrase("Recp Amt", redFont));
			hcell.setBorder(Rectangle.NO_BORDER);
			hcell.setBackgroundColor(BaseColor.GRAY);
			hcell.setHorizontalAlignment(Element.ALIGN_CENTER);
			table1.addCell(hcell);

			hcell = new PdfPCell(new Phrase("Cash Amt", redFont));
			hcell.setBorder(Rectangle.NO_BORDER);
			hcell.setBackgroundColor(BaseColor.GRAY);
			hcell.setHorizontalAlignment(Element.ALIGN_CENTER);
			table1.addCell(hcell);

			
			hcell = new PdfPCell(new Phrase("Card Amt", redFont));
			hcell.setBorder(Rectangle.NO_BORDER);
			hcell.setBackgroundColor(BaseColor.GRAY);
			hcell.setHorizontalAlignment(Element.ALIGN_CENTER);
			table1.addCell(hcell);
			
			hcell = new PdfPCell(new Phrase("Cash+Card Amt", redFont));
			hcell.setBorder(Rectangle.NO_BORDER);
			hcell.setBackgroundColor(BaseColor.GRAY);
			hcell.setHorizontalAlignment(Element.ALIGN_CENTER);
			table1.addCell(hcell);

			table1.setWidthPercentage(100f);
			cell1.addElement(table1);
			
						
			long totalBillAmount = 0;
			int count = 0;

			String pType = null;
			String pRegId = null;

			float total = 0;
			float totalDiscount = 0;
			float totalDueAmt = 0;
			float totalRecpAmt = 0;
			float totalCashAmt = 0;
			float totalChequeAmt = 0;
			float totalCardAmt = 0;
			float totalDDAmt = 0;
			float totalCPCAmt=0;
			List<Map<String, String>> show = new ArrayList<>();

			// Iterable<Sales> salesList1=salesRepository.findAll();
			ArrayList<String> info = new ArrayList<>();
			// ---------
			if(!salesList1.isEmpty())
			{
			for (Sales sales : salesList1) {

				String bill1 = sales.getBillNo();

				if(sales.getPatientRegistration()!=null) 
				{
					pType = sales.getPatientRegistration().getpType();
					System.out.println(pType);
				}
				
				else 
				{
					pType="WALKERS";
					
				}

				//pRegId = sales.getRegId();
				//pType = sales.getPatientRegistration().getpType();
			
				Map<String, String> displayInfo = new HashMap<>();
				float billAmnt = 0;
				float discount = 0;
				float dueAmt1 = 0;
				float recpAmt = 0;
				float cheque = 0;
			
				float card = 0;
				float cash = 0;
				float dd = 0;
				float cashPlusCardAmt=0;

				if (!info.contains(bill1)) 
				{
					List<Sales> findBill = salesRepository.findByBillNo(bill1);
					for (Sales saleInfo : findBill) 
					{
						//for convert db date to dmy format
						Timestamp date1 = saleInfo.getBillDate();
						DateFormat format1 = new SimpleDateFormat("dd-MMM-yyyy");
						Calendar cal = Calendar.getInstance();
						cal.setTimeInMillis(date1.getTime());
						String salesDate = format1.format(cal.getTime());
						
						displayInfo.put("BillNo", bill1);
						
						displayInfo.put("BillDate", String.valueOf(salesDate));

						if (saleInfo.getPatientRegistration() != null) 
						{
							displayInfo.put("name", saleInfo.getPatientRegistration().getPatientDetails().getFirstName()
									+ " " + sales.getPatientRegistration().getPatientDetails().getLastName());
						} 
						
						else 
						{
							displayInfo.put("name", saleInfo.getName());
						}
						
						if (saleInfo.getPaymentType().equalsIgnoreCase("Card")) 
						{
							card += saleInfo.getActualAmount();
						} 
						else if (saleInfo.getPaymentType().equalsIgnoreCase("Cheque")) 
						{
							cheque += saleInfo.getActualAmount();
							
						} 
						else if (saleInfo.getPaymentType().equalsIgnoreCase("Cash")) 
						{
							cash += saleInfo.getActualAmount();
						} 
						else if (saleInfo.getPaymentType().equalsIgnoreCase("DD")) 
						{
							dd += saleInfo.getActualAmount();
						}
						else if (saleInfo.getPaymentType().equalsIgnoreCase("Cash+Card")) 
						{
							cashPlusCardAmt += saleInfo.getActualAmount();
						}

						displayInfo.put("BillNo", bill1);
						if(!saleInfo.getPaymentType().equalsIgnoreCase("Due"))
						{
							billAmnt += saleInfo.getActualAmount();
							System.out.println("bill Amt------------------------"+billAmnt);
							System.out.println("trunc Bill AMt----------------"+(billAmnt*100.0)/100.0);
						discount += saleInfo.getDiscount();
						recpAmt+=saleInfo.getActualAmount();
						}
						if (pType.equalsIgnoreCase("INPATIENT") && saleInfo.getPaid().equalsIgnoreCase("NO")) {
							
							System.out.println(pType);
							// billAmnt+=saleInfo.getAmount();
							dueAmt1 += saleInfo.getActualAmount();
							//recpAmt = 0;
							cheque = 0;
							card = 0;
							cash = 0;
							dd = 0;
							cashPlusCardAmt=0;
						} 
						
						
						

					}
					displayInfo.put("BillAmt", String.valueOf(Math.round(billAmnt)));
					displayInfo.put("discount", String.valueOf(Math.round(discount)));
					displayInfo.put("card", String.valueOf(Math.round(card)));
					displayInfo.put("cheque", String.valueOf(Math.round(cheque)));
					displayInfo.put("cash", String.valueOf(Math.round(cash)));
					displayInfo.put("dd", String.valueOf(Math.round(dd)));
					displayInfo.put("cashPlusCardAmt", String.valueOf(Math.round(cashPlusCardAmt)));
					displayInfo.put("dueAmt1", String.valueOf(Math.round(dueAmt1)));
					displayInfo.put("recpAmt", String.valueOf(Math.round(recpAmt)));
					show.add(displayInfo);
					info.add(bill1);
					
					total += Math.round(billAmnt);
					totalDiscount += Math.round(discount);
					totalDueAmt += Math.round(dueAmt1);
					totalRecpAmt += Math.round(recpAmt);
					totalCashAmt += Math.round(cash);
					totalChequeAmt += Math.round(cheque);
					totalCardAmt += Math.round(card);
					totalDDAmt += Math.round(dd);
					totalCPCAmt+=Math.round(cashPlusCardAmt);

				}

			}
			}
			PdfPTable table19 = new PdfPTable(11);
			table19.setWidths(new float[] { 0.7f, 1.7f, 2f, 4.5f, 2f, 2f, 2f, 2f,2f,2f,2f });
			table19.setSpacingBefore(5);

			
			for (Map<String, String> show1 : show) {

				PdfPCell cell;
				cell = new PdfPCell(new Phrase(String.valueOf(count = count + 1), redFont));
				cell.setBorder(Rectangle.NO_BORDER);
				cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
				cell.setHorizontalAlignment(Element.ALIGN_CENTER);
				table19.addCell(cell);

				cell = new PdfPCell(new Phrase(show1.get("BillNo"), redFont));
				cell.setBorder(Rectangle.NO_BORDER);
				cell.setPaddingLeft(5);
				cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
				cell.setHorizontalAlignment(Element.ALIGN_CENTER);
				table19.addCell(cell);

				cell = new PdfPCell(new Phrase(String.valueOf(show1.get("BillDate")), redFont));
				cell.setBorder(Rectangle.NO_BORDER);
				cell.setPaddingLeft(5);
				cell.setVerticalAlignment(Element.ALIGN_LEFT);
				cell.setHorizontalAlignment(Element.ALIGN_LEFT);
				table19.addCell(cell);

				cell = new PdfPCell(new Phrase(show1.get("name"), redFont));
				cell.setBorder(Rectangle.NO_BORDER);
				cell.setPaddingLeft(50f);
				cell.setVerticalAlignment(Element.ALIGN_LEFT);
				cell.setHorizontalAlignment(Element.ALIGN_LEFT);
				table19.addCell(cell);

				cell = new PdfPCell(new Phrase(show1.get("BillAmt"), redFont));
				cell.setBorder(Rectangle.NO_BORDER);
				//cell.setPaddingLeft(5);
				//cell.setVerticalAlignment(Element.ALIGN_RIGHT);
				cell.setHorizontalAlignment(Element.ALIGN_RIGHT);
				cell.setPaddingRight(20f);
				table19.addCell(cell);

				cell = new PdfPCell(new Phrase(String.valueOf(show1.get("discount")), redFont));
				cell.setBorder(Rectangle.NO_BORDER);
				//cell.setVerticalAlignment(Element.ALIGN_RIGHT);
				cell.setHorizontalAlignment(Element.ALIGN_RIGHT);
				cell.setPaddingRight(25f);
				table19.addCell(cell);

				cell = new PdfPCell(new Phrase(String.valueOf(show1.get("dueAmt1")), redFont));
				cell.setBorder(Rectangle.NO_BORDER);
				//cell.setVerticalAlignment(Element.ALIGN_RIGHT);
				cell.setHorizontalAlignment(Element.ALIGN_RIGHT);
				cell.setPaddingRight(13f);
				table19.addCell(cell);

				cell = new PdfPCell(new Phrase(String.valueOf(show1.get("recpAmt")), redFont));
				cell.setBorder(Rectangle.NO_BORDER);
				//cell.setVerticalAlignment(Element.ALIGN_RIGHT);
				cell.setHorizontalAlignment(Element.ALIGN_RIGHT);
				cell.setPaddingRight(20f);
				table19.addCell(cell);

				cell = new PdfPCell(new Phrase(String.valueOf(show1.get("cash")), redFont));
				cell.setBorder(Rectangle.NO_BORDER);
				//cell.setVerticalAlignment(Element.ALIGN_RIGHT);
				cell.setHorizontalAlignment(Element.ALIGN_RIGHT);
				cell.setPaddingRight(20f);
				table19.addCell(cell);

			
				cell = new PdfPCell(new Phrase(String.valueOf(show1.get("card")), redFont));
				cell.setBorder(Rectangle.NO_BORDER);
				//cell.setVerticalAlignment(Element.ALIGN_RIGHT);
				cell.setHorizontalAlignment(Element.ALIGN_RIGHT);
				cell.setPaddingRight(20f);
				table19.addCell(cell);
				
				cell = new PdfPCell(new Phrase(String.valueOf(show1.get("cashPlusCardAmt")), redFont));
				cell.setBorder(Rectangle.NO_BORDER);
				//cell.setVerticalAlignment(Element.ALIGN_RIGHT);
				cell.setHorizontalAlignment(Element.ALIGN_RIGHT);
				//cell.setPaddingRight(30);
				table19.addCell(cell);


			}
			table19.setWidthPercentage(100f);
		/*	cell31.setColspan(2);
			
			cell31.addElement(table1);
			table.addCell(cell31);
*/
			
			cell1.addElement(table19);
			
			PdfPTable table207 = new PdfPTable(1);
			table207.setWidths(new float[] {20f});

			//table198.setSpacingBefore(10);

			PdfPCell hcell147;

			hcell147 = new PdfPCell(new Phrase("________________________________________________________________________________________________________________________________________________________________", headFont));
			hcell147.setBorder(Rectangle.NO_BORDER);
			hcell147.setHorizontalAlignment(Element.ALIGN_CENTER);
			//hcell188.setPaddingBottom(14f);
			table207.addCell(hcell147);
			table207.setWidthPercentage(100f);
			cell1.addElement(table207);

			
		//	PdfPCell cell311 = new PdfPCell();

			PdfPTable table11 = new PdfPTable(11);
			table11.setWidths(new float[] { 0.5f, 5f, 0.5f, 2.5f, 2f, 2f, 2f, 2f, 2f, 2f, 2f });
			//table11.setSpacingBefore(10);

			PdfPCell hcell1;
			hcell1 = new PdfPCell(new Phrase("", headFont));
			hcell1.setBorder(Rectangle.NO_BORDER);
			hcell1.setBackgroundColor(BaseColor.WHITE);
			hcell1.setHorizontalAlignment(Element.ALIGN_LEFT);
			table11.addCell(hcell1);

			hcell1 = new PdfPCell(new Phrase("Transaction Wise Total :", headFont));
			hcell1.setBorder(Rectangle.NO_BORDER);
			hcell1.setHorizontalAlignment(Element.ALIGN_LEFT);
			hcell1.setPaddingLeft(20f);
			table11.addCell(hcell1);

			hcell1 = new PdfPCell(new Phrase("", headFont));
			hcell1.setBorder(Rectangle.NO_BORDER);
			hcell1.setBackgroundColor(BaseColor.WHITE);
			hcell1.setHorizontalAlignment(Element.ALIGN_CENTER);
			table11.addCell(hcell1);

			hcell1 = new PdfPCell(new Phrase("", headFont));
			hcell1.setBorder(Rectangle.NO_BORDER);
			hcell1.setBackgroundColor(BaseColor.WHITE);
			hcell1.setHorizontalAlignment(Element.ALIGN_CENTER);
			table11.addCell(hcell1);

			hcell1 = new PdfPCell(new Phrase(String.valueOf(Math.round(total)), headFont));
			hcell1.setBorder(Rectangle.NO_BORDER);
			hcell1.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell1.setPaddingRight(10f);
			table11.addCell(hcell1);

			hcell1 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalDiscount)), headFont));
			hcell1.setBorder(Rectangle.NO_BORDER);
			hcell1.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell1.setPaddingRight(20f);
			table11.addCell(hcell1);

			hcell1 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalDueAmt)), headFont));
			hcell1.setBorder(Rectangle.NO_BORDER);
			hcell1.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell1.setPaddingRight(8f);
			table11.addCell(hcell1);

			hcell1 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalRecpAmt)), headFont));
			hcell1.setBorder(Rectangle.NO_BORDER);
			hcell1.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell1.setPaddingRight(16f);
			table11.addCell(hcell1);

			hcell1 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalCashAmt)), headFont));
			hcell1.setBorder(Rectangle.NO_BORDER);
			hcell1.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell1.setPaddingRight(18f);
			table11.addCell(hcell1);

		

			hcell1 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalCardAmt)), headFont));
			hcell1.setBorder(Rectangle.NO_BORDER);
			hcell1.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell1.setPaddingRight(18f);
			table11.addCell(hcell1);
			
			hcell1 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalCPCAmt)), headFont));
			hcell1.setBorder(Rectangle.NO_BORDER);
			hcell1.setHorizontalAlignment(Element.ALIGN_RIGHT);
			//hcell1.setPaddingRight(29f);
			table11.addCell(hcell1);

		

			table11.setWidthPercentage(100f);
			/*cell311.setColspan(2);
			
			cell311.addElement(table11);
			table.addCell(cell311);*/
			
			cell1.addElement(table11);

			PdfPTable table202 = new PdfPTable(1);
			table202.setWidths(new float[] {20f});

			//table198.setSpacingBefore(10);

			PdfPCell hcell190;

			hcell190 = new PdfPCell(new Phrase("________________________________________________________________________________________________________________________________________________________________", headFont));
			hcell190.setBorder(Rectangle.NO_BORDER);
			hcell190.setHorizontalAlignment(Element.ALIGN_CENTER);
			//hcell188.setPaddingBottom(14f);
			table202.addCell(hcell190);
			table202.setWidthPercentage(100f);
			cell1.addElement(table202);
			
			//PdfPCell cell310 = new PdfPCell();

			float totalcashAmt=totalCashAmt-totalReturnCashAmt;
			float totalcardAmt=totalCardAmt-totalReturnCardAmt;
			float totalchqAmt=totalChequeAmt-totalReturnChequeAmt;
			float totalddAmt=totalDDAmt-totalReturnDDAmt;
			float totalcpcAmt=totalCPCAmt-totalReturnCPCAmt;
			
			
			
			
			PdfPTable table203 = new PdfPTable(1);
			table203.setWidths(new float[] {20f});

			//table198.setSpacingBefore(10);

			PdfPCell hcell191;

			hcell191 = new PdfPCell(new Phrase("________________________________________________________________________________________________________________________________________________________________", headFont));
			hcell191.setBorder(Rectangle.NO_BORDER);
			hcell191.setHorizontalAlignment(Element.ALIGN_CENTER);
			//hcell188.setPaddingBottom(14f);
			table203.addCell(hcell191);
			table203.setWidthPercentage(100f);
			cell1.addElement(table203);
			
			
			
			float totalamount=total-totalReturnBillAmt;
			float totalDisc=totalDiscount-totalReturnDiscount;
			float totalDue=totalDueAmt-totalReturnDueAmt;
			float totalResp=totalRecpAmt-totalReturnRecpAmt;
			
			//PdfPCell cell319 = new PdfPCell();

			PdfPTable table101 = new PdfPTable(11);
			table101.setWidths(new float[] { 0.5f, 5f, 0.5f, 2.5f, 2f, 2f, 2f, 2f, 2f, 2f, 2f});

			//table101.setSpacingBefore(10);

			PdfPCell hcell101;
			hcell101 = new PdfPCell(new Phrase("", headFont));
			hcell101.setBorder(Rectangle.NO_BORDER);
			hcell101.setBackgroundColor(BaseColor.WHITE);
			hcell101.setHorizontalAlignment(Element.ALIGN_CENTER);
			table101.addCell(hcell101);

			hcell101 = new PdfPCell(new Phrase("Grand Total : (Sales And Return)", headFont));
			hcell101.setBorder(Rectangle.NO_BORDER);
			hcell101.setBackgroundColor(BaseColor.WHITE);	
			hcell101.setHorizontalAlignment(Element.ALIGN_LEFT);
			hcell101.setPaddingLeft(15f);
			table101.addCell(hcell101);

			hcell101 = new PdfPCell(new Phrase("",headFont));
			hcell101.setBorder(Rectangle.NO_BORDER);
			hcell101.setBackgroundColor(BaseColor.WHITE);
			hcell101.setHorizontalAlignment(Element.ALIGN_RIGHT);
			table101.addCell(hcell101);

			hcell101 = new PdfPCell(new Phrase("", headFont));
			hcell101.setBorder(Rectangle.NO_BORDER);
			hcell101.setBackgroundColor(BaseColor.WHITE);
			hcell101.setHorizontalAlignment(Element.ALIGN_CENTER);
			table101.addCell(hcell101);

			hcell101 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalamount)), headFont));
			hcell101.setBorder(Rectangle.NO_BORDER);
			hcell101.setBackgroundColor(BaseColor.WHITE);
			hcell101.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell101.setPaddingRight(10f);
			table101.addCell(hcell101);

			hcell101 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalDisc)), headFont));
			hcell101.setBorder(Rectangle.NO_BORDER);
			hcell101.setBackgroundColor(BaseColor.WHITE);
			hcell101.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell101.setPaddingRight(20f);
			table101.addCell(hcell101);


			hcell101 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalDue)), headFont));
			hcell101.setBorder(Rectangle.NO_BORDER);
			hcell101.setBackgroundColor(BaseColor.WHITE);
			hcell101.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell101.setPaddingRight(8f);
			table101.addCell(hcell101);


			hcell101 = new PdfPCell(new Phrase((String.valueOf(Math.round(totalResp))), headFont));
			hcell101.setBorder(Rectangle.NO_BORDER);
			hcell101.setBackgroundColor(BaseColor.WHITE);
			hcell101.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell101.setPaddingRight(16f);
			table101.addCell(hcell101);


			hcell101 = new PdfPCell(new Phrase((String.valueOf(Math.round(totalcashAmt))), headFont));
			hcell101.setBorder(Rectangle.NO_BORDER);
			hcell101.setBackgroundColor(BaseColor.WHITE);
			hcell101.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell101.setPaddingRight(18f);
			table101.addCell(hcell101);


			

			hcell101 = new PdfPCell(new Phrase((String.valueOf(Math.round(totalcardAmt))), headFont));
			hcell101.setBorder(Rectangle.NO_BORDER);
			hcell101.setBackgroundColor(BaseColor.WHITE);
			hcell101.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell101.setPaddingRight(18f);
			table101.addCell(hcell101);
			
			hcell101 = new PdfPCell(new Phrase((String.valueOf(Math.round(totalcpcAmt))), headFont));
			hcell101.setBorder(Rectangle.NO_BORDER);
			hcell101.setBackgroundColor(BaseColor.WHITE);
			hcell101.setHorizontalAlignment(Element.ALIGN_RIGHT);
		//	hcell101.setPaddingRight(29f);
			table101.addCell(hcell101);


			

			table101.setWidthPercentage(100f);
			cell1.addElement(table101);
			
			PdfPTable table204 = new PdfPTable(1);
			table204.setWidths(new float[] {20f});

			//table198.setSpacingBefore(10);

			PdfPCell hcell151;

			hcell151 = new PdfPCell(new Phrase("________________________________________________________________________________________________________________________________________________________________", headFont));
			hcell151.setBorder(Rectangle.NO_BORDER);
			hcell151.setHorizontalAlignment(Element.ALIGN_CENTER);
			//hcell188.setPaddingBottom(14f);
			table204.addCell(hcell151);
			table204.setWidthPercentage(100f);
			cell1.addElement(table204);
//------------------------------for cash plus card payments--------------------------
			
			long cashAmount=0;
			long cardAmount=0;
			long chqAmount=0;
			long cashCPAmount=0;
			float cardCPAmount=0;
			long chqCPAmount=0;
			long ddCPAmount=0;
			long totalCardAmount=0;
			long totalCashAmount=0;
			long totalChequeAmount=0;
			long totalDDAmount=0;
			
			//PdfPCell cell322 = new PdfPCell();
			
			PdfPTable table191 = new PdfPTable(11);
			table191.setWidths(new float[] { 7f, 1f, 2f, 2f, 1.5f, 1.5f, 2f,1f, 1f, 1f, 1f });

			//table191.setSpacingBefore(10);

			PdfPCell hcell181;

			hcell181 = new PdfPCell(new Phrase("CASH+CARD AMOUNT DIVISION :", headFont));
			hcell181.setBorder(Rectangle.NO_BORDER);
			hcell181.setBackgroundColor(BaseColor.WHITE);
			hcell181.setHorizontalAlignment(Element.ALIGN_LEFT);
			hcell181.setPaddingLeft(-60f);
			table191.addCell(hcell181);

			hcell181 = new PdfPCell(new Phrase("", headFont));
			hcell181.setBorder(Rectangle.NO_BORDER);
			hcell181.setBackgroundColor(BaseColor.WHITE);
			hcell181.setHorizontalAlignment(Element.ALIGN_RIGHT);
			//hcell181.setPaddingRight(8f);
			table191.addCell(hcell181);

			hcell181 = new PdfPCell(
					new Phrase("", headFont));
			hcell181.setBorder(Rectangle.NO_BORDER);
			hcell181.setBackgroundColor(BaseColor.WHITE);
			hcell181.setHorizontalAlignment(Element.ALIGN_RIGHT);
			//hcell181.setPaddingRight(9f);
			table191.addCell(hcell181);

			hcell181 = new PdfPCell(new Phrase("", headFont));
			hcell181.setBorder(Rectangle.NO_BORDER);
			hcell181.setBackgroundColor(BaseColor.WHITE);
			hcell181.setHorizontalAlignment(Element.ALIGN_RIGHT);
			//hcell181.setPaddingRight(-8f);
			table191.addCell(hcell181);

			hcell181 = new PdfPCell(new Phrase("", headFont));
			hcell181.setBorder(Rectangle.NO_BORDER);
			hcell181.setBackgroundColor(BaseColor.WHITE);
			hcell181.setHorizontalAlignment(Element.ALIGN_RIGHT);
			//hcell181.setPaddingRight(-48f);
			table191.addCell(hcell181);

			hcell181 = new PdfPCell(new Phrase("", headFont));
			hcell181.setBorder(Rectangle.NO_BORDER);
			hcell181.setBackgroundColor(BaseColor.WHITE);
			// hcell18.setPaddingRight(14f);
			hcell181.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell181.setPaddingRight(-60f);
			table191.addCell(hcell181);

			hcell181 = new PdfPCell(new Phrase("", headFont));
			hcell181.setBorder(Rectangle.NO_BORDER);
			hcell181.setBackgroundColor(BaseColor.WHITE);
			hcell181.setHorizontalAlignment(Element.ALIGN_RIGHT);
			//hcell181.setPaddingRight(-46f);
			table191.addCell(hcell181);

			hcell181 = new PdfPCell(new Phrase("", headFont));
			hcell181.setBorder(Rectangle.NO_BORDER);
			hcell181.setBackgroundColor(BaseColor.WHITE);
			hcell181.setHorizontalAlignment(Element.ALIGN_RIGHT);
			//hcell181.setPaddingRight(-21f);
			table191.addCell(hcell181);

			hcell181 = new PdfPCell(new Phrase("", headFont));
			hcell181.setBorder(Rectangle.NO_BORDER);
			hcell181.setBackgroundColor(BaseColor.WHITE);
			hcell181.setHorizontalAlignment(Element.ALIGN_RIGHT);
			//hcell181.setPaddingRight(8f);
			table191.addCell(hcell181);
			
			hcell181 = new PdfPCell(new Phrase("", headFont));
			hcell181.setBorder(Rectangle.NO_BORDER);
			hcell181.setBackgroundColor(BaseColor.WHITE);
			hcell181.setHorizontalAlignment(Element.ALIGN_RIGHT);
			//hcell181.setPaddingRight(-10f);
			table191.addCell(hcell181);

			hcell181 = new PdfPCell(new Phrase("", headFont));
			hcell181.setBorder(Rectangle.NO_BORDER);
			hcell181.setBackgroundColor(BaseColor.WHITE);
			hcell181.setHorizontalAlignment(Element.ALIGN_RIGHT);
			//hcell181.setPaddingRight(10f);
			table191.addCell(hcell181);
			
			cell1.addElement(table191);
			
			PdfPTable table205 = new PdfPTable(1);
			table205.setWidths(new float[] {20f});

			//table198.setSpacingBefore(10);

			PdfPCell hcell121;

			hcell121 = new PdfPCell(new Phrase("________________________________________________________________________________________________________________________________________________________________", headFont));
			hcell121.setBorder(Rectangle.NO_BORDER);
			hcell121.setHorizontalAlignment(Element.ALIGN_CENTER);
			//hcell188.setPaddingBottom(14f);
			table205.addCell(hcell121);
			table205.setWidthPercentage(100f);
			cell1.addElement(table205);
			
			//PdfPCell cell320 = new PdfPCell();
			
			PdfPTable table192 = new PdfPTable(11);
			table192.setWidths(new float[] {3f, 3f, 3f, 3f, 1.5f, 1.5f, 2f,2f, 2f, 2f, 2f });

			//table192.setSpacingBefore(10);

			PdfPCell hcell182;

			hcell182 = new PdfPCell(new Phrase("UMR", headFont));
			hcell182.setBorder(Rectangle.NO_BORDER);
			hcell182.setBackgroundColor(BaseColor.WHITE);
			hcell182.setHorizontalAlignment(Element.ALIGN_LEFT);
			hcell182.setPaddingLeft(-50);
			hcell182.setPaddingBottom(-5f);
			table192.addCell(hcell182);

			hcell182 = new PdfPCell(new Phrase("Bill No", headFont));
			hcell182.setBorder(Rectangle.NO_BORDER);
			hcell182.setBackgroundColor(BaseColor.WHITE);
			hcell182.setHorizontalAlignment(Element.ALIGN_LEFT);
			hcell182.setPaddingLeft(-50);
			hcell182.setPaddingBottom(-5f);
			table192.addCell(hcell182);

			hcell182 = new PdfPCell(new Phrase("Cash Amount", headFont));
			hcell182.setBorder(Rectangle.NO_BORDER);
			hcell182.setBackgroundColor(BaseColor.WHITE);
			hcell182.setHorizontalAlignment(Element.ALIGN_LEFT);
			hcell182.setPaddingLeft(-30);
			hcell182.setPaddingBottom(-5f);
			table192.addCell(hcell182);

			hcell182 = new PdfPCell(new Phrase("Card Amount", headFont));
			hcell182.setBorder(Rectangle.NO_BORDER);
			hcell182.setBackgroundColor(BaseColor.WHITE);
			hcell182.setHorizontalAlignment(Element.ALIGN_LEFT);
			hcell182.setPaddingLeft(-30);
			hcell182.setPaddingBottom(-5f);
			table192.addCell(hcell182);

			hcell182 = new PdfPCell(new Phrase("Chq Amount", headFont));
			hcell182.setBorder(Rectangle.NO_BORDER);
			hcell182.setBackgroundColor(BaseColor.WHITE);
			hcell182.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell182.setPaddingRight(-20f);
			hcell182.setPaddingBottom(-5f);
			table192.addCell(hcell182);

			hcell182 = new PdfPCell(new Phrase("", headFont));
			hcell182.setBorder(Rectangle.NO_BORDER);
			hcell182.setBackgroundColor(BaseColor.WHITE);
			// hcell18.setPaddingRight(14f);
			hcell182.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell182.setPaddingRight(-60f);
			hcell182.setPaddingBottom(-5f);
			table192.addCell(hcell182);

			hcell182 = new PdfPCell(new Phrase("", headFont));
			hcell182.setBorder(Rectangle.NO_BORDER);
			hcell182.setBackgroundColor(BaseColor.WHITE);
			hcell182.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell182.setPaddingRight(-46f);
			hcell182.setPaddingBottom(-5f);
			table192.addCell(hcell182);

			hcell182 = new PdfPCell(new Phrase("", headFont));
			hcell182.setBorder(Rectangle.NO_BORDER);
			hcell182.setBackgroundColor(BaseColor.WHITE);
			hcell182.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell182.setPaddingRight(-21f);
			hcell182.setPaddingBottom(-5f);
			table192.addCell(hcell182);

			hcell182 = new PdfPCell(new Phrase("", headFont));
			hcell182.setBorder(Rectangle.NO_BORDER);
			hcell182.setBackgroundColor(BaseColor.WHITE);
			hcell182.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell182.setPaddingRight(8f);
			hcell182.setPaddingBottom(-5f);
			table192.addCell(hcell182);
			
			hcell182 = new PdfPCell(new Phrase("", headFont));
			hcell182.setBorder(Rectangle.NO_BORDER);
			hcell182.setBackgroundColor(BaseColor.WHITE);
			hcell182.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell182.setPaddingRight(-10f);
			hcell182.setPaddingBottom(-5f);
			table192.addCell(hcell182);

			hcell182 = new PdfPCell(new Phrase("", headFont));
			hcell182.setBorder(Rectangle.NO_BORDER);
			hcell182.setBackgroundColor(BaseColor.WHITE);
			hcell182.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell182.setPaddingRight(10f);
			hcell182.setPaddingBottom(-5f);
			table192.addCell(hcell182);
			
			cell1.addElement(table192);
			
			
			PdfPTable table211 = new PdfPTable(1);
			table211.setWidths(new float[] {20f});

			//table211.setSpacingBefore(3);

			PdfPCell hcell201;

			hcell201 = new PdfPCell(new Phrase("________________________________________________________________________________________________________________________________________________________________", headFont));
			hcell201.setBorder(Rectangle.NO_BORDER);
			hcell201.setHorizontalAlignment(Element.ALIGN_CENTER);
			
			table211.addCell(hcell201);
			table211.setWidthPercentage(100f);
			cell1.addElement(table211);
			
			List<Map<String, String>> show1 = new ArrayList<>();
			ArrayList<String> info2 = new ArrayList<>();
			String umr=null;
			float cashAmount1=0;
			float cardAmount1=0;
			float chqAmount1=0;
			float ddAmount=0;
			float totalCashAmount1=0;
			float totalCardAmount1=0;
			float totalChqAmount1=0;
			float totalDDAmount1=0;
			String billNo=null;
			
								Map<String, String> displayInfo =null;
				
					
					
					
					//List<Sales> saleslist=salesRepository.findByPaymentType(user.get("fromDate"), user.get("toDate"), docName[1]);
					List<CashPlusCard> cashPlusCard=cashPlusCardRepository.findTheSalesCashPlusCardAmt(user.get("fromDate"), user.get("toDate"), docName[1]);
					
					for (CashPlusCard sales2 : cashPlusCard) {
						//displayInfo.put("umr", umr);
						
						
						displayInfo = new HashMap<>();
						if(sales2.getPatientRegistrationCashCard()!=null) 
						{
							pType = sales2.getPatientRegistrationCashCard().getpType();
							System.out.println(pType);
						}
						
						else 
						{
							pType="WALKERS";
							
						}
						
						billNo=sales2.getBillNo();
						if (!info2.contains(billNo)) 
						{
						CashPlusCard cashPlusCards=cashPlusCardRepository.findByBillNoAndDescription(billNo);
						//String billNo = sales2.getBillNo();
						
						if(cashPlusCards!=null)
						{
							if(billNo!=null)
							{
							if(sales2.getPatientRegistrationCashCard()!=null && !pType.equalsIgnoreCase("WALKERS"))
							{
							umr=sales2.getPatientRegistrationCashCard().getPatientDetails().getUmr();
							}
							else
							{
								umr=" ";
							}
						

						
						
							if(cashPlusCards.getDescription().equalsIgnoreCase("Sales") || cashPlusCards.getDescription().equalsIgnoreCase("Walkin Sales"))
							{
							
								
									if(cashPlusCards.getCashAmount()!=0)
									{	
								
									cashAmount1=cashPlusCards.getCashAmount();
									totalCashAmount1+=cashAmount1;
									
								}
								if(cashPlusCards.getCardAmount()!=0)
								{
									cardAmount1+=cashPlusCards.getCardAmount();
									totalCardAmount1+=cardAmount1;
									
								}
								if(cashPlusCards.getChequeAmount()!=0)
								{
									chqAmount1+=cashPlusCards.getChequeAmount();
									totalChqAmount1+=chqAmount1;
								}
								
								displayInfo.put("cashAmount1", String.valueOf(Math.round(cashAmount1)));
								displayInfo.put("cardAmount1", String.valueOf(Math.round(cardAmount1)));
								displayInfo.put("chqAmount1", String.valueOf(Math.round(chqAmount1)));
								cashAmount1=0;
								cardAmount1=0;
								chqAmount1=0;
								}
								
								
							}
							
							
							
							}
						info2.add(billNo);
						displayInfo.put("umr", String.valueOf(umr));
						displayInfo.put("billNo", String.valueOf(billNo));
						show1.add(displayInfo);
						}
				
					
					}
					
					
					
					
				
			
			
			//PdfPCell cell324 = new PdfPCell();
			
			PdfPTable table193 = new PdfPTable(11);
			table193.setWidths(new float[] {3f, 3f, 3f, 3f, 3f, 1.5f, 2f,2f, 2f, 2f, 2f });
			if(!show1.isEmpty())
			{
				for(Map<String, String>  shows:show1)
			{

				PdfPCell hcell183;

				hcell183 = new PdfPCell(new Phrase(shows.get("umr"), headFont));
				hcell183.setBorder(Rectangle.NO_BORDER);
				hcell183.setBackgroundColor(BaseColor.WHITE);
				hcell183.setHorizontalAlignment(Element.ALIGN_LEFT);
				hcell183.setPaddingLeft(-50);
				table193.addCell(hcell183);
				
				hcell183 = new PdfPCell(new Phrase(shows.get("billNo"), headFont));
				hcell183.setBorder(Rectangle.NO_BORDER);
				hcell183.setBackgroundColor(BaseColor.WHITE);
				hcell183.setHorizontalAlignment(Element.ALIGN_LEFT);
				hcell183.setPaddingLeft(-50f);
				table193.addCell(hcell183);

				
				hcell183 = new PdfPCell(new Phrase(shows.get("cashAmount1"), headFont));
				hcell183.setBorder(Rectangle.NO_BORDER);
				hcell183.setBackgroundColor(BaseColor.WHITE);
				hcell183.setHorizontalAlignment(Element.ALIGN_RIGHT);
				//hcell183.setPaddingLeft(-20f);
				hcell183.setPaddingRight(40f);
				table193.addCell(hcell183);

				hcell183 = new PdfPCell(new Phrase(shows.get("cardAmount1"), headFont));
				hcell183.setBorder(Rectangle.NO_BORDER);
				hcell183.setBackgroundColor(BaseColor.WHITE);
				hcell183.setHorizontalAlignment(Element.ALIGN_RIGHT);
				//hcell183.setPaddingLeft(-20);
				hcell183.setPaddingRight(40f);
				table193.addCell(hcell183);

				hcell183 = new PdfPCell(new Phrase(shows.get("chqAmount1"), headFont));
				hcell183.setBorder(Rectangle.NO_BORDER);
				hcell183.setBackgroundColor(BaseColor.WHITE);
				hcell183.setHorizontalAlignment(Element.ALIGN_RIGHT);
				hcell183.setPaddingLeft(40);
				table193.addCell(hcell183);

				
				hcell183 = new PdfPCell(new Phrase("", headFont));
				hcell183.setBorder(Rectangle.NO_BORDER);
				hcell183.setBackgroundColor(BaseColor.WHITE);
				// hcell18.setPaddingRight(14f);
				hcell183.setHorizontalAlignment(Element.ALIGN_RIGHT);
				hcell183.setPaddingRight(-60f);
				table193.addCell(hcell183);

				hcell183 = new PdfPCell(new Phrase("", headFont));
				hcell183.setBorder(Rectangle.NO_BORDER);
				hcell183.setBackgroundColor(BaseColor.WHITE);
				hcell183.setHorizontalAlignment(Element.ALIGN_RIGHT);
				hcell183.setPaddingRight(-46f);
				table193.addCell(hcell183);

				hcell183 = new PdfPCell(new Phrase("", headFont));
				hcell183.setBorder(Rectangle.NO_BORDER);
				hcell183.setBackgroundColor(BaseColor.WHITE);
				hcell183.setHorizontalAlignment(Element.ALIGN_RIGHT);
				hcell183.setPaddingRight(-21f);
				table193.addCell(hcell183);

				hcell183 = new PdfPCell(new Phrase("", headFont));
				hcell183.setBorder(Rectangle.NO_BORDER);
				hcell183.setBackgroundColor(BaseColor.WHITE);
				hcell183.setHorizontalAlignment(Element.ALIGN_RIGHT);
				hcell183.setPaddingRight(8f);
				table193.addCell(hcell183);
				
				hcell183 = new PdfPCell(new Phrase("", headFont));
				hcell183.setBorder(Rectangle.NO_BORDER);
				hcell183.setBackgroundColor(BaseColor.WHITE);
				hcell183.setHorizontalAlignment(Element.ALIGN_RIGHT);
				hcell183.setPaddingRight(-10f);
				table193.addCell(hcell183);

				hcell183 = new PdfPCell(new Phrase("", headFont));
				hcell183.setBorder(Rectangle.NO_BORDER);
				hcell183.setBackgroundColor(BaseColor.WHITE);
				hcell183.setHorizontalAlignment(Element.ALIGN_RIGHT);
				hcell183.setPaddingRight(10f);
				table193.addCell(hcell183);
				
			}
			}
			else
			{
				PdfPCell hcell183;

				hcell183 = new PdfPCell(new Phrase("-", headFont));
				hcell183.setBorder(Rectangle.NO_BORDER);
				hcell183.setBackgroundColor(BaseColor.WHITE);
				hcell183.setHorizontalAlignment(Element.ALIGN_LEFT);
				hcell183.setPaddingLeft(-40);
				table193.addCell(hcell183);
				
				hcell183 = new PdfPCell(new Phrase("-", headFont));
				hcell183.setBorder(Rectangle.NO_BORDER);
				hcell183.setBackgroundColor(BaseColor.WHITE);
				hcell183.setHorizontalAlignment(Element.ALIGN_LEFT);
				hcell183.setPaddingLeft(-30f);
				table193.addCell(hcell183);

				
				hcell183 = new PdfPCell(new Phrase("0", headFont));
				hcell183.setBorder(Rectangle.NO_BORDER);
				hcell183.setBackgroundColor(BaseColor.WHITE);
				hcell183.setHorizontalAlignment(Element.ALIGN_RIGHT);
				//hcell183.setPaddingLeft(-20f);
				hcell183.setPaddingRight(40f);
				table193.addCell(hcell183);

				hcell183 = new PdfPCell(new Phrase("0", headFont));
				hcell183.setBorder(Rectangle.NO_BORDER);
				hcell183.setBackgroundColor(BaseColor.WHITE);
				hcell183.setHorizontalAlignment(Element.ALIGN_RIGHT);
				//hcell183.setPaddingLeft(-20);
				hcell183.setPaddingRight(40f);
				table193.addCell(hcell183);

				hcell183 = new PdfPCell(new Phrase("0", headFont));
				hcell183.setBorder(Rectangle.NO_BORDER);
				hcell183.setBackgroundColor(BaseColor.WHITE);
				hcell183.setHorizontalAlignment(Element.ALIGN_RIGHT);
				hcell183.setPaddingLeft(40);
				table193.addCell(hcell183);

				
				hcell183 = new PdfPCell(new Phrase("", headFont));
				hcell183.setBorder(Rectangle.NO_BORDER);
				hcell183.setBackgroundColor(BaseColor.WHITE);
				// hcell18.setPaddingRight(14f);
				hcell183.setHorizontalAlignment(Element.ALIGN_RIGHT);
				hcell183.setPaddingRight(-60f);
				table193.addCell(hcell183);

				hcell183 = new PdfPCell(new Phrase("", headFont));
				hcell183.setBorder(Rectangle.NO_BORDER);
				hcell183.setBackgroundColor(BaseColor.WHITE);
				hcell183.setHorizontalAlignment(Element.ALIGN_RIGHT);
				hcell183.setPaddingRight(-46f);
				table193.addCell(hcell183);

				hcell183 = new PdfPCell(new Phrase("", headFont));
				hcell183.setBorder(Rectangle.NO_BORDER);
				hcell183.setBackgroundColor(BaseColor.WHITE);
				hcell183.setHorizontalAlignment(Element.ALIGN_RIGHT);
				hcell183.setPaddingRight(-21f);
				table193.addCell(hcell183);

				hcell183 = new PdfPCell(new Phrase("", headFont));
				hcell183.setBorder(Rectangle.NO_BORDER);
				hcell183.setBackgroundColor(BaseColor.WHITE);
				hcell183.setHorizontalAlignment(Element.ALIGN_RIGHT);
				hcell183.setPaddingRight(8f);
				table193.addCell(hcell183);
				
				hcell183 = new PdfPCell(new Phrase("", headFont));
				hcell183.setBorder(Rectangle.NO_BORDER);
				hcell183.setBackgroundColor(BaseColor.WHITE);
				hcell183.setHorizontalAlignment(Element.ALIGN_RIGHT);
				hcell183.setPaddingRight(-10f);
				table193.addCell(hcell183);

				hcell183 = new PdfPCell(new Phrase("", headFont));
				hcell183.setBorder(Rectangle.NO_BORDER);
				hcell183.setBackgroundColor(BaseColor.WHITE);
				hcell183.setHorizontalAlignment(Element.ALIGN_RIGHT);
				hcell183.setPaddingRight(10f);
				table193.addCell(hcell183);
				
			}
				
			
			//table193.setWidthPercentage(100f);
			cell1.addElement(table193);
			
			
			PdfPTable table198 = new PdfPTable(1);
			table198.setWidths(new float[] {20f});

			//table198.setSpacingBefore(10);

			PdfPCell hcell1881;

			hcell1881 = new PdfPCell(new Phrase("________________________________________________________________________________________________________________________________________________________________", headFont));
			hcell1881.setBorder(Rectangle.NO_BORDER);
			hcell1881.setHorizontalAlignment(Element.ALIGN_CENTER);
			//hcell188.setPaddingBottom(14f);
			table198.addCell(hcell1881);
			table198.setWidthPercentage(100f);
			cell1.addElement(table198);

			/*cashCPAmount = totalCashAmount + cashAmount;

			cardCPAmount = totalCardAmount + cardAmount;
			chqCPAmount = totalChequeAmount + chqAmount;

			ddCPAmount = totalDDAmount;
			*/
			
			//PdfPCell cell321=new PdfPCell();
			
			PdfPTable table194 = new PdfPTable(11);
			table194.setWidths(new float[] { 3f, 3f, 3f, 3f, 3f, 1.5f, 2f,2f, 2f, 2f, 2f });

			//table194.setSpacingBefore(10);

			PdfPCell hcell183;

			hcell183 = new PdfPCell(new Phrase("Total :", headFont));
			hcell183.setBorder(Rectangle.NO_BORDER);
			hcell183.setBackgroundColor(BaseColor.WHITE);
			hcell183.setHorizontalAlignment(Element.ALIGN_LEFT);
			hcell183.setPaddingLeft(30f);
			table194.addCell(hcell183);

			hcell183 = new PdfPCell(new Phrase(String.valueOf(""), headFont));
			hcell183.setBorder(Rectangle.NO_BORDER);
			hcell183.setBackgroundColor(BaseColor.WHITE);
			hcell183.setHorizontalAlignment(Element.ALIGN_LEFT);
			hcell183.setPaddingRight(35f);
			table194.addCell(hcell183);

			hcell183 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalCashAmount1)), headFont));
			hcell183.setBorder(Rectangle.NO_BORDER);
			hcell183.setBackgroundColor(BaseColor.WHITE);
			hcell183.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell183.setPaddingRight(12f);
			table194.addCell(hcell183);

			hcell183 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalCardAmount1)), headFont));
			hcell183.setBorder(Rectangle.NO_BORDER);
			hcell183.setBackgroundColor(BaseColor.WHITE);
			hcell183.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell183.setPaddingRight(30f);
			table194.addCell(hcell183);

			hcell183 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalChqAmount1)), headFont));
			hcell183.setBorder(Rectangle.NO_BORDER);
			hcell183.setBackgroundColor(BaseColor.WHITE);
			hcell183.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell183.setPaddingRight(12f);
			table194.addCell(hcell183);

			hcell183 = new PdfPCell(new Phrase("", headFont));
			hcell183.setBorder(Rectangle.NO_BORDER);
			hcell183.setBackgroundColor(BaseColor.WHITE);
			// hcell18.setPaddingRight(14f);
			hcell183.setHorizontalAlignment(Element.ALIGN_RIGHT);
			//hcell183.setPaddingRight(-60f);
			table194.addCell(hcell183);

			hcell183 = new PdfPCell(new Phrase("", headFont));
			hcell183.setBorder(Rectangle.NO_BORDER);
			hcell183.setBackgroundColor(BaseColor.WHITE);
			hcell183.setHorizontalAlignment(Element.ALIGN_RIGHT);
			//hcell183.setPaddingRight(-46f);
			table194.addCell(hcell183);

			hcell183 = new PdfPCell(new Phrase("", headFont));
			hcell183.setBorder(Rectangle.NO_BORDER);
			hcell183.setBackgroundColor(BaseColor.WHITE);
			hcell183.setHorizontalAlignment(Element.ALIGN_RIGHT);
			//hcell183.setPaddingRight(-21f);
			table194.addCell(hcell183);

			hcell183 = new PdfPCell(new Phrase("", headFont));
			hcell183.setBorder(Rectangle.NO_BORDER);
			hcell183.setBackgroundColor(BaseColor.WHITE);
			hcell183.setHorizontalAlignment(Element.ALIGN_RIGHT);
			//hcell183.setPaddingRight(8f);
			table194.addCell(hcell183);
			
			hcell183 = new PdfPCell(new Phrase("", headFont));
			hcell183.setBorder(Rectangle.NO_BORDER);
			hcell183.setBackgroundColor(BaseColor.WHITE);
			hcell183.setHorizontalAlignment(Element.ALIGN_RIGHT);
			//hcell183.setPaddingRight(-10f);
			table194.addCell(hcell183);

			hcell183 = new PdfPCell(new Phrase("", headFont));
			hcell183.setBorder(Rectangle.NO_BORDER);
			hcell183.setBackgroundColor(BaseColor.WHITE);
			hcell183.setHorizontalAlignment(Element.ALIGN_RIGHT);
			//hcell183.setPaddingRight(10f);
			table194.addCell(hcell183);
			
			
			table194.setWidthPercentage(100f);

			cell1.addElement(table194);
			
			
			PdfPTable table199 = new PdfPTable(1);
			table199.setWidths(new float[] {20f});

			//table198.setSpacingBefore(10);

			PdfPCell hcell189;

			hcell189 = new PdfPCell(new Phrase("________________________________________________________________________________________________________________________________________________________________", headFont));
			hcell189.setBorder(Rectangle.NO_BORDER);
			hcell189.setHorizontalAlignment(Element.ALIGN_CENTER);
			hcell189.setPaddingBottom(-3f);
			table199.addCell(hcell189);
			table199.setWidthPercentage(100f);
			cell1.addElement(table199);

			
			
			
			
		//	table.addCell(cell324);
			//cell321.addElement(table194);
			
			//----------------calculation for total grand
			   
            float totalCashGAmount=0;
            float totalCardGAmount=0;
            float totalChequeGAmount=0;
            float totalDueGAmount=0;
          
            if(totalCashAmount1!=0 || totalcashAmt!=0)
            {
            	totalCashGAmount+=totalCashAmount1+totalcashAmt;
            }
            if(totalCardAmount1!=0 || totalcardAmt!=0)
            {
            	totalCardGAmount+=totalCardAmount1+totalcardAmt;
            }
            if(totalChqAmount1!=0 || totalchqAmt!=0)
            {
            	totalChequeGAmount+=totalChqAmount1+totalchqAmt;
            }
            if(totalddAmt!=0)
            {
            	totalDueGAmount+=totalddAmt;
            }
			
			

			
			
			PdfPTable table195 = new PdfPTable(11);
			table195.setWidths(new float[] { 5f, 2f, 3.5f, 3.5f, 3f, 3.5f, 2f,2f, 1f, 1f, 2f });

			table195.setSpacingBefore(5);

			PdfPCell hcell184;

			hcell184 = new PdfPCell(new Phrase("GRAND TOTAL AMOUNT  :", headFontc));
			System.out.println("---------------------------------------------"+cardCPAmount);
			hcell184.setBorder(Rectangle.NO_BORDER);
			hcell184.setBackgroundColor(BaseColor.WHITE);
			//hcell184.setHorizontalAlignment(Element.ALIGN_LEFT);
			//hcell184.setPaddingLeft(30f);
			table195.addCell(hcell184);

			hcell184 = new PdfPCell(new Phrase(String.valueOf(""), headFont));
			hcell184.setBorder(Rectangle.NO_BORDER);
			hcell184.setBackgroundColor(BaseColor.WHITE);
			hcell184.setHorizontalAlignment(Element.ALIGN_LEFT);
			hcell184.setPaddingRight(35f);
			table195.addCell(hcell184);

			hcell184 = new PdfPCell(new Phrase(String.valueOf("Cash Amount"), headFontc));
			hcell184.setBorder(Rectangle.NO_BORDER);
			hcell184.setBackgroundColor(BaseColor.WHITE);
			hcell184.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell184.setPaddingRight(33f);
			table195.addCell(hcell184);

			hcell184 = new PdfPCell(new Phrase(String.valueOf("Card Amount"), headFontc));
			hcell184.setBorder(Rectangle.NO_BORDER);
			hcell184.setBackgroundColor(BaseColor.WHITE);
			hcell184.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell184.setPaddingRight(35f);
			table195.addCell(hcell184);

			hcell184 = new PdfPCell(new Phrase(String.valueOf("Chq Amount"), headFontc));
			hcell184.setBorder(Rectangle.NO_BORDER);
			hcell184.setBackgroundColor(BaseColor.WHITE);
			hcell184.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell184.setPaddingRight(25f);
			table195.addCell(hcell184);

			hcell184 = new PdfPCell(new Phrase("DD Amount", headFontc));
			hcell184.setBorder(Rectangle.NO_BORDER);
			hcell184.setBackgroundColor(BaseColor.WHITE);
			// hcell18.setPaddingRight(14f);
			hcell184.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell184.setPaddingRight(30f);
			table195.addCell(hcell184);

			hcell184 = new PdfPCell(new Phrase("", headFont));
			hcell184.setBorder(Rectangle.NO_BORDER);
			hcell184.setBackgroundColor(BaseColor.WHITE);
			hcell184.setHorizontalAlignment(Element.ALIGN_RIGHT);
			//hcell183.setPaddingRight(-46f);
			table195.addCell(hcell184);

			hcell184 = new PdfPCell(new Phrase("", headFont));
			hcell184.setBorder(Rectangle.NO_BORDER);
			hcell184.setBackgroundColor(BaseColor.WHITE);
			hcell184.setHorizontalAlignment(Element.ALIGN_RIGHT);
			//hcell183.setPaddingRight(-21f);
			table195.addCell(hcell184);

			hcell184 = new PdfPCell(new Phrase("", headFont));
			hcell184.setBorder(Rectangle.NO_BORDER);
			hcell184.setBackgroundColor(BaseColor.WHITE);
			hcell184.setHorizontalAlignment(Element.ALIGN_RIGHT);
			//hcell183.setPaddingRight(8f);
			table195.addCell(hcell184);
			
			hcell184 = new PdfPCell(new Phrase("", headFont));
			hcell184.setBorder(Rectangle.NO_BORDER);
			hcell184.setBackgroundColor(BaseColor.WHITE);
			hcell184.setHorizontalAlignment(Element.ALIGN_RIGHT);
			//hcell183.setPaddingRight(-10f);
			table195.addCell(hcell184);

			hcell184 = new PdfPCell(new Phrase("", headFont));
			hcell184.setBorder(Rectangle.NO_BORDER);
			hcell184.setBackgroundColor(BaseColor.WHITE);
			hcell184.setHorizontalAlignment(Element.ALIGN_RIGHT);
			//hcell183.setPaddingRight(10f);
			table195.addCell(hcell184);
		
			
			cell1.addElement(table195);
			//cell321.setColspan(2);
			//table195.setWidthPercentage(100f);
			//cell321.addElement(table194);
			
			PdfPTable table200 = new PdfPTable(1);
			table200.setWidths(new float[] {20f});

			table200.setSpacingAfter(0);

			PdfPCell hcell1901;

			hcell1901 = new PdfPCell(new Phrase("________________________________________________________________________________________________________________________________________________________________", headFont));
			hcell1901.setBorder(Rectangle.NO_BORDER);
			hcell1901.setHorizontalAlignment(Element.ALIGN_CENTER);
			//hcell190.setPaddingBottom(-3f);
			table200.addCell(hcell1901);
			table200.setWidthPercentage(100f);
			
cell1.addElement(table200);
			
			PdfPTable table196 = new PdfPTable(11);
			table196.setWidths(new float[] { 3f, 3f, 3f, 3f, 3f, 3f, 2f,2f, 2f, 2f, 2f });

			//table196.setSpacingBefore(10);

			PdfPCell hcell185;

			hcell185 = new PdfPCell(new Phrase("", headFont));
			System.out.println("---------------------------------------------"+cardCPAmount);
			hcell185.setBorder(Rectangle.NO_BORDER);
			hcell185.setBackgroundColor(BaseColor.WHITE);
			hcell185.setHorizontalAlignment(Element.ALIGN_LEFT);
			hcell185.setPaddingLeft(30f);
			table196.addCell(hcell185);

			hcell185 = new PdfPCell(new Phrase(String.valueOf(""), headFont));
			hcell185.setBorder(Rectangle.NO_BORDER);
			hcell185.setBackgroundColor(BaseColor.WHITE);
			hcell185.setHorizontalAlignment(Element.ALIGN_LEFT);
			hcell185.setPaddingRight(35f);
			table196.addCell(hcell185);

			hcell185 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalCashGAmount)), headFont));
			hcell185.setBorder(Rectangle.NO_BORDER);
			hcell185.setBackgroundColor(BaseColor.WHITE);
			hcell185.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell185.setPaddingRight(0f);
			table196.addCell(hcell185);

			hcell185 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalCardGAmount)), headFont));
			hcell185.setBorder(Rectangle.NO_BORDER);
			hcell185.setBackgroundColor(BaseColor.WHITE);
			hcell185.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell185.setPaddingRight(7f);
			table196.addCell(hcell185);

			hcell185 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalChequeGAmount)), headFont));
			hcell185.setBorder(Rectangle.NO_BORDER);
			hcell185.setBackgroundColor(BaseColor.WHITE);
			hcell185.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell185.setPaddingRight(-10f);
			table196.addCell(hcell185);

			hcell185 = new PdfPCell(new Phrase(String.valueOf(Math.round(totalDueGAmount)), headFont));
			hcell185.setBorder(Rectangle.NO_BORDER);
			hcell185.setBackgroundColor(BaseColor.WHITE);
			// hcell18.setPaddingRight(14f);
			hcell185.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell185.setPaddingRight(-20f);
			table196.addCell(hcell185);

			hcell185 = new PdfPCell(new Phrase("", headFont));
			hcell185.setBorder(Rectangle.NO_BORDER);
			hcell185.setBackgroundColor(BaseColor.WHITE);
			hcell185.setHorizontalAlignment(Element.ALIGN_RIGHT);
			//hcell183.setPaddingRight(-46f);
			table196.addCell(hcell185);

			hcell185 = new PdfPCell(new Phrase("", headFont));
			hcell185.setBorder(Rectangle.NO_BORDER);
			hcell185.setBackgroundColor(BaseColor.WHITE);
			hcell185.setHorizontalAlignment(Element.ALIGN_RIGHT);
			//hcell183.setPaddingRight(-21f);
			table196.addCell(hcell185);

			hcell185 = new PdfPCell(new Phrase("", headFont));
			hcell185.setBorder(Rectangle.NO_BORDER);
			hcell185.setBackgroundColor(BaseColor.WHITE);
			hcell185.setHorizontalAlignment(Element.ALIGN_RIGHT);
			//hcell183.setPaddingRight(8f);
			table196.addCell(hcell185);
			
			hcell185 = new PdfPCell(new Phrase("", headFont));
			hcell185.setBorder(Rectangle.NO_BORDER);
			hcell185.setBackgroundColor(BaseColor.WHITE);
			hcell185.setHorizontalAlignment(Element.ALIGN_RIGHT);
			//hcell183.setPaddingRight(-10f);
			table196.addCell(hcell185);

			hcell185 = new PdfPCell(new Phrase("", headFont));
			hcell185.setBorder(Rectangle.NO_BORDER);
			hcell185.setBackgroundColor(BaseColor.WHITE);
			hcell185.setHorizontalAlignment(Element.ALIGN_RIGHT);
			//hcell183.setPaddingRight(10f);
			table196.addCell(hcell185);
			
			//cell321.setColspan(2);
			table194.setWidthPercentage(100f);
			table195.setWidthPercentage(100f);
			table196.setWidthPercentage(100f);
			
			
			cell1.addElement(table196);
			
			table.addCell(cell1);
			/*cell321.addElement(table194);
			cell321.addElement(table195);
			cell321.addElement(table196);*/
			
			
			
			//table.addCell(cell321);
			
			document.add(table);

			document.close();

			System.out.println("finished");
			pdfByte = byteArrayOutputStream.toByteArray();
			String uri = ServletUriComponentsBuilder.fromCurrentContextPath().path("/v1/sales/viewFile/")
					.path(salesPaymentPdfServiceImpl.getNextId()).toUriString();

			salesPaymentPdf = new SalesPaymentPdf();
			salesPaymentPdf.setFileName("User Shift Wise Details");
			salesPaymentPdf.setFileuri(uri);
			salesPaymentPdf.setPid(salesPaymentPdfServiceImpl.getNextId());
			salesPaymentPdf.setData(pdfByte);

			salesPaymentPdfServiceImpl.save(salesPaymentPdf);

		} catch (Exception e) {
			e.printStackTrace();
			//System.out.print(e.getMessage());
		}		return salesPaymentPdf;
	}
	
	

	

	@RequestMapping(value = "/billsummary", method = RequestMethod.POST)
	public SalesPaymentPdf getBillSummaryDetails(@RequestBody Map<String, Timestamp> userShift,Principal principal) {

			Map<String, Timestamp> user = userShift;
			List<Sales> salesList1 = salesRepository.findTheUserWiseDetails(user.get("fromDate"), user.get("toDate"));

			List<SalesReturn> salesReturnList = salesReturnRepository.findTheUserWiseDetails(user.get("fromDate"), user.get("toDate"));

			SalesPaymentPdf salesPaymentPdf = null;

			String from = user.get("fromDate").toString();
			Timestamp timestamp = Timestamp.valueOf(from);
			DateFormat dateFormat = new SimpleDateFormat("dd-MMM-yyyy hh.mm aa ");
			Calendar calendar = Calendar.getInstance();
			calendar.setTimeInMillis(timestamp.getTime());
			String from1 = dateFormat.format(calendar.getTime());

			String to = user.get("toDate").toString();
			Timestamp timestamp1 = Timestamp.valueOf(to);
			DateFormat dateFormat1 = new SimpleDateFormat("dd-MMM-yyyy hh.mm aa ");
			Calendar calendar1 = Calendar.getInstance();
			calendar1.setTimeInMillis(timestamp1.getTime());
			String to1 = dateFormat1.format(calendar1.getTime());		

			// Display a date in day, month, year format
			Date date = Calendar.getInstance().getTime();
			DateFormat formatter = new SimpleDateFormat("dd-MMM-yyyy hh.mm aa");
			String today = formatter.format(date).toString();


			try {

				byte[] pdfByte = null;
				ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();

				Document document = new Document(PageSize.A4.rotate());

				Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 10, Font.NORMAL);

				Font headFont = new Font(Font.FontFamily.TIMES_ROMAN, 10, Font.BOLD);
				
				Font headFont2 = new Font(Font.FontFamily.TIMES_ROMAN, 10, Font.BOLD,BaseColor.BLUE);
				Font headFont1 = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD);
				PdfWriter writer = PdfWriter.getInstance(document, byteArrayOutputStream);
				HeaderFooterPageEvent event = new HeaderFooterPageEvent();
				 writer.setPageEvent(event);
				Resource fileResourcee = resourceLoader.getResource("classpath:udbhava.png");
				document.open();
				
				//CreatedBy user Security
				User userSecurity=userServiceImpl.findByUserName(principal.getName());
				String createdBy=userSecurity.getFirstName()+" "+userSecurity.getLastName();

				PdfPTable table = new PdfPTable(2);

				Image img = Image.getInstance(fileResourcee.getFile().getAbsolutePath());
				img.scaleAbsolute(75, 95);
				table.setWidthPercentage(105f);

				Phrase pq = new Phrase(new Chunk(img, 5, -80));

				//shantharam addr
				pq.add(new Chunk( "",
				redFont));
				PdfPCell cellp = new PdfPCell(pq);
				PdfPCell cell1 = new PdfPCell();

				// for header Bold
				PdfPTable table96 = new PdfPTable(1);
				table96.setWidths(new float[] { 5f });
				table96.setSpacingBefore(10);

				PdfPCell hcell96;
				hcell96 = new PdfPCell(new Phrase("UDBHAVA PHARMACY", headFont1));
				hcell96.setBorder(Rectangle.NO_BORDER);
				hcell96.setHorizontalAlignment(Element.ALIGN_CENTER);
				
				hcell96.setPaddingLeft(20f);

				table96.addCell(hcell96);
				cell1.addElement(table96);
				
				
				PdfPTable table961 = new PdfPTable(1);
				table961.setWidths(new float[] { 5f });
				table961.setSpacingBefore(10);

				PdfPCell hcell961;
				hcell961 = new PdfPCell(new Phrase(ConstantValues.HOSPITAL_NAME, headFont1));
				hcell961.setBorder(Rectangle.NO_BORDER);
				hcell961.setHorizontalAlignment(Element.ALIGN_CENTER);
				hcell961.setPaddingLeft(20f);

				table961.addCell(hcell961);
				cell1.addElement(table961);


				// for header end
			//	cell1.setFixedHeight(120f);
				cell1.addElement(pq);
				cell1.setHorizontalAlignment(Element.ALIGN_CENTER);
				cell1.setColspan(2);
			//	table.addCell(cell1);

			//	PdfPCell cell19 = new PdfPCell();

				PdfPTable table21 = new PdfPTable(1);
				table21.setWidths(new float[] { 4f });
				table21.setSpacingBefore(10);

				PdfPCell hcell19;
				hcell19 = new PdfPCell(new Phrase("Bill Summary", headFont1));
				hcell19.setBorder(Rectangle.NO_BORDER);
				hcell19.setHorizontalAlignment(Element.ALIGN_CENTER);
				// hcell19.setPaddingLeft(-70f);
				table21.addCell(hcell19);

				PdfPCell hcell20;
				hcell20 = new PdfPCell(new Phrase("From Dt  : " + from1 + "           " + "Till Dt  : " + to1, redFont));
				hcell20.setBorder(Rectangle.NO_BORDER);
				hcell20.setHorizontalAlignment(Element.ALIGN_CENTER);
				table21.addCell(hcell20);

				PdfPTable table3 = new PdfPTable(2);
				table3.setWidths(new float[] { 5f, 4f });
				table3.setSpacingBefore(10);

				PdfPCell hcell111;
				hcell111 = new PdfPCell(new Phrase("Printed By          :  "  + createdBy , redFont));
				hcell111.setBorder(Rectangle.NO_BORDER);
				hcell111.setPaddingLeft(-70f);
				table3.addCell(hcell111);

				hcell111 = new PdfPCell(new Phrase("Printed Date & Time    :  " + today, redFont));
				hcell111.setBorder(Rectangle.NO_BORDER);
				hcell111.setPaddingRight(-70f);
				hcell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
				table3.addCell(hcell111);

				
				PdfPTable table22 = new PdfPTable(1);
				table22.setWidths(new float[] {15f});
				table22.setSpacingBefore(10);
				 table22.setWidthPercentage(100f);

				PdfPCell hcell190;
				hcell190 = new PdfPCell(new Phrase("____________________________________________________________________________________________________________________________________", headFont1));
				hcell190.setBorder(Rectangle.NO_BORDER);
				hcell190.setHorizontalAlignment(Element.ALIGN_CENTER);
				// hcell19.setPaddingLeft(-70f);
				table22.addCell(hcell190);
				
				
				
			/*	cell19.setFixedHeight(60f);
				cell19.setColspan(2);
				cell19.addElement(table21);
				cell19.addElement(table3);
				table.addCell(cell19);

				PdfPCell cell112 = new PdfPCell();
*/
				PdfPTable table01 = new PdfPTable(9);
				table01.setWidths(new float[] { 1.5f, 4f, 5f, 3f, 5f, 5f, 5f, 5f, 5f });
				table01.setSpacingBefore(10);

				PdfPCell hcell01;
				hcell01 = new PdfPCell(new Phrase("S.no", redFont));
				hcell01.setBorder(Rectangle.NO_BORDER);
				hcell01.setBackgroundColor(BaseColor.GRAY);
				hcell01.setHorizontalAlignment(Element.ALIGN_LEFT);
				table01.addCell(hcell01);

				hcell01 = new PdfPCell(new Phrase("Trn Dt", redFont));
				hcell01.setBorder(Rectangle.NO_BORDER);
				hcell01.setBackgroundColor(BaseColor.GRAY);
				hcell01.setHorizontalAlignment(Element.ALIGN_CENTER);
				table01.addCell(hcell01);

				hcell01 = new PdfPCell(new Phrase("Sale Amt", redFont));
				hcell01.setBorder(Rectangle.NO_BORDER);
				hcell01.setBackgroundColor(BaseColor.GRAY);
				hcell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
				hcell01.setPaddingRight(20f);
				table01.addCell(hcell01);

				hcell01 = new PdfPCell(new Phrase("Conc. Amt", redFont));
				hcell01.setBorder(Rectangle.NO_BORDER);
				hcell01.setBackgroundColor(BaseColor.GRAY);
				hcell01.setHorizontalAlignment(Element.ALIGN_CENTER);
				table01.addCell(hcell01);

				hcell01 = new PdfPCell(new Phrase("Due Amt", redFont));
				hcell01.setBorder(Rectangle.NO_BORDER);
				hcell01.setBackgroundColor(BaseColor.GRAY);
				hcell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
				table01.addCell(hcell01);

				hcell01 = new PdfPCell(new Phrase("Return Amt", redFont));
				hcell01.setBorder(Rectangle.NO_BORDER);
				hcell01.setBackgroundColor(BaseColor.GRAY);
				hcell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
				table01.addCell(hcell01);

				hcell01 = new PdfPCell(new Phrase("Receipt Amt", redFont));
				hcell01.setBorder(Rectangle.NO_BORDER);
				hcell01.setBackgroundColor(BaseColor.GRAY);
				hcell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
				table01.addCell(hcell01);

				hcell01 = new PdfPCell(new Phrase("Net Amt", redFont));
				hcell01.setBorder(Rectangle.NO_BORDER);
				hcell01.setBackgroundColor(BaseColor.GRAY);
				hcell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
				table01.addCell(hcell01);

				hcell01 = new PdfPCell(new Phrase("Net Purc Value", redFont));
				hcell01.setBorder(Rectangle.NO_BORDER);
				hcell01.setBackgroundColor(BaseColor.GRAY);
				hcell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
				table01.addCell(hcell01);
				
				
				PdfPTable table11 = new PdfPTable(1);
				table11.setWidths(new float[] { 4f });
				table11.setSpacingBefore(10);

				PdfPCell hcell11;
				hcell11 = new PdfPCell(new Phrase("Udbhava Pharmacy", headFont2));
				hcell11.setBorder(Rectangle.NO_BORDER);
				hcell11.setHorizontalAlignment(Element.ALIGN_LEFT);
				hcell11.setPaddingLeft(-70f);
				table11.addCell(hcell11);
			
				long totalSaleAmt = 0;
				long totalConcAmt = 0;
				long totalDueAmt = 0;
				long totalReturnAmt = 0;
				long totalReceiptAmt = 0;
				long totalNetAmt = 0;
				long totalNetPurcAmt = 0;
				String pType = null;
				
				List<Map<String, Object>> show = new ArrayList<>();

				int count = 0;
				String salesDate = null;
				ArrayList<Object> info = new ArrayList<>();
				if(!salesList1.isEmpty())
				{
				for (Sales sales : salesList1) {

					// for convert db date to dmy format
					Timestamp date1 = sales.getBillDate();
					DateFormat format1 = new SimpleDateFormat("yyyy-MM-dd");
					//DateFormat toformat=
					Calendar cal = Calendar.getInstance();
					cal.setTimeInMillis(date1.getTime());
					salesDate = format1.format(cal.getTime());
					System.out.println(salesDate);
					
					Map<String, Object> displayInfo = new HashMap<>();
					long billAmnt = 0;
					long concAmt = 0;
					long dueAmt1 = 0;
					long recpAmt = 0;
					long netAmt = 0;
					long billReturnAmnt = 0;
					long procurementAmnt = 0;
					String salesDate3=null;

					if (!info.contains(salesDate)) 
					{
						List<Sales> findBill = salesRepository.getBillDate(salesDate);
						if(!findBill.isEmpty())
						{
						for (Sales saleInfo : findBill) 
						{
							System.out.println(saleInfo.getBillDate());
							
							SimpleDateFormat fromFormat = new SimpleDateFormat("yyyy-MM-dd");
							SimpleDateFormat toFormat = new SimpleDateFormat("dd-MMM-yyyy");
							salesDate3=toFormat.format(fromFormat.parse(salesDate));
							displayInfo.put("Date", salesDate3);
							
							if (saleInfo.getPatientRegistration() != null) {
								pType = saleInfo.getPatientRegistration().getpType();
								System.out.println(pType);
							}

							else {
								pType = "WALKERS";

							}
							if (pType.equalsIgnoreCase("INPATIENT")) 
							{

								dueAmt1+= saleInfo.getAmount();
							} 
							else 
							{
								//billAmnt += saleInfo.getAmount();
							}
							billAmnt += saleInfo.getAmount();
							recpAmt = billAmnt-dueAmt1;
						}
						}
						
						displayInfo.put("BillAmt", String.valueOf(billAmnt));
						displayInfo.put("dueAmt", String.valueOf(dueAmt1));
						displayInfo.put("recpAmt", String.valueOf(recpAmt));
						
						List<MedicineProcurement> procurementDate = medicineProcurementRepository.getProcurementDate(salesDate);
						if(!procurementDate.isEmpty())
						{
						for (MedicineProcurement procInfo : procurementDate) 
						{

							procurementAmnt += procInfo.getAmount();
				
						}
						}
						
						displayInfo.put("procurementAmnt", String.valueOf(procurementAmnt));

						List<SalesReturn> findReturnDate = salesReturnRepository.getBillReturnDate(salesDate);
						if(!findReturnDate.isEmpty())
						{
						for (SalesReturn saleInfo : findReturnDate) 
						{

							billReturnAmnt += saleInfo.getAmount();
						
						}
						}
						netAmt = billAmnt-(dueAmt1+billReturnAmnt);
						displayInfo.put("netAmt", String.valueOf(netAmt));
						displayInfo.put("BillReturnAmt", String.valueOf(billReturnAmnt));
						
						displayInfo.put("concAmt", concAmt);
						show.add(displayInfo);
						info.add(salesDate);

					}
					totalSaleAmt+=billAmnt;
					totalConcAmt+=concAmt;
					totalDueAmt+=dueAmt1;
					totalReturnAmt+=billReturnAmnt;
					totalReceiptAmt+=recpAmt;
					totalNetAmt+=netAmt;
					totalNetPurcAmt+=procurementAmnt;
				}
				}
				String value=null;
				
				
				PdfPTable table03 = new PdfPTable(9);
				table03.setWidths(new float[] { 1.5f, 4f, 5f, 3f, 5f, 5f, 5f, 5f, 5f });
				table03.setSpacingBefore(10);

				
				
				for (Map<String, Object> show1 : show) {

					PdfPCell cell;
					cell = new PdfPCell(new Phrase(String.valueOf(count = count + 1), redFont));
					cell.setBorder(Rectangle.NO_BORDER);
					cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
					//cell.setPaddingTop(10f);
					cell.setHorizontalAlignment(Element.ALIGN_CENTER);
					table03.addCell(cell);

					
					cell = new PdfPCell(new Phrase(String.valueOf(show1.get("Date")), redFont));
					cell.setBorder(Rectangle.NO_BORDER);
					cell.setPaddingLeft(5);
					cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
					cell.setHorizontalAlignment(Element.ALIGN_CENTER);
					table03.addCell(cell);

					cell = new PdfPCell(new Phrase(String.valueOf(show1.get("BillAmt")), redFont));
					cell.setBorder(Rectangle.NO_BORDER);
					cell.setPaddingLeft(5);
					cell.setHorizontalAlignment(Element.ALIGN_RIGHT);
					cell.setPaddingRight(30f);
					table03.addCell(cell);

					cell = new PdfPCell(new Phrase(String.valueOf(show1.get("concAmt")), redFont));
					cell.setBorder(Rectangle.NO_BORDER);
					cell.setPaddingLeft(5);
					cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
					cell.setHorizontalAlignment(Element.ALIGN_CENTER);
					table03.addCell(cell);

					cell = new PdfPCell(new Phrase(String.valueOf(show1.get("dueAmt")), redFont));
					cell.setBorder(Rectangle.NO_BORDER);
					cell.setPaddingLeft(5);
					//cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
					cell.setHorizontalAlignment(Element.ALIGN_RIGHT);
					cell.setPaddingRight(10f);
					table03.addCell(cell);

					cell = new PdfPCell(new Phrase(String.valueOf(show1.get("BillReturnAmt")), redFont));
					cell.setBorder(Rectangle.NO_BORDER);
					cell.setPaddingLeft(5);
					//cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
					cell.setHorizontalAlignment(Element.ALIGN_RIGHT);
					cell.setPaddingRight(10f);
					table03.addCell(cell);

					cell = new PdfPCell(new Phrase(String.valueOf(show1.get("recpAmt")), redFont));
					cell.setBorder(Rectangle.NO_BORDER);
					cell.setPaddingLeft(5);
					//cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
					cell.setHorizontalAlignment(Element.ALIGN_RIGHT);
					cell.setPaddingRight(10f);
					table03.addCell(cell);

					cell = new PdfPCell(new Phrase(String.valueOf(show1.get("netAmt")), redFont));
					cell.setBorder(Rectangle.NO_BORDER);
					cell.setPaddingLeft(5);
					//cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
					cell.setHorizontalAlignment(Element.ALIGN_RIGHT);
					cell.setPaddingRight(10f);
					table03.addCell(cell);

					cell = new PdfPCell(new Phrase(String.valueOf(show1.get("procurementAmnt")), redFont));
					cell.setBorder(Rectangle.NO_BORDER);
					cell.setPaddingLeft(5);
					//cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
					cell.setHorizontalAlignment(Element.ALIGN_RIGHT);
					cell.setPaddingRight(10f);
					table03.addCell(cell);
				}

				cell1.setColspan(2);
				table01.setWidthPercentage(100f);
				table03.setWidthPercentage(100f);
				cell1.addElement(table22);
				cell1.addElement(table21);
				cell1.addElement(table01);
				cell1.addElement(table03);
				table.addCell(cell1);
				
				/*cell112.addElement(table01);
				cell112.addElement(table11);
				cell112.addElement(table03);
			*/
				//table.addCell(cell112);
				
				PdfPCell cell11 = new PdfPCell();

				PdfPTable table1 = new PdfPTable(9);
				table1.setWidths(new float[] { 1.5f, 4f, 5f, 3f, 5f, 5f, 5f, 5f, 5f });
				table1.setSpacingBefore(10);
				
				PdfPCell hcell011;
				hcell011 = new PdfPCell(new Phrase("", redFont));
				hcell011.setBorder(Rectangle.NO_BORDER);
				hcell011.setHorizontalAlignment(Element.ALIGN_LEFT);
				table1.addCell(hcell011);

				hcell011 = new PdfPCell(new Phrase("Grand Total :", headFont));
				hcell011.setBorder(Rectangle.NO_BORDER);
				hcell011.setHorizontalAlignment(Element.ALIGN_CENTER);
				table1.addCell(hcell011);

				hcell011 = new PdfPCell(new Phrase(String.valueOf(totalSaleAmt), redFont));
				hcell011.setBorder(Rectangle.NO_BORDER);
				hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
				hcell011.setPaddingRight(30f);
				table1.addCell(hcell011);

				hcell011 = new PdfPCell(new Phrase(String.valueOf(totalConcAmt), redFont));
				hcell011.setBorder(Rectangle.NO_BORDER);
				hcell011.setVerticalAlignment(Element.ALIGN_MIDDLE);
				hcell011.setHorizontalAlignment(Element.ALIGN_CENTER);
				//hcell011.setPaddingTop(10f);
				table1.addCell(hcell011);

				hcell011 = new PdfPCell(new Phrase(String.valueOf(totalDueAmt), redFont));
				hcell011.setBorder(Rectangle.NO_BORDER);
				hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
				hcell011.setPaddingRight(10f);
				table1.addCell(hcell011);

				hcell011 = new PdfPCell(new Phrase(String.valueOf(totalReturnAmt), redFont));
				hcell011.setBorder(Rectangle.NO_BORDER);
				hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
				//hcell011.setPaddingTop(10f);
				hcell011.setPaddingRight(10f);
				table1.addCell(hcell011);

				hcell011 = new PdfPCell(new Phrase(String.valueOf(totalReceiptAmt), redFont));
				hcell011.setBorder(Rectangle.NO_BORDER);
				hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
				hcell011.setPaddingRight(10f);
				table1.addCell(hcell011);

				hcell011 = new PdfPCell(new Phrase(String.valueOf(totalNetAmt), redFont));
				hcell011.setBorder(Rectangle.NO_BORDER);
				hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
				//hcell011.setPaddingTop(10f);
				hcell011.setPaddingRight(10f);
				table1.addCell(hcell011);

				hcell011 = new PdfPCell(new Phrase(String.valueOf(totalNetPurcAmt), redFont));
				hcell011.setBorder(Rectangle.NO_BORDER);
				hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
				hcell011.setPaddingRight(10f);
				table1.addCell(hcell011);

				cell11.setColspan(2);
				table1.setWidthPercentage(100f);
				cell11.addElement(table1);
				table.addCell(cell11);

				document.add(table);

				document.close();

				System.out.println("finished");

				pdfByte = byteArrayOutputStream.toByteArray();
				String uri = ServletUriComponentsBuilder.fromCurrentContextPath().path("/v1/sales/viewFile/")
						.path(salesPaymentPdfServiceImpl.getNextId()).toUriString();

				salesPaymentPdf = new SalesPaymentPdf();
				salesPaymentPdf.setFileName("Bill Summary");
				salesPaymentPdf.setFileuri(uri);
				salesPaymentPdf.setPid(salesPaymentPdfServiceImpl.getNextId());
				salesPaymentPdf.setData(pdfByte);
				System.out.println(salesPaymentPdf);
				// System.out.println("------------------------End--------------------------------");
				// System.out.println(totalBillAmount);
				System.out.println(to);
				salesPaymentPdfServiceImpl.save(salesPaymentPdf);

			} catch (Exception e) {
				Logger.error(e.getMessage());
			}

			return salesPaymentPdf;
		}

	
	

@RequestMapping(value = "/userWiseIpOpDetailed", method = RequestMethod.POST)
 public SalesPaymentPdf getUserWiseIpOpDetails(@RequestBody Map<String, Object> userShift,Principal principal) {
        
        Map<String, Object> user = userShift;
        
        String name = (String) user.get("soldBy");
      /*  String[] a=name.split(" ");
        String firstName=a[0];
        String lastName=a[1];*/
        
        String[] docName=name.split("-");
        
        User user1 = userServiceImpl.findOneByUserId(docName[1]);
        String uId = user1.getUserId();
        String userName = user1.getUserName();
        
    //    System.out.println(firstName+" "+lastName);
        
        /*List<PatientRegistration> patientRegistration = patientRegistrationRepository.findUserWiseIpOpDetailed(user.get("fromDate"), user.get("toDate"),uId);
        SalesPaymentPdf salesPaymentPdf = null;
        //CreatedBy (Security)
        User userSecurity=userServiceImpl.findOneByUserId(principal.getName());
        String createdBy=userSecurity.getFirstName()+" "+userSecurity.getLastName();*/
        
        List<PatientRegistration> patientRegistration = patientRegistrationRepository.findUserWiseIpOpDetailed(user.get("fromDate"), user.get("toDate"),uId);
        SalesPaymentPdf salesPaymentPdf = null;
        //CreatedBy (Security)
        User userSecurity=userServiceImpl.findByUserName(principal.getName());
        String createdBy=userSecurity.getFirstName()+" "+userSecurity.getLastName();
        
        
    
        try {
            byte[] pdfByte = null;
            ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
            Document document = new Document(PageSize.A4.rotate());
            Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 10, Font.NORMAL);
            Font redFont1 = new Font(Font.FontFamily.TIMES_ROMAN, 10, Font.NORMAL,BaseColor.RED);
            Font headFont = new Font(Font.FontFamily.TIMES_ROMAN, 10, Font.BOLD);
            Font headFont1 = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD);
            PdfWriter writer = PdfWriter.getInstance(document, byteArrayOutputStream);
            HeaderFooterPageEvent event = new HeaderFooterPageEvent();
            writer.setPageEvent(event);
            Resource fileResourcee = resourceLoader.getResource("classpath:udbhava.png");
            document.open();
            PdfPTable table = new PdfPTable(2);
            Image img = Image.getInstance(fileResourcee.getFile().getAbsolutePath());
            img.scaleAbsolute(75, 95);
            table.setWidthPercentage(105f);
            Phrase pq = new Phrase(new Chunk(img, 5, -80));
        	//shantharam addr
            pq.add(new Chunk(
                    "",
                    redFont));
            
            
            PdfPTable table212 = new PdfPTable(1);
            table212.setWidths(new float[] { 4f });
            table212.setSpacingBefore(10);
            PdfPCell hcell192;
            hcell192 = new PdfPCell(new Phrase(ConstantValues.HOSPITAL_NAME, headFont1));
            hcell192.setBorder(Rectangle.NO_BORDER);
            hcell192.setHorizontalAlignment(Element.ALIGN_CENTER);
            table212.addCell(hcell192);
            
            PdfPCell cellp = new PdfPCell(pq);
            
            cellp.setPaddingBottom(-10f);
            PdfPCell cell1 = new PdfPCell();
            
            //cell1.setBorder(Rectangle.NO_BORDER);
            //cell1.setHorizontalAlignment(Element.ALIGN_CENTER);
            //cell1.setColspan(2);
            cell1.addElement(table212);
            cell1.addElement(pq);
            cell1.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell1.setColspan(2);
            PdfPTable table21 = new PdfPTable(1);
            table21.setWidths(new float[] { 4f });
            table21.setSpacingBefore(10);
            PdfPCell hcell19;
            hcell19 = new PdfPCell(new Phrase("User Wise IP and OP Detailed Collection Report", headFont1));
            hcell19.setBorder(Rectangle.NO_BORDER);
            hcell19.setHorizontalAlignment(Element.ALIGN_CENTER);
            table21.addCell(hcell19);
            
            // calender format date
            String from = user.get("fromDate").toString();
            Timestamp timestamp = Timestamp.valueOf(from);
            DateFormat dateFormat = new SimpleDateFormat("dd-MMM-yyyy hh.mm aa ");
            Calendar calendar = Calendar.getInstance();
            calendar.setTimeInMillis(timestamp.getTime());
            String from1 = dateFormat.format(calendar.getTime());
            String to = user.get("toDate").toString();
            
            Timestamp timestamp1 = Timestamp.valueOf(to);
            DateFormat dateFormat1 = new SimpleDateFormat("dd-MMM-yyyy hh.mm aa ");
            Calendar calendar1 = Calendar.getInstance();
            calendar1.setTimeInMillis(timestamp1.getTime());
            String to1 = dateFormat1.format(calendar1.getTime());
            
            // Display a date in day, month, year format
            Date date = Calendar.getInstance().getTime();
            DateFormat formatter = new SimpleDateFormat("dd-MMM-yyyy hh.mm aa");
            String today = formatter.format(date).toString();
            
            PdfPCell hcell20;
            hcell20 = new PdfPCell(new Phrase("From Dt  : " + from1 + "           " + "Till Dt  : " + to1, redFont));
            hcell20.setBorder(Rectangle.NO_BORDER);
            hcell20.setHorizontalAlignment(Element.ALIGN_CENTER);
            table21.addCell(hcell20);
            
            PdfPTable table3 = new PdfPTable(2);
            table3.setWidths(new float[] { 5f, 4f });
            table3.setSpacingBefore(10);
            
            PdfPCell hcell111;
            
            hcell111 = new PdfPCell(new Phrase("Printed By          :  " + createdBy , redFont));
            hcell111.setBorder(Rectangle.NO_BORDER);
            hcell111.setPaddingLeft(-70f);
            table3.addCell(hcell111);
            hcell111 = new PdfPCell(new Phrase("Printed Date & Time    :  " + today, redFont));
            hcell111.setBorder(Rectangle.NO_BORDER);
            hcell111.setPaddingRight(-70f);
            
            hcell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table3.addCell(hcell111);
            cell1.addElement(table21);
            cell1.addElement(table3);
            
            PdfPTable table111 = new PdfPTable(1);
            table111.setWidths(new float[] { 7});
            
            PdfPCell hcell12;
            hcell12 = new PdfPCell(new Phrase("\n UserName  :"+docName[0], headFont));
            hcell12.setBorder(Rectangle.NO_BORDER);
            hcell12.setHorizontalAlignment(Element.ALIGN_LEFT);
            hcell12.setPaddingLeft(-70f);
            table111.addCell(hcell12);
            cell1.addElement(table111);
            
            PdfPTable table1 = new PdfPTable(14);
            table1.setWidths(new float[] { 4.3f, 6.4f, 4f, 6f, 4f, 2.3f, 3.3f, 3.4f, 3.3f, 3.6f, 3.4f, 3.6f,4.5f,3.1f });
            PdfPCell hcell;
            hcell = new PdfPCell(new Phrase("Umr No", redFont));
            hcell.setBorder(Rectangle.NO_BORDER);
            hcell.setBackgroundColor(BaseColor.GRAY);
            hcell.setHorizontalAlignment(Element.ALIGN_LEFT);
            table1.addCell(hcell);
            
            hcell = new PdfPCell(new Phrase("Patient Name", redFont));
            hcell.setBorder(Rectangle.NO_BORDER);
            hcell.setBackgroundColor(BaseColor.GRAY);
            hcell.setHorizontalAlignment(Element.ALIGN_LEFT);
            table1.addCell(hcell);
            
            hcell = new PdfPCell(new Phrase("Bill No", redFont));
            hcell.setBorder(Rectangle.NO_BORDER);
            hcell.setBackgroundColor(BaseColor.GRAY);
            hcell.setHorizontalAlignment(Element.ALIGN_LEFT);
            table1.addCell(hcell);
            
            hcell = new PdfPCell(new Phrase("Consultant", redFont));
            hcell.setBorder(Rectangle.NO_BORDER);
            hcell.setBackgroundColor(BaseColor.GRAY);
            hcell.setHorizontalAlignment(Element.ALIGN_LEFT);
            table1.addCell(hcell);
            
            hcell = new PdfPCell(new Phrase("G.Amt", redFont));
            hcell.setBorder(Rectangle.NO_BORDER);
            hcell.setBackgroundColor(BaseColor.GRAY);
            hcell.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell.setPaddingRight(10f);
            table1.addCell(hcell);
            
            hcell = new PdfPCell(new Phrase("Conc", redFont));
            hcell.setBorder(Rectangle.NO_BORDER);
            hcell.setBackgroundColor(BaseColor.GRAY);
            hcell.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell.setPaddingRight(10f);
            table1.addCell(hcell);
            
            hcell = new PdfPCell(new Phrase("Net.Amt", redFont));
            hcell.setBorder(Rectangle.NO_BORDER);
            hcell.setBackgroundColor(BaseColor.GRAY);
            hcell.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell.setPaddingRight(10f);
            table1.addCell(hcell);
            
            hcell = new PdfPCell(new Phrase("Adv.Amt", redFont));
            hcell.setBorder(Rectangle.NO_BORDER);
            hcell.setBackgroundColor(BaseColor.GRAY);
            hcell.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell.setPaddingRight(10f);
            table1.addCell(hcell);
            
            hcell = new PdfPCell(new Phrase("Rec.Amt", redFont));
            hcell.setBorder(Rectangle.NO_BORDER);
            hcell.setBackgroundColor(BaseColor.GRAY);
            hcell.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell.setPaddingRight(10f);
            table1.addCell(hcell);
            
            hcell = new PdfPCell(new Phrase("Cash Amt", redFont));
            hcell.setBorder(Rectangle.NO_BORDER);
            hcell.setBackgroundColor(BaseColor.GRAY);
            hcell.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell.setPaddingRight(10f);
            table1.addCell(hcell);
            
            hcell = new PdfPCell(new Phrase("Chq.Amt", redFont));
            hcell.setBorder(Rectangle.NO_BORDER);
            hcell.setBackgroundColor(BaseColor.GRAY);
            hcell.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell.setPaddingRight(10f);
            
            table1.addCell(hcell);
            
            hcell = new PdfPCell(new Phrase("Card Amt", redFont));
            hcell.setBorder(Rectangle.NO_BORDER);
            hcell.setBackgroundColor(BaseColor.GRAY);
            hcell.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell.setPaddingRight(10f);
            
            table1.addCell(hcell);
            
            hcell = new PdfPCell(new Phrase("Cash+Card Amt", redFont));
            hcell.setBorder(Rectangle.NO_BORDER);
            hcell.setBackgroundColor(BaseColor.GRAY);
            hcell.setHorizontalAlignment(Element.ALIGN_CENTER);
            hcell.setPaddingRight(10f);
            
            table1.addCell(hcell);
            
            hcell = new PdfPCell(new Phrase("Due.Amt", redFont)); 
            hcell.setBorder(Rectangle.NO_BORDER);
            hcell.setBackgroundColor(BaseColor.GRAY);
            hcell.setHorizontalAlignment(Element.ALIGN_RIGHT);
           // hcell.setPaddingRight(10f);
            
            table1.addCell(hcell);
            
            table1.setWidthPercentage(100f);
            cell1.addElement(table1);
            
//-------------------- OSP BILLS ----------------------------------------            
            
            PdfPTable table11 = new PdfPTable(14);
            table11.setWidths(new float[] {  4.3f, 6.4f, 4f, 6f, 4f, 2.3f, 3.3f, 3.4f, 3.3f, 3.6f, 3.4f, 3.6f,4.5f,3.1f });
            table11.setSpacingBefore(10);
            table11.setWidthPercentage(100f);
            PdfPCell hcell01;
    
            hcell01 = new PdfPCell(new Phrase("OSP BILLS", headFont));
            hcell01.setBorder(Rectangle.NO_BORDER);
            hcell01.setHorizontalAlignment(Element.ALIGN_LEFT);
            table11.addCell(hcell01);
            
            hcell01 = new PdfPCell(new Phrase("", headFont));
            hcell01.setBorder(Rectangle.NO_BORDER);
            hcell01.setHorizontalAlignment(Element.ALIGN_LEFT);
            table11.addCell(hcell01);
            
            hcell01 = new PdfPCell(new Phrase("", headFont));
            hcell01.setBorder(Rectangle.NO_BORDER);
            hcell01.setHorizontalAlignment(Element.ALIGN_LEFT);
            table11.addCell(hcell01);
            
            hcell01 = new PdfPCell(new Phrase("", headFont));
            hcell01.setBorder(Rectangle.NO_BORDER);
            hcell01.setHorizontalAlignment(Element.ALIGN_LEFT);
            table11.addCell(hcell01);
            
            hcell01 = new PdfPCell(new Phrase("", headFont));
            hcell01.setBorder(Rectangle.NO_BORDER);
            hcell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table11.addCell(hcell01);
            
            hcell01 = new PdfPCell(new Phrase("", headFont));
            hcell01.setBorder(Rectangle.NO_BORDER);
            hcell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table11.addCell(hcell01);
            
            hcell01 = new PdfPCell(new Phrase("", headFont));
            hcell01.setBorder(Rectangle.NO_BORDER);
            hcell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table11.addCell(hcell01);
            
            hcell01 = new PdfPCell(new Phrase("", headFont));
            hcell01.setBorder(Rectangle.NO_BORDER);
            hcell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table11.addCell(hcell01);
            
            hcell01 = new PdfPCell(new Phrase("", headFont));
            hcell01.setBorder(Rectangle.NO_BORDER);
            hcell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table11.addCell(hcell01);
            
            hcell01 = new PdfPCell(new Phrase("", headFont));
            hcell01.setBorder(Rectangle.NO_BORDER);
            hcell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table11.addCell(hcell01);
            
            hcell01 = new PdfPCell(new Phrase("", headFont));
            hcell01.setBorder(Rectangle.NO_BORDER);
            hcell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table11.addCell(hcell01);
            
            hcell01 = new PdfPCell(new Phrase("", headFont));
            hcell01.setBorder(Rectangle.NO_BORDER);
            hcell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table11.addCell(hcell01);
            
            hcell01 = new PdfPCell(new Phrase("", headFont));
            hcell01.setBorder(Rectangle.NO_BORDER);
            hcell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table11.addCell(hcell01);
            
            hcell01 = new PdfPCell(new Phrase("", headFont));
            hcell01.setBorder(Rectangle.NO_BORDER);
            hcell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table11.addCell(hcell01);
            
            float otherFee = 0;
            float cashAmt1 = 0;
            float chqAmt1 = 0;
            float cardAmt1 = 0;
            float opAdvAmt=0;
            float totalFeeAmt1 = 0;
            float totalCashAmt1 = 0;
            float totalCardAmt1 = 0;
            float totalChqAmt1 = 0;
            float totalDueAmt1 = 0;
            float dueAmt1=0;
            float recpAmt1=0;
            float totalRecAmt1=0;
            float totalOpAdvAmt=0;
           
	            float cashPlusCardAmt=0;
	            float totalcashPlusCardAmt=0;
	            
            String typeOfCharge=null;
            String patientType=null;
            String pId = null;
            String lServiceId=null;
            String cServiceId=null;
            String serviceType=null;
           // String billNum=null;
            
            
          
            if(!patientRegistration.isEmpty())
            {
            for(PatientRegistration pReg : patientRegistration)
            {
                patientType=pReg.getpType();
                pId = pReg.getRegId();
                //Set<PatientPayment> patientPayments = pReg.getPatientPayment();
                
                 
                Set<PatientPayment> patientPayments = paymentRepository.findByPatientRegistration(pReg);
               
                List<ChargeBill> charge=chargeBillRepository.findByPatRegId(pReg);
                
                for(ChargeBill pp : charge)
                {
                
                	
                	if(pp.getAmount()!=0)
                	{
               
                    if(patientType.equalsIgnoreCase("OUTPATIENT"))
                    {
                    	if(pp.getServiceId()!=null)
                    	{
                       
                            if(pp.getPaymentType().equalsIgnoreCase("CASH"))
                            {
                                
                                otherFee=pp.getNetAmount();
                                cashAmt1=pp.getNetAmount();
                                chqAmt1=0;
                                cardAmt1=0;
                                cashPlusCardAmt=0;
                                totalFeeAmt1+=otherFee;
                                totalCashAmt1+=cashAmt1;
                                recpAmt1=pp.getNetAmount();
                                dueAmt1 = recpAmt1-cashAmt1;
                                totalDueAmt1+=dueAmt1;
                                totalRecAmt1+=recpAmt1;
                            }
                            else if(pp.getPaymentType().equalsIgnoreCase("CHQ")||pp.getPaymentType().equalsIgnoreCase("CHEQUE"))
                            {
                                otherFee=pp.getNetAmount();
                                chqAmt1=pp.getNetAmount();
                                cashAmt1=0;
                                cardAmt1=0;
                                cashPlusCardAmt=0;
                                totalFeeAmt1+=otherFee;
                                totalChqAmt1+=chqAmt1;
                                recpAmt1=pp.getNetAmount();
                                dueAmt1 = recpAmt1-chqAmt1;
                                totalDueAmt1+=dueAmt1;
                                totalRecAmt1+=recpAmt1;
                            }
                            else if(pp.getPaymentType().equalsIgnoreCase("DEBIT CARD") || pp.getPaymentType().equalsIgnoreCase("CREDIT CARD") || pp.getPaymentType().equalsIgnoreCase("CARD"))
                            {
                                otherFee=pp.getNetAmount();
                                cardAmt1=pp.getNetAmount();
                                cashAmt1=0;
                                chqAmt1=0;
                                cashPlusCardAmt=0;
                                totalFeeAmt1+=otherFee;
                                totalCardAmt1+=cardAmt1;
                                recpAmt1=pp.getNetAmount();
                                dueAmt1 = recpAmt1-cardAmt1;
                                totalDueAmt1+=dueAmt1;
                                totalRecAmt1+=recpAmt1;
                            
                            }else if(pp.getPaymentType().equalsIgnoreCase("ADVANCE"))
                            {
                                
                                
                            	otherFee=pp.getNetAmount();
                            	cashAmt1=0;
                                cardAmt1=0;
                                chqAmt1=0;
                                opAdvAmt=otherFee;
                                totalFeeAmt1+=opAdvAmt;
                                recpAmt1=0;
                                dueAmt1 = 0;
                                cashPlusCardAmt=0;
                                totalOpAdvAmt+=opAdvAmt;
                                totalCardAmt1+=0;
                                totalDueAmt1+=dueAmt1;
                                totalRecAmt1+=recpAmt1;
                                
                            }
                            else if(pp.getPaymentType().equalsIgnoreCase("DUE"))
                            {
                                
                                
                            	otherFee=0;
                            	cashAmt1=0;
                                cardAmt1=0;
                                chqAmt1=0;
                                opAdvAmt=0;
                                totalFeeAmt1+=otherFee;
                                recpAmt1=0;
                                cashPlusCardAmt=0;
                                dueAmt1 =pp.getNetAmount();
                                totalOpAdvAmt+=opAdvAmt;
                                totalCardAmt1+=0;
                                totalDueAmt1+=dueAmt1;
                                totalRecAmt1+=recpAmt1;
                                
                            }
                            else if(pp.getPaymentType().equalsIgnoreCase("CASH+CARD"))
                            {
                                
                                
                            	otherFee=pp.getNetAmount();
                            	cashAmt1=0;
                                cardAmt1=0;
                                chqAmt1=0;
                                opAdvAmt=0;
                                totalFeeAmt1+=otherFee;
                                recpAmt1=otherFee;
                                dueAmt1 =0;
                                cashPlusCardAmt=pp.getNetAmount();
                                totalOpAdvAmt+=opAdvAmt;
                                totalcashPlusCardAmt+=cashPlusCardAmt;
                                totalCardAmt1+=0;
                                totalDueAmt1+=dueAmt1;
                                totalRecAmt1+=recpAmt1;
                                
                            }
                        
                    	
                
                    PdfPCell cell111;
    
                    cell111 = new PdfPCell(new Phrase(pReg.getPatientDetails().getUmr(), redFont));
                    cell111.setBorder(Rectangle.NO_BORDER);
                    cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                    table11.addCell(cell111);
    
                    if(pReg.getPatientDetails().getMiddleName()!=null)
                    {
                   
	                    cell111 = new PdfPCell(new Phrase(pReg.getPatientDetails().getFirstName()+" "+pReg.getPatientDetails().getMiddleName()+" "+pReg.getPatientDetails().getLastName(), redFont));
	                    cell111.setBorder(Rectangle.NO_BORDER);
	                    cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
	                    table11.addCell(cell111);
                    }
                    else
                    {
                    	cell111 = new PdfPCell(new Phrase(pReg.getPatientDetails().getFirstName()+" "+pReg.getPatientDetails().getLastName(), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                        table11.addCell(cell111);
                    }
    
                    cell111 = new PdfPCell(new Phrase(pReg.getRegId(), redFont));
                    cell111.setBorder(Rectangle.NO_BORDER);
                    cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                    table11.addCell(cell111);
    
                    cell111 = new PdfPCell(new Phrase(pReg.getPatientDetails().getConsultant(), redFont));
                    cell111.setBorder(Rectangle.NO_BORDER);
                    cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                    table11.addCell(cell111);
    
                    cell111 = new PdfPCell(new Phrase(String.valueOf(otherFee), redFont));
                    cell111.setBorder(Rectangle.NO_BORDER);
                    cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                    cell111.setPaddingRight(10f);
                    table11.addCell(cell111);
                
                    cell111 = new PdfPCell(new Phrase("0", redFont));
                    cell111.setBorder(Rectangle.NO_BORDER);
                    cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                    cell111.setPaddingRight(10f);
                    table11.addCell(cell111);
    
                    cell111 = new PdfPCell(new Phrase(String.valueOf(otherFee), redFont));
                    cell111.setBorder(Rectangle.NO_BORDER);
                    cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                    cell111.setPaddingRight(10f);
                    table11.addCell(cell111);
                
                    cell111 = new PdfPCell(new Phrase(String.valueOf(opAdvAmt), redFont));
                    cell111.setBorder(Rectangle.NO_BORDER);
                    cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                    cell111.setPaddingRight(10f);
                    table11.addCell(cell111);
    
                    cell111 = new PdfPCell(new Phrase(String.valueOf(recpAmt1), redFont));
                    cell111.setBorder(Rectangle.NO_BORDER);
                    cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                    cell111.setPaddingRight(10f);
                    table11.addCell(cell111);
                
                    cell111 = new PdfPCell(new Phrase(String.valueOf(cashAmt1), redFont));
                    cell111.setBorder(Rectangle.NO_BORDER);
                    cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                    cell111.setPaddingRight(10f);
                    table11.addCell(cell111);
    
                    cell111 = new PdfPCell(new Phrase(String.valueOf(chqAmt1), redFont));
                    cell111.setBorder(Rectangle.NO_BORDER);
                    cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                    cell111.setPaddingRight(10f);
                    table11.addCell(cell111);
                
                    cell111 = new PdfPCell(new Phrase(String.valueOf(cardAmt1), redFont));
                    cell111.setBorder(Rectangle.NO_BORDER);
                    cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                    cell111.setPaddingRight(10f);
                    table11.addCell(cell111);
                    
                    cell111 = new PdfPCell(new Phrase(String.valueOf(cashPlusCardAmt), redFont));
                    cell111.setBorder(Rectangle.NO_BORDER);
                    cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                    cell111.setPaddingRight(10f);
                    table11.addCell(cell111);
    
                    cell111 = new PdfPCell(new Phrase(String.valueOf(dueAmt1), redFont));
                    cell111.setBorder(Rectangle.NO_BORDER);
                    cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                  //  cell111.setPaddingRight(10f);
                    table11.addCell(cell111);
                    }
                    
                    }   
                }
                	
                                       
                } 
                
            }
            
            }else
            {
            	 PdfPCell cell111;
            	    
                 cell111 = new PdfPCell(new Phrase("", redFont));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                 table11.addCell(cell111);
 
                
                 
                 	cell111 = new PdfPCell(new Phrase("", redFont));
                     cell111.setBorder(Rectangle.NO_BORDER);
                     cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                     table11.addCell(cell111);
                 
 
                 cell111 = new PdfPCell(new Phrase("", redFont));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                 table11.addCell(cell111);
 
                 cell111 = new PdfPCell(new Phrase("", redFont));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                 table11.addCell(cell111);
 
                 cell111 = new PdfPCell(new Phrase("0", redFont));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 cell111.setPaddingRight(10f);
                 table11.addCell(cell111);
             
                 cell111 = new PdfPCell(new Phrase("0", redFont));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 cell111.setPaddingRight(10f);
                 table11.addCell(cell111);
 
                 cell111 = new PdfPCell(new Phrase("0", redFont));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 cell111.setPaddingRight(10f);
                 table11.addCell(cell111);
             
                 cell111 = new PdfPCell(new Phrase("0", redFont));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 cell111.setPaddingRight(10f);
                 table11.addCell(cell111);
 
                 cell111 = new PdfPCell(new Phrase("0", redFont));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 cell111.setPaddingRight(10f);
                 table11.addCell(cell111);
             
                 cell111 = new PdfPCell(new Phrase("0", redFont));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 cell111.setPaddingRight(10f);
                 table11.addCell(cell111);
 
                 cell111 = new PdfPCell(new Phrase("0", redFont));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 cell111.setPaddingRight(10f);
                 table11.addCell(cell111);
             
                 cell111 = new PdfPCell(new Phrase("0", redFont));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 cell111.setPaddingRight(10f);
                 table11.addCell(cell111);
                 
                 
                 cell111 = new PdfPCell(new Phrase("0", redFont));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 cell111.setPaddingRight(10f);
                 table11.addCell(cell111);
 
                 cell111 = new PdfPCell(new Phrase("0", redFont));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 //cell111.setPaddingRight(10f);
                 table11.addCell(cell111);
            }
        
        
            
            cell1.addElement(table11);
            
            PdfPTable table611 = new PdfPTable(14);
            table611.setWidths(new float[] {4.3f, 6.4f, 4f, 6f, 4f, 2.3f, 3.3f, 3.4f, 3.3f, 3.6f, 3.4f, 3.6f,4.5f,3.1f});
            table611.setSpacingBefore(10);
            table611.setWidthPercentage(100f);
            
            PdfPCell cell1111;
            cell1111 = new PdfPCell(new Phrase("", redFont));
            cell1111.setBorder(Rectangle.NO_BORDER);
            cell1111.setHorizontalAlignment(Element.ALIGN_LEFT);
            table611.addCell(cell1111);
            
            cell1111 = new PdfPCell(new Phrase("", redFont));
            cell1111.setBorder(Rectangle.NO_BORDER);
            cell1111.setHorizontalAlignment(Element.ALIGN_LEFT);
            table611.addCell(cell1111);
            
            cell1111 = new PdfPCell(new Phrase("", redFont));
            cell1111.setBorder(Rectangle.NO_BORDER);
            cell1111.setHorizontalAlignment(Element.ALIGN_LEFT);
            table611.addCell(cell1111);
            
            cell1111 = new PdfPCell(new Phrase("", redFont));
            cell1111.setBorder(Rectangle.NO_BORDER);
            cell1111.setHorizontalAlignment(Element.ALIGN_LEFT);
            table611.addCell(cell1111);
            
            cell1111 = new PdfPCell(new Phrase(String.valueOf(totalFeeAmt1), redFont));
            cell1111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell1111.setPaddingTop(5f);
            cell1111.setPaddingBottom(5f);
            cell1111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell1111.setPaddingRight(10f);
            table611.addCell(cell1111);
        
            cell1111 = new PdfPCell(new Phrase("0", redFont));
            cell1111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell1111.setPaddingTop(5f);
            cell1111.setPaddingBottom(5f);
            cell1111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell1111.setPaddingRight(10f);
            table611.addCell(cell1111);
            
            cell1111 = new PdfPCell(new Phrase(String.valueOf(totalFeeAmt1), redFont));
            cell1111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell1111.setPaddingTop(5f);
            cell1111.setPaddingBottom(5f);
            cell1111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell1111.setPaddingRight(10f);
            table611.addCell(cell1111);
        
            cell1111 = new PdfPCell(new Phrase(String.valueOf(totalOpAdvAmt), redFont));
            cell1111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell1111.setPaddingTop(5f);
            cell1111.setPaddingBottom(5f);
            cell1111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell1111.setPaddingRight(10f);
            table611.addCell(cell1111);
            
            cell1111 = new PdfPCell(new Phrase(String.valueOf(totalRecAmt1), redFont));
            cell1111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell1111.setPaddingTop(5f);
            cell1111.setPaddingBottom(5f);
            cell1111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell1111.setPaddingRight(10f);
            table611.addCell(cell1111);
        
            cell1111 = new PdfPCell(new Phrase(String.valueOf(totalCashAmt1), redFont));
            cell1111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell1111.setPaddingTop(5f);
            cell1111.setPaddingBottom(5f);
            cell1111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell1111.setPaddingRight(10f);
            table611.addCell(cell1111);
            
            cell1111 = new PdfPCell(new Phrase(String.valueOf(totalChqAmt1), redFont));
            cell1111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell1111.setPaddingTop(5f);
            cell1111.setPaddingBottom(5f);
            cell1111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell1111.setPaddingRight(10f);
            table611.addCell(cell1111);
        
            cell1111 = new PdfPCell(new Phrase(String.valueOf(totalCardAmt1), redFont));
            cell1111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell1111.setPaddingTop(5f);
            cell1111.setPaddingBottom(5f);
            cell1111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell1111.setPaddingRight(10f);
            table611.addCell(cell1111);
            
            cell1111 = new PdfPCell(new Phrase(String.valueOf(totalcashPlusCardAmt), redFont));
            cell1111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell1111.setPaddingTop(5f);
            cell1111.setPaddingBottom(5f);
            cell1111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell1111.setPaddingRight(10f);
            table611.addCell(cell1111);
            
            cell1111 = new PdfPCell(new Phrase(String.valueOf(totalDueAmt1), redFont));
            cell1111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell1111.setPaddingTop(5f);
            cell1111.setPaddingBottom(5f);
            cell1111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell1111.setPaddingRight(10f);
            table611.addCell(cell1111);
            cell1.addElement(table611);
//-------------------------------------------- CONSULTATIONS ----------------------------------------------------------
            PdfPTable table08 = new PdfPTable(1);
            table08.setWidths(new float[] {6});
            table08.setSpacingBefore(10);
            table08.setWidthPercentage(100f);
            
            PdfPCell hcell0;
            hcell0 = new PdfPCell(new Phrase("CONSULTATIONS",headFont));
            hcell0.setBorder(Rectangle.NO_BORDER);
            hcell0.setHorizontalAlignment(Element.ALIGN_LEFT);
            hcell0.setPaddingBottom(-10f);
            table08.addCell(hcell0);
            cell1.addElement(table08);
            
            PdfPTable table8 = new PdfPTable(14);
            table8.setWidths(new float[] {4.3f, 6.4f, 4f, 6f, 4f, 2.3f, 3.3f, 3.4f, 3.3f, 3.6f, 3.4f, 3.6f,4.5f,3.1f});
            table8.setSpacingBefore(10);
            table8.setWidthPercentage(100f);
            PdfPCell hcell03;
    
            hcell03 = new PdfPCell(new Phrase("", headFont));
            hcell03.setBorder(Rectangle.NO_BORDER);
            hcell03.setHorizontalAlignment(Element.ALIGN_LEFT);
            table8.addCell(hcell03);
            
            hcell03 = new PdfPCell(new Phrase("", headFont));
            hcell03.setBorder(Rectangle.NO_BORDER);
            hcell03.setHorizontalAlignment(Element.ALIGN_LEFT);
            table8.addCell(hcell03);
            
            hcell03 = new PdfPCell(new Phrase("", headFont));
            hcell03.setBorder(Rectangle.NO_BORDER);
            hcell03.setHorizontalAlignment(Element.ALIGN_LEFT);
            table8.addCell(hcell03);
            
            hcell03 = new PdfPCell(new Phrase("", headFont));
            hcell03.setBorder(Rectangle.NO_BORDER);
            hcell03.setHorizontalAlignment(Element.ALIGN_LEFT);
            table8.addCell(hcell03);
            
            hcell03 = new PdfPCell(new Phrase("", headFont));
            hcell03.setBorder(Rectangle.NO_BORDER);
            hcell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell03.setPaddingRight(10f);
            table8.addCell(hcell03);
            
            hcell03 = new PdfPCell(new Phrase("", headFont));
            hcell03.setBorder(Rectangle.NO_BORDER);
            hcell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell03.setPaddingRight(10f);
            table8.addCell(hcell03);
            
            hcell03 = new PdfPCell(new Phrase("", headFont));
            hcell03.setBorder(Rectangle.NO_BORDER);
            hcell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell03.setPaddingRight(10f);
            table8.addCell(hcell03);
            
            hcell03 = new PdfPCell(new Phrase("", headFont));
            hcell03.setBorder(Rectangle.NO_BORDER);
            hcell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell03.setPaddingRight(10f);
            table8.addCell(hcell03);
            
            hcell03 = new PdfPCell(new Phrase("", headFont));
            hcell03.setBorder(Rectangle.NO_BORDER);
            hcell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell03.setPaddingRight(10f);
            table8.addCell(hcell03);
            
            hcell03 = new PdfPCell(new Phrase("", headFont));
            hcell03.setBorder(Rectangle.NO_BORDER);
            hcell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell03.setPaddingRight(10f);
            table8.addCell(hcell03);
            
            hcell03 = new PdfPCell(new Phrase("", headFont));
            hcell03.setBorder(Rectangle.NO_BORDER);
            hcell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell03.setPaddingRight(10f);
            table8.addCell(hcell03);
            
            hcell03 = new PdfPCell(new Phrase("", headFont));
            hcell03.setBorder(Rectangle.NO_BORDER);
            hcell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell03.setPaddingRight(10f);
            table8.addCell(hcell03);
            
            hcell03 = new PdfPCell(new Phrase("", headFont));
            hcell03.setBorder(Rectangle.NO_BORDER);
            hcell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell03.setPaddingRight(10f);
            table8.addCell(hcell03);
            
            hcell03 = new PdfPCell(new Phrase("", headFont));
            hcell03.setBorder(Rectangle.NO_BORDER);
            hcell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
           // hcell03.setPaddingRight(10f);
            table8.addCell(hcell03);
            
            long fee = 0;
            long cashAmt = 0;
            long chqAmt = 0;
            long cardAmt = 0;
            long advAmt=0;
            float cashPlusCardDocAmt=0;
            float totalCashPlusCardDocAmt=0;
            float totalFeeAmt = 0;
            float totalCashAmt = 0;
            float totalCardAmt = 0;
            float totalChqAmt = 0;
            float totalDueAmt = 0;
            float totalAdvcAmt=0;
            long dueAmt=0;
            long recpAmt=0;
            float totalRecpAmt=0;
            
            if(!patientRegistration.isEmpty())
            {
            for(PatientRegistration pReg : patientRegistration)
            {
            	pId = pReg.getRegId();
                //Set<PatientPayment> patientPayments = pReg.getPatientPayment();
                Set<PatientPayment> patientPayments = paymentRepository.findByPatientRegistration(pReg);
                for(PatientPayment pp : patientPayments)
                {
                	if(pp.getAmount()!=0)
                	{
                    if(pp.getTypeOfCharge().equalsIgnoreCase("Doctor Fee"))
                    {
                        if(pp.getTypeOfCharge().equalsIgnoreCase("Doctor Fee")&&pp.getModeOfPaymant().equalsIgnoreCase("CASH"))
                        {
                            fee=pp.getAmount();
                            cashAmt=pp.getAmount();
                            chqAmt=0;
                            cardAmt=0;
                            totalFeeAmt+=fee;
                            advAmt=0;
                            totalCashAmt+=cashAmt;
                            recpAmt=pp.getAmount();
                            dueAmt = recpAmt-cashAmt;
                            totalDueAmt+=dueAmt;
                            totalRecpAmt+=recpAmt;
                        }
                        else if(pp.getTypeOfCharge().equalsIgnoreCase("Doctor Fee")&&(pp.getModeOfPaymant().equalsIgnoreCase("CHQ")||pp.getModeOfPaymant().equalsIgnoreCase("CHEQUE")))
                        {
                            fee=pp.getAmount();
                            chqAmt=pp.getAmount();
                            cashAmt=0;
                            cardAmt=0;
                            advAmt=0;
                            totalFeeAmt+=fee;
                            totalChqAmt+=chqAmt;
                            recpAmt=pp.getAmount();
                            dueAmt = recpAmt-chqAmt;
                            totalDueAmt+=dueAmt;
                            totalRecpAmt+=recpAmt;
                        }
                        else if(pp.getTypeOfCharge().equalsIgnoreCase("Doctor Fee")&&pp.getModeOfPaymant().equalsIgnoreCase("ADVANCE"))
                        {
                            fee=pp.getAmount();
                            chqAmt=0;
                            cashAmt=0;
                            cardAmt=0;
                            advAmt=pp.getAmount();
                            totalFeeAmt+=fee;
                            totalChqAmt+=0;
                            totalAdvcAmt+=advAmt;
                            recpAmt=0;
                            dueAmt = recpAmt-chqAmt;
                            totalDueAmt+=dueAmt;
                            totalRecpAmt+=recpAmt;
                        }
                        
                        else if(pp.getTypeOfCharge().equalsIgnoreCase("Doctor Fee")&&(pp.getModeOfPaymant().equalsIgnoreCase("DEBIT CARD") || pp.getModeOfPaymant().equalsIgnoreCase("CREDIT CARD") || pp.getModeOfPaymant().equalsIgnoreCase("CARD")))
                        {
                            fee=pp.getAmount();
                            cardAmt=pp.getAmount();
                            cashAmt=0;
                            chqAmt=0;
                            totalFeeAmt+=fee;
                            advAmt=0;
                            totalCardAmt+=cardAmt;
                            recpAmt=pp.getAmount();
                            dueAmt = recpAmt-cardAmt;
                            totalDueAmt+=dueAmt;
                            totalRecpAmt+=recpAmt;
                            
                        }
                        else if(pp.getTypeOfCharge().equalsIgnoreCase("Doctor Fee")&&pp.getModeOfPaymant().equalsIgnoreCase("DUE"))
                        {
                            fee=0;
                            chqAmt=0;
                            cashAmt=0;
                            cardAmt=0;
                            advAmt=0;
                            totalFeeAmt+=fee;
                            totalChqAmt+=0;
                            totalAdvcAmt+=advAmt;
                            recpAmt=0;
                            dueAmt =pp.getAmount();
                            totalDueAmt+=dueAmt;
                            totalRecpAmt+=recpAmt;
                        }
                        
                        else if(pp.getTypeOfCharge().equalsIgnoreCase("Doctor Fee")&&pp.getModeOfPaymant().equalsIgnoreCase("Cash+Card"))
                        {
                            fee=pp.getAmount();
                            chqAmt=0;
                            cashAmt=0;
                            cardAmt=0;
                            advAmt=0;
                            cashPlusCardDocAmt=pp.getAmount();
                            totalCashPlusCardDocAmt+=cashPlusCardDocAmt;
                            totalFeeAmt+=fee;
                            totalChqAmt+=0;
                            totalAdvcAmt+=advAmt;
                            recpAmt=fee;
                            dueAmt =0;
                            totalDueAmt+=dueAmt;
                            totalRecpAmt+=recpAmt;
                        }
                        
                        
                        PdfPCell cell111;
        
                        cell111 = new PdfPCell(new Phrase(pReg.getPatientDetails().getUmr(), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                        table8.addCell(cell111);
        
                        if(pReg.getPatientDetails().getMiddleName()!=null)
                        {
	                        cell111 = new PdfPCell(new Phrase(pReg.getPatientDetails().getFirstName()+" "+pReg.getPatientDetails().getMiddleName()+" "+pReg.getPatientDetails().getLastName(), redFont));
	                        cell111.setBorder(Rectangle.NO_BORDER);
	                        cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
	                        //cell111.setPaddingLeft(-30f);
	                        table8.addCell(cell111);
                        }
                        else
                        {
                        	cell111 = new PdfPCell(new Phrase(pReg.getPatientDetails().getFirstName()+" "+pReg.getPatientDetails().getLastName(), redFont));
	                        cell111.setBorder(Rectangle.NO_BORDER);
	                        cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
	                        //cell111.setPaddingLeft(-30f);
	                        table8.addCell(cell111);
                        }
        
                        cell111 = new PdfPCell(new Phrase(pReg.getRegId(), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                        //cell111.setPaddingLeft(-30f);
                        table8.addCell(cell111);
        
                        cell111 = new PdfPCell(new Phrase(pReg.getPatientDetails().getConsultant(), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                        //cell111.setPaddingLeft(-20f);
                        table8.addCell(cell111);
        
                        cell111 = new PdfPCell(new Phrase(String.valueOf(fee), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                        cell111.setPaddingRight(10f);
                        //cell111.setPaddingRight(35f);
                        table8.addCell(cell111);
                    
                        cell111 = new PdfPCell(new Phrase("0", redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                        cell111.setPaddingRight(10f);
                        //cell111.setPaddingRight(20f);
                        table8.addCell(cell111);
        
                        cell111 = new PdfPCell(new Phrase(String.valueOf(fee), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                        cell111.setPaddingRight(10f);
                        //cell111.setPaddingRight(15f);
                        table8.addCell(cell111);
                    
                        cell111 = new PdfPCell(new Phrase(String.valueOf(advAmt), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                        cell111.setPaddingRight(10f);
                        //cell111.setPaddingRight(12f);
                        table8.addCell(cell111);
        
                        cell111 = new PdfPCell(new Phrase(String.valueOf(recpAmt), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                        cell111.setPaddingRight(10f);
                        //cell111.setPaddingRight(10f);
                        table8.addCell(cell111);
                    
                        cell111 = new PdfPCell(new Phrase(String.valueOf(cashAmt), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                        cell111.setPaddingRight(10f);
                        //cell111.setPaddingRight(10f);
                        table8.addCell(cell111);
        
                        cell111 = new PdfPCell(new Phrase(String.valueOf(chqAmt), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                        cell111.setPaddingRight(10f);
                        table8.addCell(cell111);
                    
                        cell111 = new PdfPCell(new Phrase(String.valueOf(cardAmt), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                        cell111.setPaddingRight(10f);
                        table8.addCell(cell111);
                        
                        cell111 = new PdfPCell(new Phrase(String.valueOf(cashPlusCardDocAmt), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                        cell111.setPaddingRight(10f);
                        table8.addCell(cell111);
        
                        cell111 = new PdfPCell(new Phrase(String.valueOf(dueAmt), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                       // cell111.setPaddingRight(10f);
                        table8.addCell(cell111);
                    }
                }
            }
            }
            }else
            {
            	 
                PdfPCell cell111;

                cell111 = new PdfPCell(new Phrase("", redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                table8.addCell(cell111);

                
				cell111 = new PdfPCell(new Phrase("", redFont));
				cell111.setBorder(Rectangle.NO_BORDER);
				cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
				// cell111.setPaddingLeft(-30f);
				table8.addCell(cell111);

                cell111 = new PdfPCell(new Phrase("", redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                //cell111.setPaddingLeft(-30f);
                table8.addCell(cell111);

                cell111 = new PdfPCell(new Phrase("", redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                //cell111.setPaddingLeft(-20f);
                table8.addCell(cell111);

                cell111 = new PdfPCell(new Phrase("0", redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell111.setPaddingRight(10f);
                //cell111.setPaddingRight(35f);
                table8.addCell(cell111);
            
                cell111 = new PdfPCell(new Phrase("0", redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell111.setPaddingRight(10f);
                //cell111.setPaddingRight(20f);
                table8.addCell(cell111);

                cell111 = new PdfPCell(new Phrase("0", redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell111.setPaddingRight(10f);
                //cell111.setPaddingRight(15f);
                table8.addCell(cell111);
            
                cell111 = new PdfPCell(new Phrase("0", redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell111.setPaddingRight(10f);
                //cell111.setPaddingRight(12f);
                table8.addCell(cell111);

                cell111 = new PdfPCell(new Phrase("0", redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell111.setPaddingRight(10f);
                //cell111.setPaddingRight(10f);
                table8.addCell(cell111);
            
                cell111 = new PdfPCell(new Phrase("0", redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell111.setPaddingRight(10f);
                //cell111.setPaddingRight(10f);
                table8.addCell(cell111);

                cell111 = new PdfPCell(new Phrase("0", redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell111.setPaddingRight(10f);
                table8.addCell(cell111);
            
                cell111 = new PdfPCell(new Phrase("0", redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell111.setPaddingRight(10f);
                table8.addCell(cell111);
                
                cell111 = new PdfPCell(new Phrase("0", redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell111.setPaddingRight(10f);
                table8.addCell(cell111);

                cell111 = new PdfPCell(new Phrase("0", redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell111.setPaddingRight(10f);
                table8.addCell(cell111);

            }
            cell1.addElement(table8);
            
            PdfPTable table60 = new PdfPTable(14);
            table60.setWidths(new float[] {4.3f, 6.4f, 4f, 6f, 4f, 2.3f, 3.3f, 3.4f, 3.3f, 3.6f, 3.4f, 3.6f,4.5f,3.1f});
            table60.setSpacingBefore(10);
            table60.setWidthPercentage(100f);
            
            PdfPCell cell05;
            cell05 = new PdfPCell(new Phrase("", redFont));
            cell05.setBorder(Rectangle.NO_BORDER);
            cell05.setHorizontalAlignment(Element.ALIGN_LEFT);
            table60.addCell(cell05);
            
            cell05 = new PdfPCell(new Phrase("", redFont));
            cell05.setBorder(Rectangle.NO_BORDER);
            cell05.setHorizontalAlignment(Element.ALIGN_LEFT);
            //cell05.setPaddingLeft(-30f);
            table60.addCell(cell05);
            
            cell05 = new PdfPCell(new Phrase("", redFont));
            cell05.setBorder(Rectangle.NO_BORDER);
            cell05.setHorizontalAlignment(Element.ALIGN_LEFT);
            //cell05.setPaddingLeft(-30f);
            table60.addCell(cell05);
            
            cell05 = new PdfPCell(new Phrase("", redFont));
            cell05.setBorder(Rectangle.NO_BORDER);
            cell05.setHorizontalAlignment(Element.ALIGN_LEFT);
            //cell05.setPaddingLeft(-30f);
            table60.addCell(cell05);
            
            cell05 = new PdfPCell(new Phrase(String.valueOf(totalFeeAmt), redFont));
            //cell1111.setBorder(Rectangle.NO_BORDER);
            cell05.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell05.setPaddingTop(5f);
            cell05.setPaddingBottom(5f);
            cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell05.setPaddingRight(10f);
            //cell05.setPaddingRight(10f);
            table60.addCell(cell05);
        
            cell05 = new PdfPCell(new Phrase("0", redFont));
            //cell1111.setBorder(Rectangle.NO_BORDER);
            cell05.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell05.setPaddingTop(5f);
            cell05.setPaddingBottom(5f);
            cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell05.setPaddingRight(10f);
           // cell05.setPaddingRight(-15f);
            table60.addCell(cell05);
            
            cell05 = new PdfPCell(new Phrase(String.valueOf(totalFeeAmt), redFont));
            //cell1111.setBorder(Rectangle.NO_BORDER);
            cell05.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell05.setPaddingTop(5f);
            cell05.setPaddingBottom(5f);
            cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell05.setPaddingRight(10f);
            //cell05.setPaddingRight(-20f);
            table60.addCell(cell05);
        
            cell05 = new PdfPCell(new Phrase(String.valueOf(totalAdvcAmt), redFont));
            //cell1111.setBorder(Rectangle.NO_BORDER);
            cell05.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell05.setPaddingTop(5f);
            cell05.setPaddingBottom(5f);
            cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell05.setPaddingRight(10f);
            //cell05.setPaddingRight(-10f);
            table60.addCell(cell05);
            
            cell05 = new PdfPCell(new Phrase(String.valueOf(totalRecpAmt), redFont));
            //cell1111.setBorder(Rectangle.NO_BORDER);
            cell05.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell05.setPaddingTop(5f);
            cell05.setPaddingBottom(5f);
            cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell05.setPaddingRight(10f);
            //cell05.setPaddingRight(-17f);
            table60.addCell(cell05);
        
            cell05 = new PdfPCell(new Phrase(String.valueOf(totalCashAmt), redFont));
            //cell1111.setBorder(Rectangle.NO_BORDER);
            cell05.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell05.setPaddingTop(5f);
            cell05.setPaddingBottom(5f);
            cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell05.setPaddingRight(10f);
           // cell05.setPaddingRight(-13f);
            table60.addCell(cell05);
            
            cell05 = new PdfPCell(new Phrase(String.valueOf(totalChqAmt), redFont));
            //cell1111.setBorder(Rectangle.NO_BORDER);
            cell05.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell05.setPaddingTop(5f);
            cell05.setPaddingBottom(5f);
            cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell05.setPaddingRight(10f);
           // cell05.setPaddingRight(-7f);
            table60.addCell(cell05);
        
            cell05 = new PdfPCell(new Phrase(String.valueOf(totalCardAmt), redFont));
            //cell1111.setBorder(Rectangle.NO_BORDER);
            cell05.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell05.setPaddingTop(5f);
            cell05.setPaddingBottom(5f);
            cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell05.setPaddingRight(10f);
            //cell05.setPaddingRight(-3f);
            table60.addCell(cell05);
            
            cell05 = new PdfPCell(new Phrase(String.valueOf(totalCashPlusCardDocAmt), redFont));
            //cell1111.setBorder(Rectangle.NO_BORDER);
            cell05.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell05.setPaddingTop(5f);
            cell05.setPaddingBottom(5f);
            cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell05.setPaddingRight(10f);
            //cell05.setPaddingRight(-3f);
            table60.addCell(cell05);
            
            
            cell05 = new PdfPCell(new Phrase(String.valueOf(totalDueAmt), redFont));
            //cell1111.setBorder(Rectangle.NO_BORDER);
            cell05.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell05.setPaddingTop(5f);
            cell05.setPaddingBottom(5f);
            cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table60.addCell(cell05);
            cell1.addElement(table60);
            
//----------------------------------- REGISTRATIONS ----------------------------------------            
            PdfPTable table02 = new PdfPTable(1);
            table02.setWidths(new float[] {6f});
            table02.setSpacingBefore(10);
            table02.setWidthPercentage(100f);
            
            PdfPCell hcell7;
            
            hcell7 = new PdfPCell(new Phrase("REGISTRATIONS", headFont));
            hcell7.setBorder(Rectangle.NO_BORDER);
            hcell7.setHorizontalAlignment(Element.ALIGN_LEFT);
            hcell7.setPaddingBottom(-10f);
            table02.addCell(hcell7);
            cell1.addElement(table02);
            
            PdfPTable table13 = new PdfPTable(14);
            table13.setWidths(new float[] { 4.3f, 6.4f, 4f, 6f, 4f, 2.3f, 3.3f, 3.4f, 3.3f, 3.6f, 3.4f, 3.6f,4.5f,3.1f});
            table13.setSpacingBefore(10);
            table13.setWidthPercentage(100f);
            PdfPCell hcell0111;
            
            hcell0111 = new PdfPCell(new Phrase("", headFont));
            hcell0111.setBorder(Rectangle.NO_BORDER);
            hcell0111.setHorizontalAlignment(Element.ALIGN_LEFT);
            table13.addCell(hcell0111);
            
            hcell0111 = new PdfPCell(new Phrase("", headFont));
            hcell0111.setBorder(Rectangle.NO_BORDER);
            hcell0111.setHorizontalAlignment(Element.ALIGN_LEFT);
            table13.addCell(hcell0111);
            
            hcell0111 = new PdfPCell(new Phrase("", headFont));
            hcell0111.setBorder(Rectangle.NO_BORDER);
            hcell0111.setHorizontalAlignment(Element.ALIGN_LEFT);
            table13.addCell(hcell0111);
            
            hcell0111 = new PdfPCell(new Phrase("", headFont));
            hcell0111.setBorder(Rectangle.NO_BORDER);
            hcell0111.setHorizontalAlignment(Element.ALIGN_LEFT);
            table13.addCell(hcell0111);
            
            hcell0111 = new PdfPCell(new Phrase("", headFont));
            hcell0111.setBorder(Rectangle.NO_BORDER);
            hcell0111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell0111.setPaddingRight(10f);
            table13.addCell(hcell0111);
            
            hcell0111 = new PdfPCell(new Phrase("", headFont));
            hcell0111.setBorder(Rectangle.NO_BORDER);
            hcell0111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell0111.setPaddingRight(10f);
            table13.addCell(hcell0111);
            
            hcell0111 = new PdfPCell(new Phrase("", headFont));
            hcell0111.setBorder(Rectangle.NO_BORDER);
            hcell0111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell0111.setPaddingRight(10f);
            table13.addCell(hcell0111);
            
            hcell0111 = new PdfPCell(new Phrase("", headFont));
            hcell0111.setBorder(Rectangle.NO_BORDER);
            hcell0111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell0111.setPaddingRight(10f);
            table13.addCell(hcell0111);
            
            hcell0111 = new PdfPCell(new Phrase("", headFont));
            hcell0111.setBorder(Rectangle.NO_BORDER);
            hcell0111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell0111.setPaddingRight(10f);
            table13.addCell(hcell0111);
        
            hcell0111 = new PdfPCell(new Phrase("", headFont));
            hcell0111.setBorder(Rectangle.NO_BORDER);
            hcell0111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell0111.setPaddingRight(10f);
            table13.addCell(hcell0111);
            
            hcell0111 = new PdfPCell(new Phrase("", headFont));
            hcell0111.setBorder(Rectangle.NO_BORDER);
            hcell0111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell0111.setPaddingRight(10f);
            table13.addCell(hcell0111);
            
            hcell0111 = new PdfPCell(new Phrase("", headFont));
            hcell0111.setBorder(Rectangle.NO_BORDER);
            hcell0111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell0111.setPaddingRight(10f);
            table13.addCell(hcell0111);
            
            hcell0111 = new PdfPCell(new Phrase("", headFont));
            hcell0111.setBorder(Rectangle.NO_BORDER);
            hcell0111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell0111.setPaddingRight(10f);
            table13.addCell(hcell0111);
            
            
            hcell0111 = new PdfPCell(new Phrase("", headFont));
            hcell0111.setBorder(Rectangle.NO_BORDER);
            hcell0111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table13.addCell(hcell0111);
        
            long feeReg = 0;
            long cashAmtReg = 0;
            long chqAmtReg = 0;
            long cardAmtReg = 0;
            long recpAmtReg = 0;
            long dueAmtReg = 0;
            long advAmtReg = 0;
            float cashPlusCardRegAmt=0;
            float totalCashPlusCardRegAmt=0;
            float totalDueAmtReg = 0;
            float totalFeeAmtReg = 0;
            float totalCashAmtReg = 0;
            float totalCardAmtReg = 0;
            float totalChqAmtReg = 0;
            float totalRecpAmtReg=0;
            float totalAdvcAmtReg=0;
            
            if(!patientRegistration.isEmpty()) {
            for (PatientRegistration pReg : patientRegistration) 
            {
            	pId = pReg.getRegId();
            	Set<PatientPayment> patientPayments = paymentRepository.findByPatientRegistration(pReg);
                //Set<PatientPayment> patientPayments = pReg.getPatientPayment();
                for(PatientPayment pp : patientPayments)
                {
                	if(pp.getAmount()!=0)
                	{
                    if(pp.getTypeOfCharge().equalsIgnoreCase("Reg Fees"))
                    {
                        if(pp.getTypeOfCharge().equalsIgnoreCase("Reg Fees")&&pp.getModeOfPaymant().equalsIgnoreCase("CASH"))
                        {
                            feeReg=pp.getAmount();
                            cashAmtReg=pp.getAmount();
                            chqAmtReg=0;
                            cardAmtReg=0;
                            advAmtReg = 0;
                            recpAmtReg=pp.getAmount();
                            dueAmtReg=recpAmtReg-cashAmtReg;
                            totalFeeAmtReg+=feeReg;
                            totalCashAmtReg+=cashAmtReg;
                            totalDueAmtReg+=dueAmtReg;
                            totalRecpAmtReg+=recpAmtReg;
                        }
                        else if(pp.getTypeOfCharge().equalsIgnoreCase("Reg Fees")&&(pp.getModeOfPaymant().equalsIgnoreCase("CHQ")||pp.getModeOfPaymant().equalsIgnoreCase("CHEQUE")))
                        {
                            feeReg=pp.getAmount();
                            chqAmtReg=pp.getAmount();
                            cashAmtReg=0;
                            cardAmtReg=0;
                            advAmtReg = 0;
                            recpAmtReg=pp.getAmount();
                            dueAmtReg=recpAmtReg-chqAmtReg;
                            totalFeeAmtReg+=feeReg;
                            totalChqAmtReg+=chqAmtReg;
                            totalDueAmtReg+=dueAmtReg;
                            totalRecpAmtReg+=recpAmtReg;
                        }
                        
                        else if(pp.getTypeOfCharge().equalsIgnoreCase("Reg Fees")&&(pp.getModeOfPaymant().equalsIgnoreCase("DEBIT CARD") || pp.getModeOfPaymant().equalsIgnoreCase("CREDIT CARD") || pp.getModeOfPaymant().equalsIgnoreCase("CARD")))
                        {
                            feeReg=pp.getAmount();
                            cardAmtReg=pp.getAmount();
                            cashAmtReg=0;
                            chqAmtReg=0;
                            advAmtReg = 0;
                            recpAmtReg=pp.getAmount();
                            dueAmtReg=0;
                            totalFeeAmtReg+=feeReg;
                            totalCardAmtReg+=cardAmtReg;
                            totalDueAmtReg+=dueAmtReg;
                            totalRecpAmtReg+=recpAmtReg;
                        }
                        else if(pp.getTypeOfCharge().equalsIgnoreCase("Reg Fees")&&pp.getModeOfPaymant().equalsIgnoreCase("ADVANCE"))
                        {
                        	feeReg=pp.getAmount();
                        	chqAmtReg=0;
                            cashAmtReg=0;
                            cardAmtReg=0;
                            advAmtReg=pp.getAmount();
                            totalFeeAmtReg+=feeReg;
                            totalChqAmtReg+=0;
                            totalCardAmtReg=0;
                            totalAdvcAmtReg+=advAmtReg;
                            recpAmtReg=0;
                            dueAmtReg =0;
                            totalDueAmtReg+=dueAmtReg;
                            totalRecpAmtReg+=recpAmtReg;
                        }
                
                        else if(pp.getTypeOfCharge().equalsIgnoreCase("Reg Fees")&&pp.getModeOfPaymant().equalsIgnoreCase("DUE"))
                        {
                        	feeReg=0;
                        	chqAmtReg=0;
                            cashAmtReg=0;
                            cardAmtReg=0;
                            advAmtReg=0;
                            totalFeeAmtReg+=feeReg;
                            totalChqAmtReg+=0;
                            totalCardAmtReg=0;
                            totalAdvcAmtReg+=advAmtReg;
                            recpAmtReg=0;
                            dueAmtReg =pp.getAmount();
                            totalDueAmtReg+=dueAmtReg;
                            totalRecpAmtReg+=recpAmtReg;
                        }
                        else if(pp.getTypeOfCharge().equalsIgnoreCase("Reg Fees")&&pp.getModeOfPaymant().equalsIgnoreCase("Cash+Card"))
                        {
                        	feeReg=pp.getAmount();
                        	chqAmtReg=0;
                            cashAmtReg=0;
                            cardAmtReg=0;
                            advAmtReg=0;
                            cashPlusCardRegAmt=feeReg;
                            totalCashPlusCardRegAmt+=cashPlusCardRegAmt;
                            totalFeeAmtReg+=feeReg;
                            totalChqAmtReg+=0;
                            totalCardAmtReg=0;
                            totalAdvcAmtReg+=advAmtReg;
                            recpAmtReg=feeReg;
                            dueAmtReg =0;
                            totalDueAmtReg+=dueAmtReg;
                            totalRecpAmtReg+=recpAmtReg;
                        }
                
                        
                            PdfPCell cell111;
            
                            cell111 = new PdfPCell(new Phrase(pReg.getPatientDetails().getUmr(), redFont));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                            table13.addCell(cell111);
            
                            if(pReg.getPatientDetails().getMiddleName()!=null)
                            {
	                            cell111 = new PdfPCell(new Phrase(pReg.getPatientDetails().getFirstName()+" "+pReg.getPatientDetails().getMiddleName()+" "+pReg.getPatientDetails().getLastName(), redFont));
	                            cell111.setBorder(Rectangle.NO_BORDER);
	                            cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
	                            //cell111.setPaddingLeft(-30f);
	                            table13.addCell(cell111);
                            }
                            else
                            {
                            	cell111 = new PdfPCell(new Phrase(pReg.getPatientDetails().getFirstName()+" "+pReg.getPatientDetails().getLastName(), redFont));
	                            cell111.setBorder(Rectangle.NO_BORDER);
	                            cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
	                            //cell111.setPaddingLeft(-30f);
	                            table13.addCell(cell111);
                            }
            
                            cell111 = new PdfPCell(new Phrase(pReg.getRegId(), redFont));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                            //cell111.setPaddingLeft(-30f);
                            table13.addCell(cell111);
            
                            cell111 = new PdfPCell(new Phrase(pReg.getPatientDetails().getConsultant(), redFont));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                            //cell111.setPaddingLeft(-25f);
                            table13.addCell(cell111);
            
                            cell111 = new PdfPCell(new Phrase(String.valueOf(feeReg), redFont));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                            cell111.setPaddingRight(10f);
                            //cell111.setPaddingRight(45f);
                            table13.addCell(cell111);
                        
                            cell111 = new PdfPCell(new Phrase("0", redFont));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                            cell111.setPaddingRight(10f);
                            //cell111.setPaddingRight(13f);
                            table13.addCell(cell111);
            
                            cell111 = new PdfPCell(new Phrase(String.valueOf(feeReg), redFont));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                            cell111.setPaddingRight(10f);
                            table13.addCell(cell111);
                        
                            cell111 = new PdfPCell(new Phrase(String.valueOf(advAmtReg), redFont));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                            cell111.setPaddingRight(10f);
                            //cell111.setPaddingRight(7f);
                            table13.addCell(cell111);
            
                            cell111 = new PdfPCell(new Phrase(String.valueOf(recpAmtReg), redFont));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                            cell111.setPaddingRight(10f);
                            table13.addCell(cell111);
                        
                            cell111 = new PdfPCell(new Phrase(String.valueOf(cashAmtReg), redFont));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                            cell111.setPaddingRight(10f);
                            table13.addCell(cell111);
            
                            cell111 = new PdfPCell(new Phrase(String.valueOf(chqAmtReg), redFont));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                            cell111.setPaddingRight(10f);
                            table13.addCell(cell111);
                        
                            cell111 = new PdfPCell(new Phrase(String.valueOf(cardAmtReg), redFont));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                            cell111.setPaddingRight(10f);
                            table13.addCell(cell111);
                            
                            cell111 = new PdfPCell(new Phrase(String.valueOf(cashPlusCardRegAmt), redFont));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                            cell111.setPaddingRight(10f);
                            table13.addCell(cell111);
            
                            cell111 = new PdfPCell(new Phrase(String.valueOf(dueAmtReg), redFont));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                            
                            table13.addCell(cell111);
                    }
                    }
                }
            }
            }else
            {
            	 PdfPCell cell111;
                 
                 cell111 = new PdfPCell(new Phrase("", redFont));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                 table13.addCell(cell111);
 
                
                     cell111 = new PdfPCell(new Phrase("", redFont));
                     cell111.setBorder(Rectangle.NO_BORDER);
                     cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                     //cell111.setPaddingLeft(-30f);
                     table13.addCell(cell111);
                
 
                 cell111 = new PdfPCell(new Phrase("", redFont));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                 //cell111.setPaddingLeft(-30f);
                 table13.addCell(cell111);
 
                 cell111 = new PdfPCell(new Phrase("", redFont));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                 //cell111.setPaddingLeft(-25f);
                 table13.addCell(cell111);
 
                 cell111 = new PdfPCell(new Phrase("0", redFont));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 cell111.setPaddingRight(10f);
                 //cell111.setPaddingRight(45f);
                 table13.addCell(cell111);
             
                 cell111 = new PdfPCell(new Phrase("0", redFont));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 cell111.setPaddingRight(10f);
                 //cell111.setPaddingRight(13f);
                 table13.addCell(cell111);
 
                 cell111 = new PdfPCell(new Phrase("0", redFont));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 cell111.setPaddingRight(10f);
                 table13.addCell(cell111);
             
                 cell111 = new PdfPCell(new Phrase("0", redFont));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 cell111.setPaddingRight(10f);
                 //cell111.setPaddingRight(7f);
                 table13.addCell(cell111);
 
                 cell111 = new PdfPCell(new Phrase("0", redFont));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 cell111.setPaddingRight(10f);
                 table13.addCell(cell111);
             
                 cell111 = new PdfPCell(new Phrase("0", redFont));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 cell111.setPaddingRight(10f);
                 table13.addCell(cell111);
 
                 cell111 = new PdfPCell(new Phrase("0", redFont));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 cell111.setPaddingRight(10f);
                 table13.addCell(cell111);
             
                 cell111 = new PdfPCell(new Phrase("0", redFont));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 cell111.setPaddingRight(10f);
                 table13.addCell(cell111);
                 
                 cell111 = new PdfPCell(new Phrase("0", redFont));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 cell111.setPaddingRight(10f);
                 table13.addCell(cell111);
 
                 cell111 = new PdfPCell(new Phrase("0", redFont));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 table13.addCell(cell111);
 		
            }
            
            cell1.addElement(table13);
            
            PdfPTable table601 = new PdfPTable(14);
            table601.setWidths(new float[] {4.3f, 6.4f, 4f, 6f, 4f, 2.3f, 3.3f, 3.4f, 3.3f, 3.6f, 3.4f, 3.6f,4.5f,3.1f});
            table601.setSpacingBefore(10);
            table601.setWidthPercentage(100f);
            
            PdfPCell cell03;
            cell03 = new PdfPCell(new Phrase("", redFont));
            cell03.setBorder(Rectangle.NO_BORDER);
            cell03.setHorizontalAlignment(Element.ALIGN_LEFT);
            table601.addCell(cell03);
            cell03 = new PdfPCell(new Phrase("", redFont));
            cell03.setBorder(Rectangle.NO_BORDER);
            cell03.setHorizontalAlignment(Element.ALIGN_LEFT);
            //cell03.setPaddingLeft(-30f);
            table601.addCell(cell03);
            
            cell03 = new PdfPCell(new Phrase("", redFont));
            cell03.setBorder(Rectangle.NO_BORDER);
            cell03.setHorizontalAlignment(Element.ALIGN_LEFT);
            //cell03.setPaddingLeft(-30f);
            table601.addCell(cell03);
            
            cell03 = new PdfPCell(new Phrase("", redFont));
            cell03.setBorder(Rectangle.NO_BORDER);
            cell03.setHorizontalAlignment(Element.ALIGN_LEFT);
            //cell03.setPaddingLeft(-30f);
            table601.addCell(cell03);
            
            cell03 = new PdfPCell(new Phrase(String.valueOf(totalFeeAmtReg), redFont));
            //cell1111.setBorder(Rectangle.NO_BORDER);
            cell03.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell03.setPaddingTop(5f);
            cell03.setPaddingBottom(5f);
            cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell03.setPaddingRight(10f);
            //cell03.setPaddingRight(10f);
            table601.addCell(cell03);
        
            cell03 = new PdfPCell(new Phrase("0", redFont));
            //cell1111.setBorder(Rectangle.NO_BORDER);
            cell03.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell03.setPaddingTop(5f);
            cell03.setPaddingBottom(5f);
            cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell03.setPaddingRight(10f);
            //cell03.setPaddingRight(-15f);
            table601.addCell(cell03);
            
            cell03 = new PdfPCell(new Phrase(String.valueOf(totalFeeAmtReg), redFont));
            //cell1111.setBorder(Rectangle.NO_BORDER);
            cell03.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell03.setPaddingTop(5f);
            cell03.setPaddingBottom(5f);
            cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell03.setPaddingRight(10f);
            //cell03.setPaddingRight(-20f);
            table601.addCell(cell03);
        
            cell03 = new PdfPCell(new Phrase(String.valueOf(totalAdvcAmtReg), redFont));
            //cell1111.setBorder(Rectangle.NO_BORDER);
            cell03.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell03.setPaddingTop(5f);
            cell03.setPaddingBottom(5f);
            cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell03.setPaddingRight(10f);
            //cell03.setPaddingRight(-10f);
            table601.addCell(cell03);
            
            cell03 = new PdfPCell(new Phrase(String.valueOf(totalRecpAmtReg), redFont));
            //cell1111.setBorder(Rectangle.NO_BORDER);
            cell03.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell03.setPaddingTop(5f);
            cell03.setPaddingBottom(5f);
            cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell03.setPaddingRight(10f);
            //cell03.setPaddingRight(-17f);
            table601.addCell(cell03);
        
            cell03 = new PdfPCell(new Phrase(String.valueOf(totalCashAmtReg), redFont));
            //cell1111.setBorder(Rectangle.NO_BORDER);
            cell03.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell03.setPaddingTop(5f);
            cell03.setPaddingBottom(5f);
            cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell03.setPaddingRight(10f);
            //cell03.setPaddingRight(-13f);
            table601.addCell(cell03);
            
            cell03 = new PdfPCell(new Phrase(String.valueOf(totalChqAmtReg), redFont));
            //cell1111.setBorder(Rectangle.NO_BORDER);
            cell03.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell03.setPaddingTop(5f);
            cell03.setPaddingBottom(5f);
            cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell03.setPaddingRight(10f);
           // cell03.setPaddingRight(-7f);
            table601.addCell(cell03);
        
            cell03 = new PdfPCell(new Phrase(String.valueOf(totalCardAmtReg), redFont));
            //cell1111.setBorder(Rectangle.NO_BORDER);
            cell03.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell03.setPaddingTop(5f);
            cell03.setPaddingBottom(5f);
            cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell03.setPaddingRight(10f);
            //cell03.setPaddingRight(-3f);
            table601.addCell(cell03);
            
            cell03 = new PdfPCell(new Phrase(String.valueOf(totalCashPlusCardRegAmt), redFont));
            //cell1111.setBorder(Rectangle.NO_BORDER);
            cell03.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell03.setPaddingTop(5f);
            cell03.setPaddingBottom(5f);
            cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell03.setPaddingRight(10f);
            //cell03.setPaddingRight(-3f);
            table601.addCell(cell03);
            
            cell03 = new PdfPCell(new Phrase(String.valueOf(totalDueAmtReg), redFont));
            //cell1111.setBorder(Rectangle.NO_BORDER);
            cell03.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell03.setPaddingTop(5f);
            cell03.setPaddingBottom(5f);
            cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell03.setPaddingRight(10f);
            table601.addCell(cell03);
            cell1.addElement(table601);
            
//---------------------------------------- IP BILLS ---------------------------------------------            
            
            PdfPTable table14 = new PdfPTable(14);
            table14.setWidths(new float[] { 4.3f, 6.4f, 4f, 6f, 4f, 2.3f, 3.3f, 3.4f, 3.3f, 3.6f, 3.4f, 3.6f,4.5f,3.1f });
            table14.setSpacingBefore(10);
            table14.setWidthPercentage(100f);
            PdfPCell hcell09;
    
            hcell09 = new PdfPCell(new Phrase("IP BILLS", headFont));
            hcell09.setBorder(Rectangle.NO_BORDER);
            hcell09.setHorizontalAlignment(Element.ALIGN_LEFT);
            table14.addCell(hcell09);
            
            hcell09 = new PdfPCell(new Phrase("", headFont));
            hcell09.setBorder(Rectangle.NO_BORDER);
            hcell09.setHorizontalAlignment(Element.ALIGN_LEFT);
            table14.addCell(hcell09);
            
            hcell09 = new PdfPCell(new Phrase("", headFont));
            hcell09.setBorder(Rectangle.NO_BORDER);
            hcell09.setHorizontalAlignment(Element.ALIGN_LEFT);
            table14.addCell(hcell09);
            
            hcell09 = new PdfPCell(new Phrase("", headFont));
            hcell09.setBorder(Rectangle.NO_BORDER);
            hcell09.setHorizontalAlignment(Element.ALIGN_LEFT);
            table14.addCell(hcell09);
            
            hcell09 = new PdfPCell(new Phrase("", headFont));
            hcell09.setBorder(Rectangle.NO_BORDER);
            hcell09.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell09.setPaddingRight(10f);
            //hcell09.setPaddingRight(20f);
            table14.addCell(hcell09);
            
            hcell09 = new PdfPCell(new Phrase("", headFont));
            hcell09.setBorder(Rectangle.NO_BORDER);
            hcell09.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell09.setPaddingRight(10f);
            table14.addCell(hcell09);
            
            hcell09 = new PdfPCell(new Phrase("", headFont));
            hcell09.setBorder(Rectangle.NO_BORDER);
            hcell09.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell09.setPaddingRight(10f);
            table14.addCell(hcell09);
            
            hcell09 = new PdfPCell(new Phrase("", headFont));
            hcell09.setBorder(Rectangle.NO_BORDER);
            hcell09.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell09.setPaddingRight(10f);
            table14.addCell(hcell09);
            
            hcell09 = new PdfPCell(new Phrase("", headFont));
            hcell09.setBorder(Rectangle.NO_BORDER);
            hcell09.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell09.setPaddingRight(10f);
            table14.addCell(hcell09);
            
            hcell09 = new PdfPCell(new Phrase("", headFont));
            hcell09.setBorder(Rectangle.NO_BORDER);
            hcell09.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell09.setPaddingRight(10f);
            table14.addCell(hcell09);
            
            hcell09 = new PdfPCell(new Phrase("", headFont));
            hcell09.setBorder(Rectangle.NO_BORDER);
            hcell09.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell09.setPaddingRight(10f);
            table14.addCell(hcell09);
            
            hcell09 = new PdfPCell(new Phrase("", headFont));
            hcell09.setBorder(Rectangle.NO_BORDER);
            hcell09.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell09.setPaddingRight(10f);
            table14.addCell(hcell09);
            
            hcell09 = new PdfPCell(new Phrase("", headFont));
            hcell09.setBorder(Rectangle.NO_BORDER);
            hcell09.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell09.setPaddingRight(10f);
            table14.addCell(hcell09);
            
            
            hcell09 = new PdfPCell(new Phrase("", headFont));
            hcell09.setBorder(Rectangle.NO_BORDER);
            hcell09.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table14.addCell(hcell09);
            
            float ipFee = 0;
            float ipCashAmt1 = 0;
            float ipChqAmt1 = 0;
            float ipCardAmt1 = 0;
            float ipAdvAmt = 0;
            float ipCashPlusCardAmt=0;
            float ipTotalCashPlusCardAmt=0;
            float totalIpFeeAmt1 = 0;
            float totalIpCashAmt1 = 0;
            float totalIpCardAmt1 = 0;
            float totalIpChqAmt1 = 0;
            float totalIpDueAmt1 = 0;
            float ipDueAmt1=0;
            float ipRecpAmt1=0;
            float totalIpRecAmt1=0;
            float totalIpAdvAmt = 0;
           
                        
          
            
            if(!patientRegistration.isEmpty())
            {
            for(PatientRegistration pReg : patientRegistration)
            {
                patientType=pReg.getpType();
                pId = pReg.getRegId();
                //Set<PatientPayment> patientPayments = pReg.getPatientPayment();
                
                 
                Set<PatientPayment> patientPayments = paymentRepository.findByPatientRegistration(pReg);
                List<ChargeBill> charge=chargeBillRepository.findByPatRegId(pReg);
                for(ChargeBill pp : charge)
                {
                	/*if(pp.getServiceId()!=null)
                	{
                	cServiceId=pp.getServiceId().getServiceId();
                	serviceType=pp.getServiceId().getServiceType();
                	*/

                	//cServiceId=pp.getServiceId().getServiceId();
                	/*LabServices lab=labServicesRepository.findByServiceId(cServiceId);
                	lServiceId=lab.getServiceId();
                	*/
                	if(pp.getAmount()!=0)
                	{
               
                    if(patientType.equalsIgnoreCase("INPATIENT"))
                    {
                    	if(pp.getServiceId()!=null)
                    	{
    
                            if(pp.getPaymentType().equalsIgnoreCase("CASH"))
                            {
                                 
                                ipFee=pp.getNetAmount();
                                ipAdvAmt=pp.getNetAmount();
                                ipCashAmt1=pp.getNetAmount();
                                ipChqAmt1=0;
                                ipCardAmt1=0;
                                totalIpFeeAmt1+=ipFee;
                                totalIpCashAmt1+=ipCashAmt1;
                                ipRecpAmt1=pp.getNetAmount();
                                ipDueAmt1 = ipRecpAmt1-ipCashAmt1;
                                totalIpDueAmt1+=ipDueAmt1;
                                totalIpRecAmt1+=ipRecpAmt1;
                            }
                            else if(pp.getPaymentType().equalsIgnoreCase("CHQ")||pp.getPaymentType().equalsIgnoreCase("CHEQUE"))
                            {
                        
                                ipFee=pp.getNetAmount();
                                ipChqAmt1=pp.getNetAmount();
                                ipCashAmt1=0;
                                ipCardAmt1=0;
                                ipAdvAmt=0;
                                totalIpFeeAmt1+=ipFee;
                                totalIpChqAmt1+=ipChqAmt1;
                                ipRecpAmt1=pp.getNetAmount();
                                ipDueAmt1 = ipRecpAmt1-ipChqAmt1;
                                totalIpDueAmt1+=ipDueAmt1;
                                totalIpRecAmt1+=ipRecpAmt1;
                            }
                            else if(pp.getPaymentType().equalsIgnoreCase("DEBIT CARD") || pp.getPaymentType().equalsIgnoreCase("CREDIT CARD") || pp.getPaymentType().equalsIgnoreCase("CARD"))
                            {
                                
                                    ipFee=pp.getNetAmount();
                                    ipCardAmt1=pp.getNetAmount();
                                    ipChqAmt1=0;
                                    ipCashAmt1=0;
                                    ipAdvAmt=0;
                                    totalIpFeeAmt1+=ipFee;
                                    totalIpCardAmt1+=ipCardAmt1;
                                    ipRecpAmt1=pp.getNetAmount();
                                    ipDueAmt1 = ipRecpAmt1-ipCardAmt1;
                                    totalIpDueAmt1+=ipDueAmt1;
                                    totalIpRecAmt1+=ipRecpAmt1;
                                    
                            
                            }
                            else if(pp.getPaymentType().equalsIgnoreCase("ADVANCE"))
                            {
                                
                                
                                ipFee=pp.getNetAmount();
                                ipCashAmt1=0;
                                ipCardAmt1=0;
                                ipChqAmt1=0;
                                ipAdvAmt=pp.getNetAmount();
                                totalIpFeeAmt1+=ipAdvAmt;
                                ipRecpAmt1=0;
                                ipDueAmt1 = 0;
                                totalIpAdvAmt+=ipAdvAmt;
                                totalIpCardAmt1+=ipCardAmt1;
                                totalIpDueAmt1+=ipDueAmt1;
                                totalIpRecAmt1+=ipRecpAmt1;
                                
                            } else if(pp.getPaymentType().equalsIgnoreCase("DUE"))
                            {
                                
                                
                                ipFee=0;
                                ipCashAmt1=0;
                                ipCardAmt1=0;
                                ipChqAmt1=0;
                                ipAdvAmt=0;
                                totalIpFeeAmt1+=ipAdvAmt;
                                ipRecpAmt1=0;
                                ipDueAmt1 =pp.getNetAmount();
                                totalIpAdvAmt+=ipAdvAmt;
                                totalIpCardAmt1+=ipCardAmt1;
                                totalIpDueAmt1+=ipDueAmt1;
                                totalIpRecAmt1+=ipRecpAmt1;
                                
                            }
                            else if(pp.getPaymentType().equalsIgnoreCase("Cash+Card"))
                            {
                                
                                
                                ipFee=pp.getNetAmount();
                                ipCashAmt1=0;
                                ipCardAmt1=0;
                                ipChqAmt1=0;
                                ipAdvAmt=0;
                                ipCashPlusCardAmt=ipFee;
                                ipTotalCashPlusCardAmt+=ipCashPlusCardAmt;
                                totalIpFeeAmt1+=ipAdvAmt;
                                ipRecpAmt1=0;
                                ipDueAmt1 =0;
                                totalIpAdvAmt+=ipAdvAmt;
                                totalIpCardAmt1+=ipCardAmt1;
                                totalIpDueAmt1+=ipDueAmt1;
                                totalIpRecAmt1+=ipRecpAmt1;
                                
                            }
                         
            
                            PdfPCell cell111;
            
                            cell111 = new PdfPCell(new Phrase(pReg.getPatientDetails().getUmr(), redFont));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                            table14.addCell(cell111);
            
                            if(pReg.getPatientDetails().getMiddleName()!=null)
                            {
	                            cell111 = new PdfPCell(new Phrase(pReg.getPatientDetails().getFirstName()+" "+pReg.getPatientDetails().getMiddleName()+" "+pReg.getPatientDetails().getLastName(), redFont));
	                            cell111.setBorder(Rectangle.NO_BORDER);
	                            cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
	                            //cell111.setPaddingLeft(-30f);
	                            table14.addCell(cell111);
                            }
                            else
                            {
                            	cell111 = new PdfPCell(new Phrase(pReg.getPatientDetails().getFirstName()+" "+pReg.getPatientDetails().getLastName(), redFont));
                                cell111.setBorder(Rectangle.NO_BORDER);
                                cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                                //cell111.setPaddingLeft(-30f);
                                table14.addCell(cell111);
                            }
            
                            cell111 = new PdfPCell(new Phrase(pReg.getRegId(), redFont));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                            //cell111.setPaddingLeft(-30f);
                            table14.addCell(cell111);
            
                            cell111 = new PdfPCell(new Phrase(pReg.getPatientDetails().getConsultant(), redFont));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                            //cell111.setPaddingLeft(-20f);
                            table14.addCell(cell111);
            
                            cell111 = new PdfPCell(new Phrase(String.valueOf(ipFee), redFont));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                            cell111.setPaddingRight(10f);
                            //cell111.setPaddingRight(35f);
                            table14.addCell(cell111);
                        
                            cell111 = new PdfPCell(new Phrase("0", redFont));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                            cell111.setPaddingRight(10f);
                            //cell111.setPaddingRight(20f);
                            table14.addCell(cell111);
            
                            cell111 = new PdfPCell(new Phrase(String.valueOf(ipFee), redFont));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                            cell111.setPaddingRight(10f);
                            //cell111.setPaddingRight(15f);
                            table14.addCell(cell111);
                        
                            cell111 = new PdfPCell(new Phrase(String.valueOf(ipAdvAmt), redFont));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                            cell111.setPaddingRight(10f);
                            //cell111.setPaddingRight(12f);
                            table14.addCell(cell111);
            
                            cell111 = new PdfPCell(new Phrase(String.valueOf(ipRecpAmt1), redFont));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                            cell111.setPaddingRight(10f);
                            //cell111.setPaddingRight(10f);
                            table14.addCell(cell111);
                        
                            cell111 = new PdfPCell(new Phrase(String.valueOf(ipCashAmt1), redFont));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                            cell111.setPaddingRight(10f);
                            //cell111.setPaddingRight(10f);
                            table14.addCell(cell111);
            
                            cell111 = new PdfPCell(new Phrase(String.valueOf(ipChqAmt1), redFont));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                            cell111.setPaddingRight(10f);
                            table14.addCell(cell111);
                        
                            cell111 = new PdfPCell(new Phrase(String.valueOf(ipCardAmt1), redFont));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                            cell111.setPaddingRight(10f);
                            table14.addCell(cell111);
            
                            cell111 = new PdfPCell(new Phrase(String.valueOf(ipCashPlusCardAmt), redFont));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                            cell111.setPaddingRight(10f);
                            table14.addCell(cell111);
                            
                            cell111 = new PdfPCell(new Phrase(String.valueOf(ipDueAmt1), redFont));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                            
                            table14.addCell(cell111);
                            
                            }
                    }
                        }
                    
                }
            }
           }else {
        	   
               PdfPCell cell111;
               
               cell111 = new PdfPCell(new Phrase("", redFont));
               cell111.setBorder(Rectangle.NO_BORDER);
               cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
               table14.addCell(cell111);

               
                   cell111 = new PdfPCell(new Phrase("", redFont));
                   cell111.setBorder(Rectangle.NO_BORDER);
                   cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                   //cell111.setPaddingLeft(-30f);
                   table14.addCell(cell111);
               
              
               cell111 = new PdfPCell(new Phrase("", redFont));
               cell111.setBorder(Rectangle.NO_BORDER);
               cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
               //cell111.setPaddingLeft(-30f);
               table14.addCell(cell111);

               cell111 = new PdfPCell(new Phrase("", redFont));
               cell111.setBorder(Rectangle.NO_BORDER);
               cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
               //cell111.setPaddingLeft(-20f);
               table14.addCell(cell111);

               cell111 = new PdfPCell(new Phrase("0", redFont));
               cell111.setBorder(Rectangle.NO_BORDER);
               cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
               cell111.setPaddingRight(10f);
               //cell111.setPaddingRight(35f);
               table14.addCell(cell111);
           
               cell111 = new PdfPCell(new Phrase("0", redFont));
               cell111.setBorder(Rectangle.NO_BORDER);
               cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
               cell111.setPaddingRight(10f);
               //cell111.setPaddingRight(20f);
               table14.addCell(cell111);

               cell111 = new PdfPCell(new Phrase("0", redFont));
               cell111.setBorder(Rectangle.NO_BORDER);
               cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
               cell111.setPaddingRight(10f);
               //cell111.setPaddingRight(15f);
               table14.addCell(cell111);
           
               cell111 = new PdfPCell(new Phrase("0", redFont));
               cell111.setBorder(Rectangle.NO_BORDER);
               cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
               cell111.setPaddingRight(10f);
               //cell111.setPaddingRight(12f);
               table14.addCell(cell111);

               cell111 = new PdfPCell(new Phrase("0", redFont));
               cell111.setBorder(Rectangle.NO_BORDER);
               cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
               cell111.setPaddingRight(10f);
               //cell111.setPaddingRight(10f);
               table14.addCell(cell111);
           
               cell111 = new PdfPCell(new Phrase("0", redFont));
               cell111.setBorder(Rectangle.NO_BORDER);
               cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
               cell111.setPaddingRight(10f);
               //cell111.setPaddingRight(10f);
               table14.addCell(cell111);

               cell111 = new PdfPCell(new Phrase("0", redFont));
               cell111.setBorder(Rectangle.NO_BORDER);
               cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
               cell111.setPaddingRight(10f);
               table14.addCell(cell111);
           
               cell111 = new PdfPCell(new Phrase("0", redFont));
               cell111.setBorder(Rectangle.NO_BORDER);
               cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
               cell111.setPaddingRight(10f);
               table14.addCell(cell111);

               cell111 = new PdfPCell(new Phrase("0", redFont));
               cell111.setBorder(Rectangle.NO_BORDER);
               cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
               cell111.setPaddingRight(10f);
               table14.addCell(cell111);

               cell111 = new PdfPCell(new Phrase("0", redFont));
               cell111.setBorder(Rectangle.NO_BORDER);
               cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
               
               table14.addCell(cell111);
               
        	   
           }
                cell1.addElement(table14);
            
                PdfPTable table01 = new PdfPTable(14);
                table01.setWidths(new float[] { 4.3f, 6.4f, 4f, 6f, 4f, 2.3f, 3.3f, 3.4f, 3.3f, 3.6f, 3.4f, 3.6f,4.5f,3.1f });
                table01.setSpacingBefore(10);
                table01.setWidthPercentage(100f);
                
                PdfPCell cell01;
    
                cell01 = new PdfPCell(new Phrase("", redFont));
                cell01.setBorder(Rectangle.NO_BORDER);
                cell01.setHorizontalAlignment(Element.ALIGN_LEFT);
                table01.addCell(cell01);
    
                cell01 = new PdfPCell(new Phrase("", redFont));
                cell01.setBorder(Rectangle.NO_BORDER);
                cell01.setHorizontalAlignment(Element.ALIGN_LEFT);
                //cell01.setPaddingLeft(-30f);
                table01.addCell(cell01);
    
                cell01 = new PdfPCell(new Phrase("", redFont));
                cell01.setBorder(Rectangle.NO_BORDER);
                cell01.setHorizontalAlignment(Element.ALIGN_LEFT);
                //cell01.setPaddingLeft(-30f);
                table01.addCell(cell01);
    
                cell01 = new PdfPCell(new Phrase("", redFont));
                cell01.setBorder(Rectangle.NO_BORDER);
                cell01.setHorizontalAlignment(Element.ALIGN_LEFT);
                //cell01.setPaddingLeft(-30f);
                table01.addCell(cell01);
    
                cell01 = new PdfPCell(new Phrase(String.valueOf(totalIpFeeAmt1), redFont));
                cell01.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell01.setPaddingTop(5f);
                cell01.setPaddingBottom(5f);
                cell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell01.setPaddingRight(10f);
                //cell01.setPaddingRight(10f);
                table01.addCell(cell01);
            
                cell01 = new PdfPCell(new Phrase("0", redFont));
                cell01.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell01.setPaddingTop(5f);
                cell01.setPaddingBottom(5f);
                cell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell01.setPaddingRight(10f);
                //cell01.setPaddingRight(-15f);
                table01.addCell(cell01);
    
                cell01 = new PdfPCell(new Phrase(String.valueOf(totalIpFeeAmt1), redFont));
                cell01.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell01.setPaddingTop(5f);
                cell01.setPaddingBottom(5f);
                cell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell01.setPaddingRight(10f);
                //cell01.setPaddingRight(-20f);
                table01.addCell(cell01);
            
                cell01 = new PdfPCell(new Phrase(String.valueOf(totalIpAdvAmt), redFont));
                cell01.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell01.setPaddingTop(5f);
                cell01.setPaddingBottom(5f);
                cell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell01.setPaddingRight(10f);
                //cell01.setPaddingRight(-10f);
                table01.addCell(cell01);
    
                cell01 = new PdfPCell(new Phrase(String.valueOf(totalIpRecAmt1), redFont));
                cell01.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell01.setPaddingTop(5f);
                cell01.setPaddingBottom(5f);
                cell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell01.setPaddingRight(10f);
                //cell01.setPaddingRight(-17f);
                table01.addCell(cell01);
            
                cell01 = new PdfPCell(new Phrase(String.valueOf(totalIpCashAmt1), redFont));
                cell01.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell01.setPaddingTop(5f);
                cell01.setPaddingBottom(5f);
                cell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell01.setPaddingRight(10f);
                //cell01.setPaddingRight(-13f);
                table01.addCell(cell01);
    
                cell01 = new PdfPCell(new Phrase(String.valueOf(totalIpChqAmt1), redFont));
                cell01.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell01.setPaddingTop(5f);
                cell01.setPaddingBottom(5f);
                cell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell01.setPaddingRight(10f);
                //cell01.setPaddingRight(-7f);
                table01.addCell(cell01);
            
                cell01 = new PdfPCell(new Phrase(String.valueOf(totalIpCardAmt1), redFont));
                cell01.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell01.setPaddingTop(5f);
                cell01.setPaddingBottom(5f);
                cell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell01.setPaddingRight(10f);
                //cell01.setPaddingRight(-3f);
                table01.addCell(cell01);
                
                cell01 = new PdfPCell(new Phrase(String.valueOf(ipTotalCashPlusCardAmt), redFont));
                cell01.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell01.setPaddingTop(5f);
                cell01.setPaddingBottom(5f);
                cell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell01.setPaddingRight(10f);
                //cell01.setPaddingRight(-3f);
                table01.addCell(cell01);
    
                cell01 = new PdfPCell(new Phrase(String.valueOf(totalIpDueAmt1), redFont));
                cell01.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell01.setPaddingTop(5f);
                cell01.setPaddingBottom(5f);
                cell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
                
                table01.addCell(cell01);
    
                cell1.addElement(table01);
                
                
                
              //----------------------------------LABORATORY BILLS---------------------------------------------------                 
                              
                PdfPTable table09 = new PdfPTable(1);
                table09.setWidths(new float[] {6f});
                table09.setSpacingBefore(10);
                table09.setWidthPercentage(100f);
                
                PdfPCell hcell71;
                
                hcell71 = new PdfPCell(new Phrase("LABORATORY BILLS", headFont));
                hcell71.setBorder(Rectangle.NO_BORDER);
                hcell71.setHorizontalAlignment(Element.ALIGN_LEFT);
                hcell71.setPaddingBottom(-10f);
                table09.addCell(hcell71);
                cell1.addElement(table09);
                
      
                              PdfPTable table141 = new PdfPTable(14);
                              table141.setWidths(new float[] { 4.3f, 6.4f, 4f, 6f, 4f, 2.3f, 3.3f, 3.4f, 3.3f, 3.6f, 3.4f, 3.6f,4.5f,3.1f  });
                              table141.setSpacingBefore(10);
                              table141.setWidthPercentage(100f);
                              PdfPCell hcell091;
                      
                              hcell091 = new PdfPCell(new Phrase("", headFont));
                              hcell091.setBorder(Rectangle.NO_BORDER);
                              hcell091.setHorizontalAlignment(Element.ALIGN_LEFT);
                              table141.addCell(hcell091);
                              
                              hcell091 = new PdfPCell(new Phrase("", headFont));
                              hcell091.setBorder(Rectangle.NO_BORDER);
                              hcell091.setHorizontalAlignment(Element.ALIGN_LEFT);
                              table141.addCell(hcell091);
                              
                              hcell091 = new PdfPCell(new Phrase("", headFont));
                              hcell091.setBorder(Rectangle.NO_BORDER);
                              hcell091.setHorizontalAlignment(Element.ALIGN_LEFT);
                              table141.addCell(hcell091);
                              
                              hcell091 = new PdfPCell(new Phrase("", headFont));
                              hcell091.setBorder(Rectangle.NO_BORDER);
                              hcell091.setHorizontalAlignment(Element.ALIGN_LEFT);
                              table141.addCell(hcell091);
                              
                              hcell091 = new PdfPCell(new Phrase("", headFont));
                              hcell091.setBorder(Rectangle.NO_BORDER);
                              hcell091.setHorizontalAlignment(Element.ALIGN_RIGHT);
                              hcell091.setPaddingRight(10f);
                              //hcell09.setPaddingRight(20f);
                              table141.addCell(hcell091);
                              
                              hcell091 = new PdfPCell(new Phrase("", headFont));
                              hcell091.setBorder(Rectangle.NO_BORDER);
                              hcell091.setHorizontalAlignment(Element.ALIGN_RIGHT);
                              hcell091.setPaddingRight(10f);
                              table141.addCell(hcell091);
                              
                              hcell091 = new PdfPCell(new Phrase("", headFont));
                              hcell091.setBorder(Rectangle.NO_BORDER);
                              hcell091.setHorizontalAlignment(Element.ALIGN_RIGHT);
                              hcell091.setPaddingRight(10f);
                              table141.addCell(hcell091);
                              
                              hcell091 = new PdfPCell(new Phrase("", headFont));
                              hcell091.setBorder(Rectangle.NO_BORDER);
                              hcell091.setHorizontalAlignment(Element.ALIGN_RIGHT);
                              hcell091.setPaddingRight(10f);
                              table141.addCell(hcell091);
                              
                              hcell091 = new PdfPCell(new Phrase("", headFont));
                              hcell091.setBorder(Rectangle.NO_BORDER);
                              hcell091.setHorizontalAlignment(Element.ALIGN_RIGHT);
                              hcell091.setPaddingRight(10f);
                              table141.addCell(hcell091);
                              
                              hcell091 = new PdfPCell(new Phrase("", headFont));
                              hcell091.setBorder(Rectangle.NO_BORDER);
                              hcell091.setHorizontalAlignment(Element.ALIGN_RIGHT);
                              hcell091.setPaddingRight(10f);
                              table141.addCell(hcell091);
                              
                              hcell091 = new PdfPCell(new Phrase("", headFont));
                              hcell091.setBorder(Rectangle.NO_BORDER);
                              hcell091.setHorizontalAlignment(Element.ALIGN_RIGHT);
                              hcell091.setPaddingRight(10f);
                              table141.addCell(hcell091);
                              
                              hcell091 = new PdfPCell(new Phrase("", headFont));
                              hcell091.setBorder(Rectangle.NO_BORDER);
                              hcell091.setHorizontalAlignment(Element.ALIGN_RIGHT);
                              hcell091.setPaddingRight(10f);
                              table141.addCell(hcell091);
                              
                              hcell091 = new PdfPCell(new Phrase("", headFont));
                              hcell091.setBorder(Rectangle.NO_BORDER);
                              hcell091.setHorizontalAlignment(Element.ALIGN_RIGHT);
                              hcell091.setPaddingRight(10f);
                              table141.addCell(hcell091);
                              
                              hcell091 = new PdfPCell(new Phrase("", headFont));
                              hcell091.setBorder(Rectangle.NO_BORDER);
                              hcell091.setHorizontalAlignment(Element.ALIGN_RIGHT);
                              
                              table141.addCell(hcell091);
                              
                              float labFee = 0;
                              float labCashAmt1 = 0;
                              float labChqAmt1 = 0;
                              float labCardAmt1 = 0;
                              float labAdvAmt = 0;
                              float labCashPlusCardAmt=0;
                              float labTotalCashPlusCardAmt=0;
                              float totalLabFeeAmt1 = 0;
                              float totalLabCashAmt1 = 0;
                              float totalLabCardAmt1 = 0;
                              float totalLabChqAmt1 = 0;
                              float totalLabDueAmt1 = 0;
                              float labDueAmt1=0;
                              float labRecpAmt1=0;
                              float totalLabRecAmt1=0;
                              float totalLabAdvAmt = 0;
                         
                                          
                            
                         
                                  List<LaboratoryRegistration> labDetails=laboratoryRegistrationServiceImpl.findUserWiseIpOpDetailed(user.get("fromDate"),user.get("toDate"),uId,"Yes");
                                  //Set<PatientPayment> patientPayments = pReg.getPatientPayment();
                                //  Set<PatientPayment> patientPayments = paymentRepository.findByPatientRegistration(pReg);
                                  
                                  if(!labDetails.isEmpty())
                                  {
                                  for(LaboratoryRegistration lab : labDetails)
                                  {
                                     /* typeOfCharge=pp.getTypeOfCharge();
                                      if(patientType.equalsIgnoreCase("INPATIENT"))
                                      {
                                          if(!(typeOfCharge.equalsIgnoreCase("Doctor Fee")|| typeOfCharge.equalsIgnoreCase("Reg Fees")))
                                          { */
                                	  if(lab.getNetAmount()!=0)
                                	  {
                                              if(lab.getPaymentType().equalsIgnoreCase("CASH"))
                                              {
                                                  labFee=lab.getNetAmount();
                                                  labAdvAmt=0;
                                                  labCashAmt1=lab.getNetAmount();
                                                  labChqAmt1=0;
                                                  labCardAmt1=0;
                                                  totalLabFeeAmt1+=labFee;
                                                  totalLabCashAmt1+=labCashAmt1;
                                                  labRecpAmt1=lab.getNetAmount();
                                                  labDueAmt1 =0;
                                                  totalLabDueAmt1+=labDueAmt1;
                                                  totalLabRecAmt1+=labRecpAmt1;
                                              }
                                              else if(lab.getPaymentType().equalsIgnoreCase("CHQ") || lab.getPaymentType().equalsIgnoreCase("CHEQUE"))
                                              {
                                          
                                              	 labFee=lab.getNetAmount();
                                                   labAdvAmt=0;
                                                   labCashAmt1=0;
                                                   labChqAmt1=lab.getNetAmount();
                                                   labCardAmt1=0;
                                                   totalLabFeeAmt1+=labFee;
                                                   totalLabChqAmt1+=labChqAmt1;
                                                   labRecpAmt1=lab.getNetAmount();
                                                   labDueAmt1 =0;
                                                   totalLabDueAmt1+=labDueAmt1;
                                                   totalLabRecAmt1+=labRecpAmt1;
                                              }
                                              else if(lab.getPaymentType().equalsIgnoreCase("DEBIT CARD") || lab.getPaymentType().equalsIgnoreCase("CREDIT CARD") || lab.getPaymentType().equalsIgnoreCase("CARD"))
                                              {
                                                  
                                              	 labFee=lab.getNetAmount();
                                                   labAdvAmt=0;
                                                   labCashAmt1=0;
                                                   labChqAmt1=0;
                                                   labCardAmt1=lab.getNetAmount();
                                                   totalLabFeeAmt1+=labFee;
                                                   totalLabCardAmt1+=labCardAmt1;
                                                   labRecpAmt1=lab.getNetAmount();
                                                   labDueAmt1 =0;
                                                   totalLabDueAmt1+=labDueAmt1;
                                                   totalLabRecAmt1+=labRecpAmt1;
                                                      
                                              
                                              }
                                              else if(lab.getPaymentType().equalsIgnoreCase("ADVANCE"))
                                              {
                                                  
                                                  
                                              	 labFee=lab.getNetAmount();
                                                   labAdvAmt=lab.getNetAmount();
                                                   labCashAmt1=0;
                                                   labChqAmt1=0;
                                                   labCardAmt1=0;
                                                   totalLabFeeAmt1+=labFee;
                                                   totalLabAdvAmt+=labAdvAmt;
                                                   labRecpAmt1=lab.getNetAmount();
                                                   labDueAmt1 =0;
                                                   totalLabDueAmt1+=labDueAmt1;
                                                   totalLabRecAmt1+=labRecpAmt1;
                                                  
                                              }  else if(lab.getPaymentType().equalsIgnoreCase("DUE"))
                                              {
                                                  
                                                  
	                                              	 labFee=0;
	                                                   labAdvAmt=0;
	                                                   labCashAmt1=0;
	                                                   labChqAmt1=0;
	                                                   labCardAmt1=0;
	                                                   totalLabFeeAmt1+=labFee;
	                                                   totalLabAdvAmt+=labAdvAmt;
	                                                   labRecpAmt1=0;
	                                                   labDueAmt1 =lab.getNetAmount();
	                                                   totalLabDueAmt1+=labDueAmt1;
	                                                   totalLabRecAmt1+=labRecpAmt1;
	                                                  
	                                              }else if(lab.getPaymentType().equalsIgnoreCase("Cash+Card"))
	                                              {
	                                                  
	                                                  
		                                              	 labFee=lab.getNetAmount();
		                                                   labAdvAmt=0;
		                                                   labCashAmt1=0;
		                                                   labChqAmt1=0;
		                                                   labCardAmt1=0;
		                                                   labCashPlusCardAmt=lab.getNetAmount();
		                                                   labTotalCashPlusCardAmt=labCashPlusCardAmt;
		                                                   totalLabFeeAmt1+=labFee;
		                                                   totalLabAdvAmt+=labAdvAmt;
		                                                   labRecpAmt1=0;
		                                                   labDueAmt1 =0;
		                                                   totalLabDueAmt1+=labDueAmt1;
		                                                   totalLabRecAmt1+=labRecpAmt1;
		                                                  
		                                              }
                                         
                                              PatientRegistration pReg=lab.getLaboratoryPatientRegistration();
                                              
                                              
                                        
                                              PdfPCell cell111;
                              
                                              cell111 = new PdfPCell(new Phrase(pReg.getPatientDetails().getUmr(), redFont));
                                              cell111.setBorder(Rectangle.NO_BORDER);
                                              cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                                              table141.addCell(cell111);
                              
                                              cell111 = new PdfPCell(new Phrase(pReg.getPatientDetails().getFirstName()+" "+pReg.getPatientDetails().getLastName(), redFont));
                                              cell111.setBorder(Rectangle.NO_BORDER);
                                              cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                                              //cell111.setPaddingLeft(-30f);
                                              table141.addCell(cell111);
                              
                                              cell111 = new PdfPCell(new Phrase(pReg.getRegId(), redFont));
                                              cell111.setBorder(Rectangle.NO_BORDER);
                                              cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                                              //cell111.setPaddingLeft(-30f);
                                              table141.addCell(cell111);
                              
                                              cell111 = new PdfPCell(new Phrase(pReg.getPatientDetails().getConsultant(), redFont));
                                              cell111.setBorder(Rectangle.NO_BORDER);
                                              cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                                              //cell111.setPaddingLeft(-20f);
                                              table141.addCell(cell111);
                              
                                              cell111 = new PdfPCell(new Phrase(String.valueOf(labFee), redFont));
                                              cell111.setBorder(Rectangle.NO_BORDER);
                                              cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                              cell111.setPaddingRight(10f);
                                              //cell111.setPaddingRight(35f);
                                              table141.addCell(cell111);
                                          
                                              cell111 = new PdfPCell(new Phrase("0", redFont));
                                              cell111.setBorder(Rectangle.NO_BORDER);
                                              cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                              cell111.setPaddingRight(10f);
                                              //cell111.setPaddingRight(20f);
                                              table141.addCell(cell111);
                              
                                              cell111 = new PdfPCell(new Phrase(String.valueOf(labFee), redFont));
                                              cell111.setBorder(Rectangle.NO_BORDER);
                                              cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                              cell111.setPaddingRight(10f);
                                              //cell111.setPaddingRight(15f);
                                              table141.addCell(cell111);
                                          
                                              cell111 = new PdfPCell(new Phrase(String.valueOf(labAdvAmt), redFont));
                                              cell111.setBorder(Rectangle.NO_BORDER);
                                              cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                              cell111.setPaddingRight(10f);
                                              //cell111.setPaddingRight(12f);
                                              table141.addCell(cell111);
                              
                                              cell111 = new PdfPCell(new Phrase(String.valueOf(labRecpAmt1), redFont));
                                              cell111.setBorder(Rectangle.NO_BORDER);
                                              cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                              cell111.setPaddingRight(10f);
                                              //cell111.setPaddingRight(10f);
                                              table141.addCell(cell111);
                                          
                                              cell111 = new PdfPCell(new Phrase(String.valueOf(labCashAmt1), redFont));
                                              cell111.setBorder(Rectangle.NO_BORDER);
                                              cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                              cell111.setPaddingRight(10f);
                                              //cell111.setPaddingRight(10f);
                                              table141.addCell(cell111);
                              
                                              cell111 = new PdfPCell(new Phrase(String.valueOf(labChqAmt1), redFont));
                                              cell111.setBorder(Rectangle.NO_BORDER);
                                              cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                              cell111.setPaddingRight(10f);
                                              table141.addCell(cell111);
                                          
                                              cell111 = new PdfPCell(new Phrase(String.valueOf(labCardAmt1), redFont));
                                              cell111.setBorder(Rectangle.NO_BORDER);
                                              cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                              cell111.setPaddingRight(10f);
                                              table141.addCell(cell111);
                                              
                                              cell111 = new PdfPCell(new Phrase(String.valueOf(labCashPlusCardAmt), redFont));
                                              cell111.setBorder(Rectangle.NO_BORDER);
                                              cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                              cell111.setPaddingRight(10f);
                                              table141.addCell(cell111);
                              
                                              cell111 = new PdfPCell(new Phrase(String.valueOf(labDueAmt1), redFont));
                                              cell111.setBorder(Rectangle.NO_BORDER);
                                              cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                              table141.addCell(cell111);
                                              }
                                              
                                		  
                                	  }
                                  }
                                  else {
                                      PdfPCell cell111;
                                      
                                      cell111 = new PdfPCell(new Phrase("", redFont));
                                      cell111.setBorder(Rectangle.NO_BORDER);
                                      cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                                      table141.addCell(cell111);
                      
                                      cell111 = new PdfPCell(new Phrase("", redFont));
                                      cell111.setBorder(Rectangle.NO_BORDER);
                                      cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                                      //cell111.setPaddingLeft(-30f);
                                      table141.addCell(cell111);
                      
                                      cell111 = new PdfPCell(new Phrase("", redFont));
                                      cell111.setBorder(Rectangle.NO_BORDER);
                                      cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                                      //cell111.setPaddingLeft(-30f);
                                      table141.addCell(cell111);
                      
                                      cell111 = new PdfPCell(new Phrase("", redFont));
                                      cell111.setBorder(Rectangle.NO_BORDER);
                                      cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                                      //cell111.setPaddingLeft(-20f);
                                      table141.addCell(cell111);
                      
                                      cell111 = new PdfPCell(new Phrase("0", redFont));
                                      cell111.setBorder(Rectangle.NO_BORDER);
                                      cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                      cell111.setPaddingRight(10f);
                                      //cell111.setPaddingRight(35f);
                                      table141.addCell(cell111);
                                  
                                      cell111 = new PdfPCell(new Phrase("0", redFont));
                                      cell111.setBorder(Rectangle.NO_BORDER);
                                      cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                      cell111.setPaddingRight(10f);
                                      //cell111.setPaddingRight(20f);
                                      table141.addCell(cell111);
                      
                                      cell111 = new PdfPCell(new Phrase("0", redFont));
                                      cell111.setBorder(Rectangle.NO_BORDER);
                                      cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                      cell111.setPaddingRight(10f);
                                      //cell111.setPaddingRight(15f);
                                      table141.addCell(cell111);
                                  
                                      cell111 = new PdfPCell(new Phrase("0", redFont));
                                      cell111.setBorder(Rectangle.NO_BORDER);
                                      cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                      cell111.setPaddingRight(10f);
                                      //cell111.setPaddingRight(12f);
                                      table141.addCell(cell111);
                      
                                      cell111 = new PdfPCell(new Phrase("0", redFont));
                                      cell111.setBorder(Rectangle.NO_BORDER);
                                      cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                      cell111.setPaddingRight(10f);
                                      //cell111.setPaddingRight(10f);
                                      table141.addCell(cell111);
                                  
                                      cell111 = new PdfPCell(new Phrase("0", redFont));
                                      cell111.setBorder(Rectangle.NO_BORDER);
                                      cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                      cell111.setPaddingRight(10f);
                                      //cell111.setPaddingRight(10f);
                                      table141.addCell(cell111);
                      
                                      cell111 = new PdfPCell(new Phrase("0", redFont));
                                      cell111.setBorder(Rectangle.NO_BORDER);
                                      cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                      cell111.setPaddingRight(10f);
                                      table141.addCell(cell111);
                                  
                                      cell111 = new PdfPCell(new Phrase("0", redFont));
                                      cell111.setBorder(Rectangle.NO_BORDER);
                                      cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                      cell111.setPaddingRight(10f);
                                      table141.addCell(cell111);
                                      
                                      cell111 = new PdfPCell(new Phrase("0", redFont));
                                      cell111.setBorder(Rectangle.NO_BORDER);
                                      cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                      cell111.setPaddingRight(10f);
                                      table141.addCell(cell111);
                      
                                      cell111 = new PdfPCell(new Phrase("0", redFont));
                                      cell111.setBorder(Rectangle.NO_BORDER);
                                      cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                      table141.addCell(cell111);
                                      
                    	  
                                  }
                                 
                                	  
                                	  
                                  cell1.addElement(table141);
                              
                                  PdfPTable table98 = new PdfPTable(14);
                                  table98.setWidths(new float[] {4.3f, 6.4f, 4f, 6f, 4f, 2.3f, 3.3f, 3.4f, 3.3f, 3.6f, 3.4f, 3.6f,4.5f,3.1f});
                                  table98.setSpacingBefore(10);
                                  table98.setWidthPercentage(100f);
                                  
                                  PdfPCell cell54;
                      
                                  cell54 = new PdfPCell(new Phrase("", redFont));
                                  cell54.setBorder(Rectangle.NO_BORDER);
                                  cell54.setHorizontalAlignment(Element.ALIGN_LEFT);
                                  table98.addCell(cell54);
                      
                                  cell54 = new PdfPCell(new Phrase("", redFont));
                                  cell54.setBorder(Rectangle.NO_BORDER);
                                  cell54.setHorizontalAlignment(Element.ALIGN_LEFT);
                                  //cell01.setPaddingLeft(-30f);
                                  table98.addCell(cell54);
                      
                                  cell54 = new PdfPCell(new Phrase("", redFont));
                                  cell54.setBorder(Rectangle.NO_BORDER);
                                  cell54.setHorizontalAlignment(Element.ALIGN_LEFT);
                                  //cell01.setPaddingLeft(-30f);
                                  table98.addCell(cell54);
                      
                                  cell54 = new PdfPCell(new Phrase("", redFont));
                                  cell54.setBorder(Rectangle.NO_BORDER);
                                  cell54.setHorizontalAlignment(Element.ALIGN_LEFT);
                                  //cell01.setPaddingLeft(-30f);
                                  table98.addCell(cell54);
                      
                                  cell54 = new PdfPCell(new Phrase(String.valueOf(totalLabFeeAmt1), redFont));
                                  cell54.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                                  cell54.setPaddingTop(5f);
                                  cell54.setPaddingBottom(5f);
                                  cell54.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                  cell54.setPaddingRight(10f);
                                  //cell01.setPaddingRight(10f);
                                  table98.addCell(cell54);
                              
                                  cell54 = new PdfPCell(new Phrase("0", redFont));
                                  cell54.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                                  cell54.setPaddingTop(5f);
                                  cell54.setPaddingBottom(5f);
                                  cell54.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                  cell54.setPaddingRight(10f);
                                  //cell01.setPaddingRight(-15f);
                                  table98.addCell(cell54);
                      
                                  cell54 = new PdfPCell(new Phrase(String.valueOf(totalLabFeeAmt1), redFont));
                                  cell54.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                                  cell54.setPaddingTop(5f);
                                  cell54.setPaddingBottom(5f);
                                  cell54.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                  cell54.setPaddingRight(10f);
                                  //cell01.setPaddingRight(-20f);
                                  table98.addCell(cell54);
                              
                                  cell54 = new PdfPCell(new Phrase(String.valueOf(totalLabAdvAmt), redFont));
                                  cell54.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                                  cell54.setPaddingTop(5f);
                                  cell54.setPaddingBottom(5f);
                                  cell54.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                  cell54.setPaddingRight(10f);
                                  //cell01.setPaddingRight(-10f);
                                  table98.addCell(cell54);
                      
                                  cell54 = new PdfPCell(new Phrase(String.valueOf(totalLabRecAmt1), redFont));
                                  cell54.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                                  cell54.setPaddingTop(5f);
                                  cell54.setPaddingBottom(5f);
                                  cell54.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                  cell54.setPaddingRight(10f);
                                  //cell01.setPaddingRight(-17f);
                                  table98.addCell(cell54);
                              
                                  cell54 = new PdfPCell(new Phrase(String.valueOf(totalLabCashAmt1), redFont));
                                  cell54.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                                  cell54.setPaddingTop(5f);
                                  cell54.setPaddingBottom(5f);
                                  cell54.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                  cell54.setPaddingRight(10f);
                                  //cell01.setPaddingRight(-13f);
                                  table98.addCell(cell54);
                      
                                  cell54 = new PdfPCell(new Phrase(String.valueOf(totalLabChqAmt1), redFont));
                                  cell54.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                                  cell54.setPaddingTop(5f);
                                  cell54.setPaddingBottom(5f);
                                  cell54.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                  cell54.setPaddingRight(10f);
                                  //cell01.setPaddingRight(-7f);
                                  table98.addCell(cell54);
                              
                                  cell54 = new PdfPCell(new Phrase(String.valueOf(totalLabCardAmt1), redFont));
                                  cell54.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                                  cell54.setPaddingTop(5f);
                                  cell54.setPaddingBottom(5f);
                                  cell54.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                  cell54.setPaddingRight(10f);
                                  //cell01.setPaddingRight(-3f);
                                  table98.addCell(cell54);
                                  
                                  cell54 = new PdfPCell(new Phrase(String.valueOf(labTotalCashPlusCardAmt), redFont));
                                  cell54.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                                  cell54.setPaddingTop(5f);
                                  cell54.setPaddingBottom(5f);
                                  cell54.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                  cell54.setPaddingRight(10f);
                                  //cell01.setPaddingRight(-3f);
                                  table98.addCell(cell54);
                      
                                  cell54 = new PdfPCell(new Phrase(String.valueOf(totalLabDueAmt1), redFont));
                                  cell54.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                                  cell54.setPaddingTop(5f);
                                  cell54.setPaddingBottom(5f);
                                  cell54.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                  table98.addCell(cell54);
                      
                                  cell1.addElement(table98);
                      
                              
               
                
                
//--------------------------------- VOUCHERS PAYMENT -------------------------------------------------        
                
                PdfPTable table05 = new PdfPTable(1);
                table05.setWidths(new float[] { 8f});
                table05.setSpacingBefore(10);
                table05.setWidthPercentage(100f);
               
                PdfPCell hcell101;
        
                hcell101 = new PdfPCell(new Phrase("VOUCHER PAYMENTS", headFont));
                hcell101.setBorder(Rectangle.NO_BORDER);
                hcell101.setHorizontalAlignment(Element.ALIGN_LEFT);
                hcell101.setPaddingBottom(-10f);
                table05.addCell(hcell101);
                cell1.addElement(table05);
                
                PdfPTable table15 = new PdfPTable(14);
                table15.setWidths(new float[] {4.3f, 6.4f, 4f, 6f, 4f, 2.3f, 3.3f, 3.4f, 3.3f, 3.6f, 3.4f, 3.6f,4.5f,3.1f});
                table15.setSpacingBefore(10);
                table15.setWidthPercentage(100f);
                PdfPCell hcell10;
        
                hcell10 = new PdfPCell(new Phrase("", headFont));
                hcell10.setBorder(Rectangle.NO_BORDER);
                hcell10.setHorizontalAlignment(Element.ALIGN_LEFT);
                table15.addCell(hcell10);
                
                hcell10 = new PdfPCell(new Phrase("", headFont));
                hcell10.setBorder(Rectangle.NO_BORDER);
                hcell10.setHorizontalAlignment(Element.ALIGN_LEFT);
                table15.addCell(hcell10);
                
                hcell10 = new PdfPCell(new Phrase("", headFont));
                hcell10.setBorder(Rectangle.NO_BORDER);
                hcell10.setHorizontalAlignment(Element.ALIGN_LEFT);
                table15.addCell(hcell10);
                
                hcell10 = new PdfPCell(new Phrase("", headFont));
                hcell10.setBorder(Rectangle.NO_BORDER);
                hcell10.setHorizontalAlignment(Element.ALIGN_LEFT);
                table15.addCell(hcell10);
                
                hcell10 = new PdfPCell(new Phrase("", headFont));
                hcell10.setBorder(Rectangle.NO_BORDER);
                hcell10.setHorizontalAlignment(Element.ALIGN_LEFT);
                //hcell10.setPaddingRight(20f);
                table15.addCell(hcell10);
                
                hcell10 = new PdfPCell(new Phrase("", headFont));
                hcell10.setBorder(Rectangle.NO_BORDER);
                hcell10.setHorizontalAlignment(Element.ALIGN_RIGHT);
                hcell10.setPaddingRight(10f);
                table15.addCell(hcell10);
                
                hcell10 = new PdfPCell(new Phrase("", headFont));
                hcell10.setBorder(Rectangle.NO_BORDER);
                hcell10.setHorizontalAlignment(Element.ALIGN_RIGHT);
                hcell10.setPaddingRight(10f);
                table15.addCell(hcell10);
                
                hcell10 = new PdfPCell(new Phrase("", headFont));
                hcell10.setBorder(Rectangle.NO_BORDER);
                hcell10.setHorizontalAlignment(Element.ALIGN_RIGHT);
                hcell10.setPaddingRight(10f);
                table15.addCell(hcell10);
                
                hcell10 = new PdfPCell(new Phrase("", headFont));
                hcell10.setBorder(Rectangle.NO_BORDER);
                hcell10.setHorizontalAlignment(Element.ALIGN_RIGHT);
                hcell10.setPaddingRight(10f);
                table15.addCell(hcell10);
                
                hcell10 = new PdfPCell(new Phrase("", headFont));
                hcell10.setBorder(Rectangle.NO_BORDER);
                hcell10.setHorizontalAlignment(Element.ALIGN_RIGHT);
                hcell10.setPaddingRight(10f);
                table15.addCell(hcell10);
                
                hcell10 = new PdfPCell(new Phrase("", headFont));
                hcell10.setBorder(Rectangle.NO_BORDER);
                hcell10.setHorizontalAlignment(Element.ALIGN_RIGHT);
                hcell10.setPaddingRight(10f);
                table15.addCell(hcell10);
                
                hcell10 = new PdfPCell(new Phrase("", headFont));
                hcell10.setBorder(Rectangle.NO_BORDER);
                hcell10.setHorizontalAlignment(Element.ALIGN_RIGHT);
                hcell10.setPaddingRight(10f);
                table15.addCell(hcell10);
                
                hcell10 = new PdfPCell(new Phrase("", headFont));
                hcell10.setBorder(Rectangle.NO_BORDER);
                hcell10.setHorizontalAlignment(Element.ALIGN_RIGHT);
                hcell10.setPaddingRight(10f);
                table15.addCell(hcell10);
                
                
                hcell10 = new PdfPCell(new Phrase("", headFont));
                hcell10.setBorder(Rectangle.NO_BORDER);
                hcell10.setHorizontalAlignment(Element.ALIGN_RIGHT);
                table15.addCell(hcell10);
                
                long vAmt = 0;
                long vCashAmt = 0;
                long vChqAmt = 0;
                long vCardAmt = 0;
                float totalVAmt = 0;
                float vCashPlusCardAmt=0;
                float vTotalCashPlusCardAmt=0;
                float totalVCashAmt = 0;
                float totalVCardAmt = 0;
                float totalVChqAmt = 0;
                float totalVDueAmt = 0;
                long vDueAmt=0;
                long vRecpAmt=0;
                float totalVRecpAmt =0;
                String vNo=null;
                String vUserId=null;
                
                List<Voucher> voucher = (List<Voucher>) voucherRepository.findUserWiseIpOpDetailed(user.get("fromDate"), user.get("toDate"),uId);
               
                
              /*  for(Voucher p:voucher)
                {
                	//Set<PatientPayment> patientPayments = paymentRepository.findByPatientRegistration(p);
                	
                	voucherAmt
                }
                
                if(patientType.equalsIgnoreCase("OUTPATIENT") && !(typeOfCharge.equalsIgnoreCase("Doctor Fee")||typeOfCharge.equalsIgnoreCase("Reg Fees")))
                {*/
                
             if(!voucher.isEmpty())
             {
                for(Voucher v : voucher)
                {
                    if(v.getPaymentType().equalsIgnoreCase("CASH"))
                    {
                        vAmt = v.getVoucherAmount();
                        vCashAmt = v.getVoucherAmount();
                        vChqAmt = 0;
                        vCardAmt = 0;
                        vRecpAmt = v.getVoucherAmount();
                        vDueAmt = vRecpAmt-vCashAmt;
                        totalVCashAmt+=vCashAmt;
                        totalVAmt+=vAmt;
                        totalVDueAmt+=vDueAmt;
                        totalVRecpAmt+=vRecpAmt;
                        
                    }
                    else if(v.getPaymentType().equalsIgnoreCase("CHQ")||v.getPaymentType().equalsIgnoreCase("Cheque"))
                    {
                        vAmt = v.getVoucherAmount();
                        vChqAmt = v.getVoucherAmount();
                        vCashAmt = 0;
                        vCardAmt = 0;
                        vRecpAmt = v.getVoucherAmount();
                        vDueAmt = vRecpAmt-vChqAmt;
                        totalVChqAmt+=vChqAmt;
                        totalVAmt+=vAmt;
                        totalVDueAmt+=vDueAmt;
                        totalVRecpAmt+=vRecpAmt;
                        
                    }
                    else if(v.getPaymentType().equalsIgnoreCase("DEBIT CARD") || v.getPaymentType().equalsIgnoreCase("CREDIT CARD") || v.getPaymentType().equalsIgnoreCase("CARD"))
                    {
                        vAmt = v.getVoucherAmount();
                        vCardAmt = v.getVoucherAmount();
                        vCashAmt = 0;
                        vChqAmt = 0;
                        vRecpAmt = v.getVoucherAmount();
                        vDueAmt = vRecpAmt-vCardAmt;
                        totalVCardAmt+=vCardAmt;
                        totalVAmt+=vAmt;
                        totalVDueAmt+=vDueAmt;
                        totalVRecpAmt+=vRecpAmt;
                        
                    }
                    else if(v.getPaymentType().equalsIgnoreCase("DUE"))
                    {
                        vAmt = 0;
                        vCashAmt =0;
                        vChqAmt = 0;
                        vCardAmt = 0;
                        vRecpAmt =0;
                        vDueAmt = v.getVoucherAmount();
                        totalVCashAmt+=vCashAmt;
                        totalVAmt+=vAmt;
                        totalVDueAmt+=vDueAmt;
                        totalVRecpAmt+=vRecpAmt;
                        
                    }
                    else if(v.getPaymentType().equalsIgnoreCase("Cash+Card"))
                    {
                        vAmt = v.getVoucherAmount();
                        vCashAmt =0;
                        vChqAmt = 0;
                        vCardAmt = 0;
                        vRecpAmt =vAmt;
                        vDueAmt = 0;
                        vCashPlusCardAmt=v.getVoucherAmount();
                        vTotalCashPlusCardAmt=vCashPlusCardAmt;
                        totalVCashAmt+=vCashAmt;
                        totalVAmt+=vAmt;
                        totalVDueAmt+=vDueAmt;
                        totalVRecpAmt+=vRecpAmt;
                        
                    }
                    
                                PdfPCell cell111;
                
                                cell111 = new PdfPCell(new Phrase("", redFont1));
                                cell111.setBorder(Rectangle.NO_BORDER);
                                cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                                table15.addCell(cell111);
                
                                cell111 = new PdfPCell(new Phrase("", redFont1));
                                cell111.setBorder(Rectangle.NO_BORDER);
                                cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                                //cell111.setPaddingLeft(-30f);
                                table15.addCell(cell111);
                
                                cell111 = new PdfPCell(new Phrase(v.getPaymentNo(), redFont1));
                                cell111.setBorder(Rectangle.NO_BORDER);
                                cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                                //cell111.setPaddingLeft(-30f);
                                table15.addCell(cell111);
                
                                cell111 = new PdfPCell(new Phrase("", redFont));
                                cell111.setBorder(Rectangle.NO_BORDER);
                                cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                                //cell111.setPaddingLeft(-20f);
                                table15.addCell(cell111);
                
                                cell111 = new PdfPCell(new Phrase("-"+String.valueOf(vAmt), redFont1));
                                cell111.setBorder(Rectangle.NO_BORDER);
                                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                cell111.setPaddingRight(10f);
                                //cell111.setPaddingRight(35f);
                                table15.addCell(cell111);
                            
                                cell111 = new PdfPCell(new Phrase("0", redFont));
                                cell111.setBorder(Rectangle.NO_BORDER);
                                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                cell111.setPaddingRight(10f);
                                //cell111.setPaddingRight(20f);
                                table15.addCell(cell111);
                
                                cell111 = new PdfPCell(new Phrase("-"+String.valueOf(vAmt), redFont1));
                                cell111.setBorder(Rectangle.NO_BORDER);
                                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                cell111.setPaddingRight(10f);
                                //cell111.setPaddingRight(15f);
                                table15.addCell(cell111);
                            
                                cell111 = new PdfPCell(new Phrase("0", redFont));
                                cell111.setBorder(Rectangle.NO_BORDER);
                                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                cell111.setPaddingRight(10f);
                                //cell111.setPaddingRight(12f);
                                table15.addCell(cell111);
                
                                cell111 = new PdfPCell(new Phrase("-"+String.valueOf(vRecpAmt), redFont1));
                                cell111.setBorder(Rectangle.NO_BORDER);
                                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                cell111.setPaddingRight(10f);
                                //cell111.setPaddingRight(10f);
                                table15.addCell(cell111);
                            
                                cell111 = new PdfPCell(new Phrase("-"+String.valueOf(vCashAmt), redFont1));
                                cell111.setBorder(Rectangle.NO_BORDER);
                                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                cell111.setPaddingRight(10f);
                                //cell111.setPaddingRight(10f);
                                table15.addCell(cell111);
                
                                cell111 = new PdfPCell(new Phrase("-"+String.valueOf(vChqAmt), redFont1));
                                cell111.setBorder(Rectangle.NO_BORDER);
                                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                cell111.setPaddingRight(10f);
                                table15.addCell(cell111);
                            
                                cell111 = new PdfPCell(new Phrase("-"+String.valueOf(vCardAmt), redFont1));
                                cell111.setBorder(Rectangle.NO_BORDER);
                                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                cell111.setPaddingRight(10f);
                                table15.addCell(cell111);
                                
                                cell111 = new PdfPCell(new Phrase(String.valueOf(vCashPlusCardAmt), redFont1));
                                cell111.setBorder(Rectangle.NO_BORDER);
                                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                cell111.setPaddingRight(10f);
                                table15.addCell(cell111);
                
                                cell111 = new PdfPCell(new Phrase("-"+String.valueOf(vDueAmt), redFont1));
                                cell111.setBorder(Rectangle.NO_BORDER);
                                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                
                                table15.addCell(cell111);
                                
                            
                        }
                }else
                {
                	 PdfPCell cell111;
                     
                     cell111 = new PdfPCell(new Phrase("", redFont1));
                     cell111.setBorder(Rectangle.NO_BORDER);
                     cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                     table15.addCell(cell111);
     
                     cell111 = new PdfPCell(new Phrase("", redFont1));
                     cell111.setBorder(Rectangle.NO_BORDER);
                     cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                     //cell111.setPaddingLeft(-30f);
                     table15.addCell(cell111);
     
                     cell111 = new PdfPCell(new Phrase("", redFont1));
                     cell111.setBorder(Rectangle.NO_BORDER);
                     cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                     //cell111.setPaddingLeft(-30f);
                     table15.addCell(cell111);
     
                     cell111 = new PdfPCell(new Phrase("", redFont));
                     cell111.setBorder(Rectangle.NO_BORDER);
                     cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                     //cell111.setPaddingLeft(-20f);
                     table15.addCell(cell111);
     
                     cell111 = new PdfPCell(new Phrase("0", redFont1));
                     cell111.setBorder(Rectangle.NO_BORDER);
                     cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                     cell111.setPaddingRight(10f);
                     //cell111.setPaddingRight(35f);
                     table15.addCell(cell111);
                 
                     cell111 = new PdfPCell(new Phrase("0", redFont));
                     cell111.setBorder(Rectangle.NO_BORDER);
                     cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                     cell111.setPaddingRight(10f);
                     //cell111.setPaddingRight(20f);
                     table15.addCell(cell111);
     
                     cell111 = new PdfPCell(new Phrase("0", redFont1));
                     cell111.setBorder(Rectangle.NO_BORDER);
                     cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                     cell111.setPaddingRight(10f);
                     //cell111.setPaddingRight(15f);
                     table15.addCell(cell111);
                 
                     cell111 = new PdfPCell(new Phrase("0", redFont));
                     cell111.setBorder(Rectangle.NO_BORDER);
                     cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                     cell111.setPaddingRight(10f);
                     //cell111.setPaddingRight(12f);
                     table15.addCell(cell111);
     
                     cell111 = new PdfPCell(new Phrase("0", redFont1));
                     cell111.setBorder(Rectangle.NO_BORDER);
                     cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                     cell111.setPaddingRight(10f);
                     //cell111.setPaddingRight(10f);
                     table15.addCell(cell111);
                 
                     cell111 = new PdfPCell(new Phrase("0", redFont1));
                     cell111.setBorder(Rectangle.NO_BORDER);
                     cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                     cell111.setPaddingRight(10f);
                     //cell111.setPaddingRight(10f);
                     table15.addCell(cell111);
                     
                     cell111 = new PdfPCell(new Phrase("0", redFont1));
                     cell111.setBorder(Rectangle.NO_BORDER);
                     cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                     cell111.setPaddingRight(10f);
                     table15.addCell(cell111);
                 
                     cell111 = new PdfPCell(new Phrase("0", redFont1));
                     cell111.setBorder(Rectangle.NO_BORDER);
                     cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                     cell111.setPaddingRight(10f);
                     table15.addCell(cell111);
                     
                     cell111 = new PdfPCell(new Phrase("0", redFont1));
                     cell111.setBorder(Rectangle.NO_BORDER);
                     cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                     cell111.setPaddingRight(10f);
                     table15.addCell(cell111);
     
                     cell111 = new PdfPCell(new Phrase("0", redFont1));
                     cell111.setBorder(Rectangle.NO_BORDER);
                     cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                     
                     table15.addCell(cell111);

                }
                    
                
                    cell1.addElement(table15);
                
                    PdfPTable table012 = new PdfPTable(14);
                    table012.setWidths(new float[] {4.3f, 6.4f, 4f, 6f, 4f, 2.3f, 3.3f, 3.4f, 3.3f, 3.6f, 3.4f, 3.6f,4.5f,3.1f});
                    table012.setSpacingBefore(10);
                    table012.setWidthPercentage(100f);
                    
                    PdfPCell cell012;
        
                    cell012 = new PdfPCell(new Phrase("", redFont));
                    cell012.setBorder(Rectangle.NO_BORDER);
                    cell012.setHorizontalAlignment(Element.ALIGN_LEFT);
                    table012.addCell(cell012);
        
                    cell012 = new PdfPCell(new Phrase("", redFont));
                    cell012.setBorder(Rectangle.NO_BORDER);
                    cell012.setHorizontalAlignment(Element.ALIGN_LEFT);
                    //cell012.setPaddingLeft(-30f);
                    table012.addCell(cell012);
        
                    cell012 = new PdfPCell(new Phrase("", redFont));
                    cell012.setBorder(Rectangle.NO_BORDER);
                    cell012.setHorizontalAlignment(Element.ALIGN_LEFT);
                    //cell012.setPaddingLeft(-30f);
                    table012.addCell(cell012);
        
                    cell012 = new PdfPCell(new Phrase("", redFont));
                    cell012.setBorder(Rectangle.NO_BORDER);
                    cell012.setHorizontalAlignment(Element.ALIGN_LEFT);
                    //cell012.setPaddingLeft(-30f);
                    table012.addCell(cell012);
        
                    cell012 = new PdfPCell(new Phrase(String.valueOf(totalVAmt), redFont));
                    cell012.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                    cell012.setPaddingTop(5f);
                    cell012.setPaddingBottom(5f);
                    cell012.setHorizontalAlignment(Element.ALIGN_RIGHT);
                    cell012.setPaddingRight(10f);
                    //cell012.setPaddingRight(10f);
                    table012.addCell(cell012);
                
                    cell012 = new PdfPCell(new Phrase("0", redFont));
                    cell012.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                    cell012.setPaddingTop(5f);
                    cell012.setPaddingBottom(5f);
                    cell012.setHorizontalAlignment(Element.ALIGN_RIGHT);
                    cell012.setPaddingRight(10f);
                    //cell012.setPaddingRight(-15f);
                    table012.addCell(cell012);
        
                    cell012 = new PdfPCell(new Phrase(String.valueOf(totalVAmt), redFont));
                    cell012.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                    cell012.setPaddingTop(5f);
                    cell012.setPaddingBottom(5f);
                    cell012.setHorizontalAlignment(Element.ALIGN_RIGHT);
                    cell012.setPaddingRight(10f);
                    //cell012.setPaddingRight(-20f);
                    table012.addCell(cell012);
                
                    cell012 = new PdfPCell(new Phrase("0", redFont));
                    cell012.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                    cell012.setPaddingTop(5f);
                    cell012.setPaddingBottom(5f);
                    cell012.setHorizontalAlignment(Element.ALIGN_RIGHT);
                    cell012.setPaddingRight(10f);
                    //cell012.setPaddingRight(-10f);
                    table012.addCell(cell012);
        
                    cell012 = new PdfPCell(new Phrase(String.valueOf(totalVRecpAmt), redFont));
                    cell012.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                    cell012.setPaddingTop(5f);
                    cell012.setPaddingBottom(5f);
                    cell012.setHorizontalAlignment(Element.ALIGN_RIGHT);
                    cell012.setPaddingRight(10f);
                    //cell012.setPaddingRight(-17f);
                    table012.addCell(cell012);
                
                    cell012 = new PdfPCell(new Phrase(String.valueOf(totalVCashAmt), redFont));
                    cell012.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                    cell012.setPaddingTop(5f);
                    cell012.setPaddingBottom(5f);
                    cell012.setHorizontalAlignment(Element.ALIGN_RIGHT);
                    cell012.setPaddingRight(10f);
                    //cell012.setPaddingRight(-13f);
                    table012.addCell(cell012);
        
                    cell012 = new PdfPCell(new Phrase(String.valueOf(totalVChqAmt), redFont));
                    cell012.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                    cell012.setPaddingTop(5f);
                    cell012.setPaddingBottom(5f);
                    cell012.setHorizontalAlignment(Element.ALIGN_RIGHT);
                    cell012.setPaddingRight(10f);
                    //cell012.setPaddingRight(-7f);
                    table012.addCell(cell012);
                
                    cell012 = new PdfPCell(new Phrase(String.valueOf(totalVCardAmt), redFont));
                    cell012.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                    cell012.setPaddingTop(5f);
                    cell012.setPaddingBottom(5f);
                    cell012.setHorizontalAlignment(Element.ALIGN_RIGHT);
                    cell012.setPaddingRight(10f);
                    //cell012.setPaddingRight(-3f);
                    table012.addCell(cell012);
        
                    cell012 = new PdfPCell(new Phrase(String.valueOf(vTotalCashPlusCardAmt), redFont));
                    cell012.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                    cell012.setPaddingTop(5f);
                    cell012.setPaddingBottom(5f);
                    cell012.setHorizontalAlignment(Element.ALIGN_RIGHT);
                    cell012.setPaddingRight(10f);
                    //cell012.setPaddingRight(-3f);
                    table012.addCell(cell012);
        
                    
                    cell012 = new PdfPCell(new Phrase(String.valueOf(totalVDueAmt), redFont));
                    cell012.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                    cell012.setPaddingTop(5f);
                    cell012.setPaddingBottom(5f);
                    cell012.setHorizontalAlignment(Element.ALIGN_RIGHT);
                    
                    table012.addCell(cell012);
        
                    cell1.addElement(table012);
                    float totalGAmt = ((totalFeeAmt1+totalFeeAmt+totalFeeAmtReg+totalIpFeeAmt1+totalLabFeeAmt1)-totalVAmt);
                    float totalNetAmt = ((totalFeeAmt1+totalFeeAmt+totalFeeAmtReg+totalIpFeeAmt1+totalLabFeeAmt1)-totalVAmt);
                    float totalAdvAmt = (totalIpAdvAmt+totalAdvcAmt+totalOpAdvAmt+totalLabAdvAmt+totalAdvcAmtReg);
                    float totalRAmt = ((totalRecAmt1+totalRecpAmt+totalRecpAmtReg+totalIpRecAmt1+totalLabRecAmt1)-totalVRecpAmt);
                    float totalCAmt = ((totalCashAmt1+totalCashAmt+totalCashAmtReg+totalIpCashAmt1+totalLabCashAmt1)-totalVCashAmt);
                    float totalChAmt = ((totalChqAmt1+totalChqAmt+totalChqAmtReg+totalIpChqAmt1+totalLabChqAmt1)-totalVChqAmt);
                    float totalCrdAmt = ((totalCardAmt1+totalCardAmt+totalCardAmtReg+totalIpCardAmt1+totalLabCardAmt1)-totalVCardAmt);
                    float totalCashPlusCardAmount=((totalCashPlusCardDocAmt+totalCashPlusCardRegAmt+labTotalCashPlusCardAmt+ipTotalCashPlusCardAmt+totalcashPlusCardAmt)-vTotalCashPlusCardAmt);
                    float totalDAmt = ((totalDueAmt1+totalDueAmt+totalDueAmtReg+totalIpDueAmt1+totalLabDueAmt1)-totalVDueAmt);
                    
            
                PdfPTable table07 = new PdfPTable(14);
                table07.setWidths(new float[] {4.3f, 6.4f, 4f, 6f, 4f, 2.3f, 3.3f, 3.4f, 3.3f, 3.6f, 3.4f, 3.6f,4.5f,3.1f});
                table07.setSpacingBefore(10);
                table07.setWidthPercentage(100f);
                
                PdfPCell cell02;
    
                cell02 = new PdfPCell(new Phrase("", redFont));
                cell02.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell02.setPaddingTop(5f);
                cell02.setPaddingBottom(5f);
                cell02.setHorizontalAlignment(Element.ALIGN_LEFT);
                table07.addCell(cell02);
    
                cell02 = new PdfPCell(new Phrase("Total Amount   :", headFont));
                cell02.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell02.setPaddingTop(5f);
                cell02.setPaddingBottom(5f);
                cell02.setHorizontalAlignment(Element.ALIGN_LEFT);
                //cell02.setPaddingLeft(-30f);
                table07.addCell(cell02);
    
                cell02 = new PdfPCell(new Phrase("", redFont));
                cell02.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell02.setPaddingTop(5f);
                cell02.setPaddingBottom(5f);
                cell02.setHorizontalAlignment(Element.ALIGN_LEFT);
                //cell02.setPaddingLeft(-30f);
                table07.addCell(cell02);
    
                cell02 = new PdfPCell(new Phrase("", redFont));
                cell02.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell02.setPaddingTop(5f);
                cell02.setPaddingBottom(5f);
                cell02.setHorizontalAlignment(Element.ALIGN_LEFT);
                //cell02.setPaddingLeft(-30f);
                table07.addCell(cell02);
    
                cell02 = new PdfPCell(new Phrase(String.valueOf(totalGAmt), redFont));
                cell02.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell02.setPaddingTop(5f);
                cell02.setPaddingBottom(5f);
                cell02.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell02.setPaddingRight(10f);
                //cell02.setPaddingRight(3f);
                table07.addCell(cell02);
            
                cell02 = new PdfPCell(new Phrase("0", redFont));
                cell02.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell02.setPaddingTop(5f);
                cell02.setPaddingBottom(5f);
                cell02.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell02.setPaddingRight(10f);
                //cell02.setPaddingRight(-25f);
                table07.addCell(cell02);
    
                cell02 = new PdfPCell(new Phrase(String.valueOf(totalNetAmt), redFont));
                cell02.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell02.setPaddingTop(5f);
                cell02.setPaddingBottom(5f);
                cell02.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell02.setPaddingRight(10f);
                //cell02.setPaddingRight(-25f);
                table07.addCell(cell02);
            
                cell02 = new PdfPCell(new Phrase(String.valueOf(totalAdvAmt), redFont));
                cell02.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell02.setPaddingTop(5f);
                cell02.setPaddingBottom(5f);
                cell02.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell02.setPaddingRight(10f);
                //cell02.setPaddingRight(-16f);
                table07.addCell(cell02);
    
                cell02 = new PdfPCell(new Phrase(String.valueOf(totalRAmt), redFont));
                //cell02.setBorder(Rectangle.NO_BORDER);
                cell02.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell02.setPaddingTop(5f);
                cell02.setPaddingBottom(5f);
                cell02.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell02.setPaddingRight(10f);
                //cell02.setPaddingRight(-17f);
                table07.addCell(cell02);
            
                cell02 = new PdfPCell(new Phrase(String.valueOf(totalCAmt), redFont));
                //cell02.setBorder(Rectangle.NO_BORDER);
                cell02.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell02.setPaddingTop(5f);
                cell02.setPaddingBottom(5f);
                cell02.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell02.setPaddingRight(10f);
                //cell02.setPaddingRight(-13f);
                table07.addCell(cell02);
    
                cell02 = new PdfPCell(new Phrase(String.valueOf(totalChAmt), redFont));
                //cell02.setBorder(Rectangle.NO_BORDER);
                cell02.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell02.setPaddingTop(5f);
                cell02.setPaddingBottom(5f);
                cell02.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell02.setPaddingRight(10f);
                //cell02.setPaddingRight(-7f);
                table07.addCell(cell02);
            
                cell02 = new PdfPCell(new Phrase(String.valueOf(totalCrdAmt), redFont));
                //cell02.setBorder(Rectangle.NO_BORDER);
                cell02.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell02.setPaddingTop(5f);
                cell02.setPaddingBottom(5f);
                cell02.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell02.setPaddingRight(10f);
                //cell02.setPaddingRight(-3f);
                table07.addCell(cell02);
                
                cell02 = new PdfPCell(new Phrase(String.valueOf(totalCashPlusCardAmount), redFont));
                //cell02.setBorder(Rectangle.NO_BORDER);
                cell02.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell02.setPaddingTop(5f);
                cell02.setPaddingBottom(5f);
                cell02.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell02.setPaddingRight(10f);
                //cell02.setPaddingRight(-3f);
                table07.addCell(cell02);
    
                cell02 = new PdfPCell(new Phrase(String.valueOf(totalDAmt), redFont));
                //cell02.setBorder(Rectangle.NO_BORDER);
                cell02.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell02.setPaddingTop(5f);
                cell02.setPaddingBottom(5f);
                cell02.setHorizontalAlignment(Element.ALIGN_RIGHT);
                table07.addCell(cell02);
                
                cell1.addElement(table07);
                
                PdfPTable table071 = new PdfPTable(14);
                table071.setWidths(new float[] {4.3f, 6.4f, 4f, 6f, 4f, 2.3f, 3.3f, 3.4f, 3.3f, 3.6f, 3.4f, 3.6f,4.5f,3.1f});
                table071.setSpacingBefore(10);
                table071.setWidthPercentage(100f);
                
                PdfPCell cell021;
    
                cell021 = new PdfPCell(new Phrase("", redFont));
                //cell02.setBorder(Rectangle.NO_BORDER);
                cell021.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell021.setPaddingTop(5f);
                cell021.setPaddingBottom(5f);
                cell021.setHorizontalAlignment(Element.ALIGN_LEFT);
                table071.addCell(cell021);
    
                cell021 = new PdfPCell(new Phrase("Grand Total     :", headFont));
                //cell02.setBorder(Rectangle.NO_BORDER);
                cell021.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell021.setPaddingTop(5f);
                cell021.setPaddingBottom(5f);
                cell021.setHorizontalAlignment(Element.ALIGN_LEFT);
                //cell021.setPaddingLeft(-30f);
                table071.addCell(cell021);
    
                cell021 = new PdfPCell(new Phrase("", redFont));
                //cell02.setBorder(Rectangle.NO_BORDER);
                cell021.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell021.setPaddingTop(5f);
                cell021.setPaddingBottom(5f);
                cell021.setHorizontalAlignment(Element.ALIGN_LEFT);
                //cell021.setPaddingLeft(-30f);
                table071.addCell(cell021);
    
                cell021 = new PdfPCell(new Phrase("", redFont));
                //cell02.setBorder(Rectangle.NO_BORDER);
                cell021.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell021.setPaddingTop(5f);
                cell021.setPaddingBottom(5f);
                cell021.setHorizontalAlignment(Element.ALIGN_LEFT);
                //cell021.setPaddingLeft(-30f);
                table071.addCell(cell021);
    
                cell021 = new PdfPCell(new Phrase(String.valueOf(totalGAmt), redFont));
                //cell02.setBorder(Rectangle.NO_BORDER);
                cell021.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell021.setPaddingTop(5f);
                cell021.setPaddingBottom(5f);
                cell021.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell021.setPaddingRight(10f);
                //cell021.setPaddingRight(3f);
                table071.addCell(cell021);
            
                cell021 = new PdfPCell(new Phrase("0", redFont));
                //cell02.setBorder(Rectangle.NO_BORDER);
                cell021.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell021.setPaddingTop(5f);
                cell021.setPaddingBottom(5f);
                cell021.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell021.setPaddingRight(10f);
                //cell021.setPaddingRight(-25f);
                table071.addCell(cell021);
    
                cell021 = new PdfPCell(new Phrase(String.valueOf(totalNetAmt), redFont));
                //cell02.setBorder(Rectangle.NO_BORDER);
                cell021.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell021.setPaddingTop(5f);
                cell021.setPaddingBottom(5f);
                cell021.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell021.setPaddingRight(10f);
                //cell021.setPaddingRight(-25f);
                table071.addCell(cell021);
            
                cell021 = new PdfPCell(new Phrase(String.valueOf(totalAdvAmt), redFont));
                //cell02.setBorder(Rectangle.NO_BORDER);
                cell021.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell021.setPaddingTop(5f);
                cell021.setPaddingBottom(5f);
                cell021.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell021.setPaddingRight(10f);
                //cell021.setPaddingRight(-16f);
                table071.addCell(cell021);
    
                cell021 = new PdfPCell(new Phrase(String.valueOf(totalRAmt), redFont));
                //cell02.setBorder(Rectangle.NO_BORDER);
                cell021.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell021.setPaddingTop(5f);
                cell021.setPaddingBottom(5f);
                cell021.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell021.setPaddingRight(10f);
                //cell021.setPaddingRight(-17f);
                table071.addCell(cell021);
            
                cell021 = new PdfPCell(new Phrase(String.valueOf(totalCAmt), redFont));
                //cell02.setBorder(Rectangle.NO_BORDER);
                cell021.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell021.setPaddingTop(5f);
                cell021.setPaddingBottom(5f);
                cell021.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell021.setPaddingRight(10f);
                //cell021.setPaddingRight(-13f);
                table071.addCell(cell021);
    
                cell021 = new PdfPCell(new Phrase(String.valueOf(totalChAmt), redFont));
                //cell02.setBorder(Rectangle.NO_BORDER);
                cell021.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell021.setPaddingTop(5f);
                cell021.setPaddingBottom(5f);
                cell021.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell021.setPaddingRight(10f);
                //cell021.setPaddingRight(-7f);
                table071.addCell(cell021);
            
                cell021 = new PdfPCell(new Phrase(String.valueOf(totalCrdAmt), redFont));
                //cell02.setBorder(Rectangle.NO_BORDER);
                cell021.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell021.setPaddingTop(5f);
                cell021.setPaddingBottom(5f);
                cell021.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell021.setPaddingRight(10f);
                //cell021.setPaddingRight(-3f);
                table071.addCell(cell021);
    
                
                cell021 = new PdfPCell(new Phrase(String.valueOf(totalCashPlusCardAmount), redFont));
                //cell02.setBorder(Rectangle.NO_BORDER);
                cell021.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell021.setPaddingTop(5f);
                cell021.setPaddingBottom(5f);
                cell021.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell021.setPaddingRight(10f);
                //cell021.setPaddingRight(-3f);
                table071.addCell(cell021);
    
                cell021 = new PdfPCell(new Phrase(String.valueOf(totalDAmt), redFont));
                //cell02.setBorder(Rectangle.NO_BORDER);
                cell021.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell021.setPaddingTop(5f);
                cell021.setPaddingBottom(5f);
                cell021.setHorizontalAlignment(Element.ALIGN_RIGHT);
                
                table071.addCell(cell021);
                
                cell1.addElement(table071);

                //for cash + card calculations--------------------------------------------------------
                
                
                PdfPTable table051 = new PdfPTable(1);
                table051.setWidths(new float[] { 8f});
                table051.setSpacingBefore(10);
                table051.setWidthPercentage(100f);
               
                PdfPCell hcell1011;
        
                hcell1011 = new PdfPCell(new Phrase("CASH PLUS CARD PAYMENTS", headFont));
                hcell1011.setBorder(Rectangle.NO_BORDER);
                
                hcell1011.setHorizontalAlignment(Element.ALIGN_LEFT);
                hcell1011.setPaddingBottom(1f);
                table051.addCell(hcell1011);
                cell1.addElement(table051);
                
                PdfPTable table151 = new PdfPTable(14);
                table151.setWidths(new float[] {4.8f, 6.4f, 6f, 6f, 4f, 4f, 3.3f, 3.4f, 3.3f, 3.6f, 3.4f, 3.6f,4.5f,3.1f});
                table151.setSpacingBefore(10);
                table151.setWidthPercentage(100f);
                PdfPCell hcell176;
        
                hcell176 = new PdfPCell(new Phrase("Umr No", redFont));
                hcell176.setBorder(Rectangle.NO_BORDER);
                hcell176.setBackgroundColor(BaseColor.GRAY);
                hcell176.setPaddingBottom(5f);
                hcell176.setHorizontalAlignment(Element.ALIGN_LEFT);
                table151.addCell(hcell176);
                
                hcell176 = new PdfPCell(new Phrase("Bill No", redFont));
                hcell176.setBorder(Rectangle.NO_BORDER);
                hcell176.setBackgroundColor(BaseColor.GRAY);
                hcell176.setPaddingBottom(5f);
                hcell176.setHorizontalAlignment(Element.ALIGN_LEFT);
                table151.addCell(hcell176);
                
                hcell176 = new PdfPCell(new Phrase("Cash Amount", redFont));
                hcell176.setBorder(Rectangle.NO_BORDER);
                hcell176.setBackgroundColor(BaseColor.GRAY);
                hcell176.setPaddingBottom(5f);
                hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
                hcell176.setPaddingRight(10f);
                table151.addCell(hcell176);
                
                hcell176 = new PdfPCell(new Phrase("Card Amount", redFont));
                hcell176.setBorder(Rectangle.NO_BORDER);
                hcell176.setBackgroundColor(BaseColor.GRAY);
                hcell176.setPaddingBottom(5f);
                hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
                hcell176.setPaddingRight(10f);
                table151.addCell(hcell176);
                
                hcell176 = new PdfPCell(new Phrase(" ", redFont));
                hcell176.setBorder(Rectangle.NO_BORDER);
                hcell176.setBackgroundColor(BaseColor.GRAY);
                hcell176.setPaddingBottom(5f);
                hcell176.setHorizontalAlignment(Element.ALIGN_LEFT);
                //hcell10.setPaddingRight(20f);
                table151.addCell(hcell176);
                
                hcell176 = new PdfPCell(new Phrase(" ", redFont));
                hcell176.setBorder(Rectangle.NO_BORDER);
                hcell176.setBackgroundColor(BaseColor.GRAY);
                hcell176.setPaddingBottom(5f);
                hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
                hcell176.setPaddingRight(10f);
                table151.addCell(hcell176);
                
                hcell176 = new PdfPCell(new Phrase(" ", redFont));
                hcell176.setBorder(Rectangle.NO_BORDER);
                hcell176.setBackgroundColor(BaseColor.GRAY);
                hcell176.setPaddingBottom(5f);
                hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
                hcell176.setPaddingRight(10f);
                table151.addCell(hcell176);
                
                hcell176 = new PdfPCell(new Phrase(" ", redFont));
                hcell176.setBorder(Rectangle.NO_BORDER);
                hcell176.setBackgroundColor(BaseColor.GRAY);
                hcell176.setPaddingBottom(5f);
                hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
                hcell176.setPaddingRight(10f);
                table151.addCell(hcell176);
                
                hcell176 = new PdfPCell(new Phrase(" ", redFont));
                hcell176.setBorder(Rectangle.NO_BORDER);
                hcell176.setBackgroundColor(BaseColor.GRAY);
                hcell176.setPaddingBottom(5f);
                hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
                hcell176.setPaddingRight(10f);
                table151.addCell(hcell176);
                
                hcell176 = new PdfPCell(new Phrase(" ", redFont));
                hcell176.setBorder(Rectangle.NO_BORDER);
                hcell176.setBackgroundColor(BaseColor.GRAY);
                hcell176.setPaddingBottom(5f);
                hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
                hcell176.setPaddingRight(10f);
                table151.addCell(hcell176);
                
                hcell176 = new PdfPCell(new Phrase(" ", redFont));
                hcell176.setBorder(Rectangle.NO_BORDER);
                hcell176.setBackgroundColor(BaseColor.GRAY);
                hcell176.setPaddingBottom(5f);
                hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
                hcell176.setPaddingRight(10f);
                table151.addCell(hcell176);
                
                hcell176 = new PdfPCell(new Phrase(" ", redFont));
                hcell176.setBorder(Rectangle.NO_BORDER);
                hcell176.setBackgroundColor(BaseColor.GRAY);
                hcell176.setPaddingBottom(5f);
                hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
                hcell176.setPaddingRight(10f);
                table151.addCell(hcell176);
                
                hcell176 = new PdfPCell(new Phrase(" ", redFont));
                hcell176.setBorder(Rectangle.NO_BORDER);
                hcell176.setBackgroundColor(BaseColor.GRAY);
                hcell176.setPaddingBottom(5f);
                hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
                hcell176.setPaddingRight(10f);
                table151.addCell(hcell176);
                
                
                hcell176 = new PdfPCell(new Phrase(" ", redFont));
                hcell176.setBorder(Rectangle.NO_BORDER);
                hcell176.setBackgroundColor(BaseColor.GRAY);
                hcell176.setPaddingBottom(5f);
                hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
                table151.addCell(hcell176);
                
                
                
                //-----------------------------------------------
                
                String billNo=null;
                float cardAmount=0;
                float cardAmount1=0;
                float cashAmount=0;
                float cashAmount1=0;
                float totalCardAmount=0;
                float totalCardAmount1=0;
                float totalCashAmount=0;
                float totalCashAmount1=0;
                String umr=null;
                
                PdfPTable table1511 = new PdfPTable(14);
                table1511.setWidths(new float[] {9.9f, 3.7f, 6f, 6f, 5f, 5f, 3.3f, 3.4f, 3.3f, 3.6f, 3.4f, 3.6f,4.5f,3.1f});
                table1511.setSpacingBefore(10);
                table1511.setWidthPercentage(100f);
                PdfPCell cell111;
                
                
                List<Map<String, String>> show = new ArrayList<>();
	        	List<String> info = new ArrayList<>();
	        	Map<String, String> displayInfo = null; 
	        	
                
                
                if(!patientRegistration.isEmpty())
                {
                for (PatientRegistration pReg : patientRegistration) 
	            {
	            	pId = pReg.getRegId();

	            	displayInfo = new HashMap<>();
	            	List<PatientPayment> patientPayments = paymentRepository.findByPatientRegistrationId(pId);
                
				              if(!patientPayments.isEmpty())
				              {
						                for(PatientPayment payment:patientPayments)
						                {
						                	billNo=payment.getBillNo();
						                	CashPlusCard cashNCard=cashPlusCardRepository.findByBillNo(billNo);
						                
									                	if(cashNCard!=null && payment.getModeOfPaymant().equalsIgnoreCase("cash+card"))
									                	{
									                		umr=pReg.getPatientDetails().getUmr();
									                	
									                		if(!info.contains(billNo))
									                		{
											                	
											                
											                		
											                		if(billNo!=null) 
											                		{
														                    if(cashNCard.getCardAmount()!=0)
														                    {
														                    	cardAmount=cashNCard.getCardAmount();
														                    	totalCardAmount+=cardAmount;
														                        
														                    }
														                   if(cashNCard.getCashAmount()!=0)
														                    {
														                       cashAmount=cashNCard.getCashAmount();
														                       totalCashAmount+=cashAmount;
														                        
														                    }
														                   // cashAmount1+=cashAmount;
														                   // cardAmount1+=cardAmount;
														                    displayInfo.put("cashAmount", String.valueOf(cashAmount));
							    	 	    		     	                displayInfo.put("cardAmount", String.valueOf(cardAmount));
											                		} 
											                		
						
											                	
											                	info.add(billNo);
											                	
											                	displayInfo.put("umr", String.valueOf(umr));
				    	 	    		     	                displayInfo.put("billNo", String.valueOf(billNo));
				    	 	    		     	             
				    	 	    		     	              show.add(displayInfo);
				    	 	    		     	            
									                		}
						  
									                		
									                	}
									                	           	
						                }
						                
				              
				              }
				             
	            }
                
              //  totalCashAmount1+=totalCashAmount;
              //  totalCardAmount1+=totalCardAmount;
                for (Map<String, String> show1 : show) { 
                
                	  PdfPCell cell36;
		                
                      cell36 = new PdfPCell(new Phrase(String.valueOf( show1.get("umr")), redFont));
                      cell36.setBorder(Rectangle.NO_BORDER);
                      cell36.setHorizontalAlignment(Element.ALIGN_LEFT);
                      table151.addCell(cell36);
      
                      cell36 = new PdfPCell(new Phrase(String.valueOf( show1.get("billNo")), redFont));
                      cell36.setBorder(Rectangle.NO_BORDER);
                      cell36.setHorizontalAlignment(Element.ALIGN_LEFT);
                      //cell111.setPaddingLeft(-30f);
                      table151.addCell(cell36);
      
                      cell36 = new PdfPCell(new Phrase(String.valueOf( show1.get("cashAmount")), redFont));
                      cell36.setBorder(Rectangle.NO_BORDER);
                      cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                      cell36.setPaddingRight(10f);
                      //cell111.setPaddingLeft(-30f);
                      table151.addCell(cell36);
      
                      cell36 = new PdfPCell(new Phrase(String.valueOf( show1.get("cardAmount")), redFont));
                      cell36.setBorder(Rectangle.NO_BORDER);
                      cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                      cell36.setPaddingRight(10f);
                      //cell111.setPaddingLeft(-20f);
                      table151.addCell(cell36);
      
                      cell36 = new PdfPCell(new Phrase("", redFont));
                      cell36.setBorder(Rectangle.NO_BORDER);
                      cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                      cell36.setPaddingRight(10f);
                      //cell111.setPaddingRight(35f);
                      table151.addCell(cell36);
                  
                      cell36 = new PdfPCell(new Phrase("", redFont));
                      cell36.setBorder(Rectangle.NO_BORDER);
                      cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                      cell36.setPaddingRight(10f);
                      //cell111.setPaddingRight(20f);
                      table151.addCell(cell36);
      
                      cell36 = new PdfPCell(new Phrase("", redFont));
                      cell36.setBorder(Rectangle.NO_BORDER);
                      cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                      cell36.setPaddingRight(10f);
                      //cell111.setPaddingRight(15f);
                      table151.addCell(cell36);
                  
                      cell36 = new PdfPCell(new Phrase("", redFont));
                      cell36.setBorder(Rectangle.NO_BORDER);
                      cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                      cell36.setPaddingRight(10f);
                      //cell111.setPaddingRight(12f);
                      table151.addCell(cell36);
      
                      cell36 = new PdfPCell(new Phrase("", redFont));
                      cell36.setBorder(Rectangle.NO_BORDER);
                      cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                      cell36.setPaddingRight(10f);
                      //cell111.setPaddingRight(10f);
                      table151.addCell(cell36);
                  
                      cell36 = new PdfPCell(new Phrase("", redFont));
                      cell36.setBorder(Rectangle.NO_BORDER);
                      cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                      cell36.setPaddingRight(10f);
                      //cell111.setPaddingRight(10f);
                      table151.addCell(cell36);
      
                      cell36 = new PdfPCell(new Phrase("", redFont));
                      cell36.setBorder(Rectangle.NO_BORDER);
                      cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                      cell36.setPaddingRight(10f);
                      table151.addCell(cell36);
                  
                      cell36 = new PdfPCell(new Phrase("", redFont));
                      cell36.setBorder(Rectangle.NO_BORDER);
                      cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                      cell36.setPaddingRight(10f);
                      table151.addCell(cell36);
                      
                      cell36 = new PdfPCell(new Phrase("", redFont));
                      cell36.setBorder(Rectangle.NO_BORDER);
                      cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                      cell36.setPaddingRight(10f);
                      table151.addCell(cell36);
      
                      cell36 = new PdfPCell(new Phrase("", redFont));
                      cell36.setBorder(Rectangle.NO_BORDER);
                      cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                      
                      table151.addCell(cell36);
                
                }
                }
                else
                {
                	 PdfPCell cell36;
		                
                     cell36 = new PdfPCell(new Phrase(String.valueOf(""), redFont));
                     cell36.setBorder(Rectangle.NO_BORDER);
                     cell36.setHorizontalAlignment(Element.ALIGN_LEFT);
                     table151.addCell(cell36);
     
                     cell36 = new PdfPCell(new Phrase(String.valueOf(""), redFont1));
                     cell36.setBorder(Rectangle.NO_BORDER);
                     cell36.setHorizontalAlignment(Element.ALIGN_LEFT);
                     //cell111.setPaddingLeft(-30f);
                     table151.addCell(cell36);
     
                     cell36 = new PdfPCell(new Phrase(String.valueOf(""), redFont));
                     cell36.setBorder(Rectangle.NO_BORDER);
                     cell36.setHorizontalAlignment(Element.ALIGN_LEFT);
                     //cell111.setPaddingLeft(-30f);
                     table151.addCell(cell36);
     
                     cell36 = new PdfPCell(new Phrase(String.valueOf(""), redFont));
                     cell36.setBorder(Rectangle.NO_BORDER);
                     cell36.setHorizontalAlignment(Element.ALIGN_LEFT);
                     //cell111.setPaddingLeft(-20f);
                     table151.addCell(cell36);
     
                     cell36 = new PdfPCell(new Phrase("", redFont));
                     cell36.setBorder(Rectangle.NO_BORDER);
                     cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                     cell36.setPaddingRight(10f);
                     //cell111.setPaddingRight(35f);
                     table151.addCell(cell36);
                 
                     cell36 = new PdfPCell(new Phrase("", redFont));
                     cell36.setBorder(Rectangle.NO_BORDER);
                     cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                     cell36.setPaddingRight(10f);
                     //cell111.setPaddingRight(20f);
                     table151.addCell(cell36);
     
                     cell36 = new PdfPCell(new Phrase("", redFont));
                     cell36.setBorder(Rectangle.NO_BORDER);
                     cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                     cell36.setPaddingRight(10f);
                     //cell111.setPaddingRight(15f);
                     table151.addCell(cell36);
                 
                     cell36 = new PdfPCell(new Phrase("", redFont));
                     cell36.setBorder(Rectangle.NO_BORDER);
                     cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                     cell36.setPaddingRight(10f);
                     //cell111.setPaddingRight(12f);
                     table151.addCell(cell36);
     
                     cell36 = new PdfPCell(new Phrase("", redFont));
                     cell36.setBorder(Rectangle.NO_BORDER);
                     cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                     cell36.setPaddingRight(10f);
                     //cell111.setPaddingRight(10f);
                     table151.addCell(cell36);
                 
                     cell36 = new PdfPCell(new Phrase("", redFont));
                     cell36.setBorder(Rectangle.NO_BORDER);
                     cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                     cell36.setPaddingRight(10f);
                     //cell111.setPaddingRight(10f);
                     table151.addCell(cell36);
     
                     cell36 = new PdfPCell(new Phrase("", redFont));
                     cell36.setBorder(Rectangle.NO_BORDER);
                     cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                     cell36.setPaddingRight(10f);
                     table151.addCell(cell36);
                 
                     cell36 = new PdfPCell(new Phrase("", redFont));
                     cell36.setBorder(Rectangle.NO_BORDER);
                     cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                     cell36.setPaddingRight(10f);
                     table151.addCell(cell36);
                     
                     cell36 = new PdfPCell(new Phrase("", redFont));
                     cell36.setBorder(Rectangle.NO_BORDER);
                     cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                     cell36.setPaddingRight(10f);
                     table151.addCell(cell36);
     
                     cell36 = new PdfPCell(new Phrase("", redFont));
                     cell36.setBorder(Rectangle.NO_BORDER);
                     cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                     
                     table151.addCell(cell36);
                }
                
              
                
                cell111 = new PdfPCell(new Phrase("Total Cash+ Card Amount :", headFont));
                cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell111.setPaddingBottom(3f);
                cell111.setPaddingTop(3f);
                cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                table1511.addCell(cell111);

                cell111 = new PdfPCell(new Phrase("", redFont));
                cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell111.setPaddingBottom(3f);
                cell111.setPaddingTop(3f);
                cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                //cell111.setPaddingLeft(-30f);
                table1511.addCell(cell111);

                cell111 = new PdfPCell(new Phrase(String.valueOf(totalCashAmount), redFont));
                cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell111.setPaddingBottom(3f);
                cell111.setPaddingTop(3f);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell111.setPaddingRight(22f);
                cell111.setPaddingBottom(3f);
                cell111.setPaddingTop(3f);

                //cell111.setPaddingLeft(-30f);
                table1511.addCell(cell111);

                cell111 = new PdfPCell(new Phrase(String.valueOf(totalCardAmount), redFont));

                cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell111.setPaddingBottom(3f);
                cell111.setPaddingTop(3f);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell111.setPaddingRight(19f);
                //cell111.setPaddingLeft(-20f);
                table1511.addCell(cell111);

                cell111 = new PdfPCell(new Phrase("", redFont));
                cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell111.setPaddingBottom(3f);
                cell111.setPaddingTop(3f);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell111.setPaddingRight(10f);
                //cell111.setPaddingRight(35f);
                table1511.addCell(cell111);
            
                cell111 = new PdfPCell(new Phrase("", redFont));
                cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell111.setPaddingBottom(3f);
                cell111.setPaddingTop(3f);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell111.setPaddingRight(10f);
                //cell111.setPaddingRight(20f);
                table1511.addCell(cell111);

                cell111 = new PdfPCell(new Phrase("", redFont));
                cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell111.setPaddingBottom(3f);
                cell111.setPaddingTop(3f);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell111.setPaddingRight(10f);
                //cell111.setPaddingRight(15f);
                table1511.addCell(cell111);
            
                cell111 = new PdfPCell(new Phrase("", redFont));
                cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell111.setPaddingBottom(3f);
                cell111.setPaddingTop(3f);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell111.setPaddingRight(10f);
                //cell111.setPaddingRight(12f);
                table1511.addCell(cell111);

                cell111 = new PdfPCell(new Phrase("", redFont));
                cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell111.setPaddingBottom(3f);
                cell111.setPaddingTop(3f);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell111.setPaddingRight(10f);
                //cell111.setPaddingRight(10f);
                table1511.addCell(cell111);
            
                cell111 = new PdfPCell(new Phrase("", redFont));
                cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell111.setPaddingBottom(3f);
                cell111.setPaddingTop(3f);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell111.setPaddingRight(10f);
                //cell111.setPaddingRight(10f);
                table1511.addCell(cell111);

                cell111 = new PdfPCell(new Phrase("", redFont));
                cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell111.setPaddingBottom(3f);
                cell111.setPaddingTop(3f);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell111.setPaddingRight(10f);
                table1511.addCell(cell111);
            
                cell111 = new PdfPCell(new Phrase("", redFont));
                cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell111.setPaddingBottom(3f);
                cell111.setPaddingTop(3f);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell111.setPaddingRight(10f);
                table1511.addCell(cell111);
                
                cell111 = new PdfPCell(new Phrase("", redFont));
                cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell111.setPaddingBottom(3f);
                cell111.setPaddingTop(3f);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell111.setPaddingRight(10f);
                table1511.addCell(cell111);

                cell111 = new PdfPCell(new Phrase("", redFont));
                cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell111.setPaddingBottom(3f);
                cell111.setPaddingTop(3f);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                
                table1511.addCell(cell111);
                
               //-----------------------------for total amount calculation------------------------------------------
                
                float totalCashGAmount=0;
                float totalCardGAmount=0;
                float totalChequeGAmount=0;
                float totalDueGAmount=0;
              
                if(totalCashAmount!=0 || totalCAmt!=0)
                {
                	totalCashGAmount+=totalCashAmount+totalCAmt;
                }
                if(totalCardAmount!=0 || totalCrdAmt!=0)
                {
                	totalCardGAmount+=totalCardAmount+totalCrdAmt;
                }
                if(totalChAmt!=0)
                {
                	totalChequeGAmount+=totalChAmt;
                }
                if(totalDAmt!=0)
                {
                	totalDueGAmount+=totalDAmt;
                }
               
                PdfPTable table059 = new PdfPTable(1);
                table059.setWidths(new float[] { 8f});
                table059.setSpacingBefore(10);
                table059.setWidthPercentage(100f);
               
                PdfPCell hcell1059;
        
                hcell1059 = new PdfPCell(new Phrase("GRAND TOTAL AMOUNT :", headFont));
                hcell1059.setBorder(Rectangle.NO_BORDER);
                
                hcell1059.setHorizontalAlignment(Element.ALIGN_LEFT);
                hcell1059.setPaddingBottom(1f);
                table059.addCell(hcell1059);
               // cell1.addElement(table059);
                
                PdfPTable table15111 = new PdfPTable(14);
                table15111.setWidths(new float[] {9.9f, 9.9f, 9.9f, 9.9f, 3f, 3f, 3.3f, 3f, 3f, 3f, 3.4f, 3.6f,4.5f,3.1f});
                table15111.setSpacingBefore(10);
                table15111.setWidthPercentage(100f);
                
                
                PdfPCell cell17;
                
                cell17 = new PdfPCell(new Phrase("Cash Amount", headFont));
                cell17.setBackgroundColor(BaseColor.GRAY);
                cell17.setBorder(Rectangle.NO_BORDER);
                cell17.setPaddingBottom(3f);
                cell17.setPaddingTop(3f);
                cell17.setHorizontalAlignment(Element.ALIGN_LEFT);
                table15111.addCell(cell17);

                cell17 = new PdfPCell(new Phrase("Card Amount", headFont));
                cell17.setBackgroundColor(BaseColor.GRAY);
                cell17.setBorder(Rectangle.NO_BORDER);
                cell17.setPaddingBottom(3f);
                cell17.setPaddingTop(3f);
                cell17.setHorizontalAlignment(Element.ALIGN_LEFT);
                //cell111.setPaddingLeft(-30f);
                table15111.addCell(cell17);

                cell17 = new PdfPCell(new Phrase("Cheque Amount", headFont));
                cell17.setBackgroundColor(BaseColor.GRAY);
                cell17.setBorder(Rectangle.NO_BORDER);
                cell17.setPaddingBottom(3f);
                cell17.setPaddingTop(3f);
                cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell17.setPaddingRight(22f);
                //cell111.setPaddingLeft(-30f);
                table15111.addCell(cell17);

                cell17 = new PdfPCell(new Phrase("Due Amount", headFont));
                cell17.setBackgroundColor(BaseColor.GRAY);
                cell17.setBorder(Rectangle.NO_BORDER);
                cell17.setPaddingBottom(3f);
                cell17.setPaddingTop(3f);
                cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell17.setPaddingRight(19f);
                //cell111.setPaddingLeft(-20f);
                table15111.addCell(cell17);

                cell17 = new PdfPCell(new Phrase("", redFont));
                cell17.setBackgroundColor(BaseColor.GRAY);
                cell17.setBorder(Rectangle.NO_BORDER);
                cell17.setPaddingBottom(3f);
                cell17.setPaddingTop(3f);
                cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell17.setPaddingRight(10f);
                //cell111.setPaddingRight(35f);
                table15111.addCell(cell17);
            
                cell17 = new PdfPCell(new Phrase("", redFont));
                cell17.setBackgroundColor(BaseColor.GRAY);
                cell17.setBorder(Rectangle.NO_BORDER);
                cell17.setPaddingBottom(3f);
                cell17.setPaddingTop(3f);
                cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell17.setPaddingRight(10f);
                //cell111.setPaddingRight(20f);
                table15111.addCell(cell17);

                cell17 = new PdfPCell(new Phrase("", redFont));
                cell17.setBackgroundColor(BaseColor.GRAY);
                cell17.setBorder(Rectangle.NO_BORDER);
                cell17.setPaddingBottom(3f);
                cell17.setPaddingTop(3f);
                cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell17.setPaddingRight(10f);
                //cell111.setPaddingRight(15f);
                table15111.addCell(cell17);
            
                cell17 = new PdfPCell(new Phrase("", redFont));
                cell17.setBackgroundColor(BaseColor.GRAY);
                cell17.setBorder(Rectangle.NO_BORDER);
                cell17.setPaddingBottom(3f);
                cell17.setPaddingTop(3f);
                cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell17.setPaddingRight(10f);
                //cell111.setPaddingRight(12f);
                table15111.addCell(cell17);

                cell17 = new PdfPCell(new Phrase("", redFont));
                cell17.setBackgroundColor(BaseColor.GRAY);
                cell17.setBorder(Rectangle.NO_BORDER);
                cell17.setPaddingBottom(3f);
                cell17.setPaddingTop(3f);
                cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell17.setPaddingRight(10f);
                //cell111.setPaddingRight(10f);
                table15111.addCell(cell17);
            
                cell17 = new PdfPCell(new Phrase("", redFont));
                cell17.setBackgroundColor(BaseColor.GRAY);
                cell17.setBorder(Rectangle.NO_BORDER);
                cell17.setPaddingBottom(3f);
                cell17.setPaddingTop(3f);
                cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell17.setPaddingRight(10f);
                //cell111.setPaddingRight(10f);
                table15111.addCell(cell17);

                cell17 = new PdfPCell(new Phrase("", redFont));
                cell17.setBackgroundColor(BaseColor.GRAY);
                cell17.setBorder(Rectangle.NO_BORDER);
                cell17.setPaddingBottom(3f);
                cell17.setPaddingTop(3f);
                cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell17.setPaddingRight(10f);
                table15111.addCell(cell17);
            
                cell17 = new PdfPCell(new Phrase("", redFont));
                cell17.setBackgroundColor(BaseColor.GRAY);
                cell17.setBorder(Rectangle.NO_BORDER);
                cell17.setPaddingBottom(3f);
                cell17.setPaddingTop(3f);
                cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell17.setPaddingRight(10f);
                table15111.addCell(cell17);
                
                cell17 = new PdfPCell(new Phrase("", redFont));
                cell17.setBackgroundColor(BaseColor.GRAY);
                cell17.setBorder(Rectangle.NO_BORDER);
                cell17.setPaddingBottom(3f);
                cell17.setPaddingTop(3f);
                cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell17.setPaddingRight(10f);
                table15111.addCell(cell17);

                cell17 = new PdfPCell(new Phrase("", redFont));
                cell17.setBackgroundColor(BaseColor.GRAY);
                cell17.setBorder(Rectangle.NO_BORDER);
                cell17.setPaddingBottom(3f);
                cell17.setPaddingTop(3f);
                cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
                
                table15111.addCell(cell17);
                
                
                PdfPCell cell171;
                
                cell171 = new PdfPCell(new Phrase(String.valueOf(totalCashGAmount), redFont));
                cell171.setBorder(Rectangle.NO_BORDER);
                cell171.setPaddingBottom(3f);
                cell171.setPaddingTop(3f);
                cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell171.setPaddingRight(48f);
                table15111.addCell(cell171);

                cell171 = new PdfPCell(new Phrase(String.valueOf(totalCardGAmount), redFont));
                cell171.setBorder(Rectangle.NO_BORDER);
                cell171.setPaddingBottom(3f);
                cell171.setPaddingTop(3f);
                cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell171.setPaddingRight(49f);
                //cell111.setPaddingLeft(-30f);
                table15111.addCell(cell171);

                cell171 = new PdfPCell(new Phrase(String.valueOf(totalChequeGAmount), redFont));
                cell171.setBorder(Rectangle.NO_BORDER);
                cell171.setPaddingBottom(3f);
                cell171.setPaddingTop(3f);
                cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell171.setPaddingRight(22f);
                //cell111.setPaddingLeft(-30f);
                table15111.addCell(cell171);

                cell171 = new PdfPCell(new Phrase(String.valueOf(totalDueGAmount), redFont));
                cell171.setBorder(Rectangle.NO_BORDER);
                cell171.setPaddingBottom(3f);
                cell171.setPaddingTop(3f);
                cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell171.setPaddingRight(19f);
                //cell111.setPaddingLeft(-20f);
                table15111.addCell(cell171);

                cell171 = new PdfPCell(new Phrase("", redFont));
                cell171.setBorder(Rectangle.NO_BORDER);
                cell171.setPaddingBottom(3f);
                cell171.setPaddingTop(3f);
                cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell171.setPaddingRight(10f);
                //cell111.setPaddingRight(35f);
                table15111.addCell(cell171);
            
                cell171 = new PdfPCell(new Phrase("", redFont));
                cell171.setBorder(Rectangle.NO_BORDER);
                cell171.setPaddingBottom(3f);
                cell171.setPaddingTop(3f);
                cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell171.setPaddingRight(10f);
                //cell111.setPaddingRight(20f);
                table15111.addCell(cell171);

                cell171 = new PdfPCell(new Phrase("", redFont));
                cell171.setBorder(Rectangle.NO_BORDER);
                cell171.setPaddingBottom(3f);
                cell171.setPaddingTop(3f);
                cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell171.setPaddingRight(10f);
                //cell111.setPaddingRight(15f);
                table15111.addCell(cell171);
            
                cell171 = new PdfPCell(new Phrase("", redFont));
                cell171.setBorder(Rectangle.NO_BORDER);
                cell171.setPaddingBottom(3f);
                cell171.setPaddingTop(3f);
                cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell171.setPaddingRight(10f);
                //cell111.setPaddingRight(12f);
                table15111.addCell(cell171);

                cell171 = new PdfPCell(new Phrase("", redFont));
                cell171.setBorder(Rectangle.NO_BORDER);
                cell171.setPaddingBottom(3f);
                cell171.setPaddingTop(3f);
                cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell171.setPaddingRight(10f);
                //cell111.setPaddingRight(10f);
                table15111.addCell(cell171);
            
                cell171 = new PdfPCell(new Phrase("", redFont));
                cell171.setBorder(Rectangle.NO_BORDER);
                cell171.setPaddingBottom(3f);
                cell171.setPaddingTop(3f);
                cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell171.setPaddingRight(10f);
                //cell111.setPaddingRight(10f);
                table15111.addCell(cell171);

                cell171 = new PdfPCell(new Phrase("", redFont));
                cell171.setBorder(Rectangle.NO_BORDER);
                cell171.setPaddingBottom(3f);
                cell171.setPaddingTop(3f);
                cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell171.setPaddingRight(10f);
                table15111.addCell(cell171);
            
                cell171 = new PdfPCell(new Phrase("", redFont));
                cell171.setBorder(Rectangle.NO_BORDER);
                cell171.setPaddingBottom(3f);
                cell171.setPaddingTop(3f);
                cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell171.setPaddingRight(10f);
                table15111.addCell(cell171);
                
                cell171 = new PdfPCell(new Phrase("", redFont));
                cell171.setBorder(Rectangle.NO_BORDER);
                cell171.setPaddingBottom(3f);
                cell171.setPaddingTop(3f);
                cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell171.setPaddingRight(10f);
                table15111.addCell(cell171);

                cell171 = new PdfPCell(new Phrase("", redFont));
                cell171.setBorder(Rectangle.NO_BORDER);
                cell171.setPaddingBottom(3f);
                cell171.setPaddingTop(3f);
                cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
                
                table15111.addCell(cell171);
               
                //----------------------------------end of pdf-------------------------------------------
                
                
                cell1.addElement(table151);
                cell1.addElement(table1511);
                cell1.addElement(table059);
                cell1.addElement(table15111);
            
                
            table.addCell(cell1);
            document.add(table);
            document.close();
        
        System.out.println("finished");
        pdfByte = byteArrayOutputStream.toByteArray();
        String uri = ServletUriComponentsBuilder.fromCurrentContextPath().path("/v1/sales/viewFile/")
                .path(salesPaymentPdfServiceImpl.getNextId()).toUriString();
        salesPaymentPdf = new SalesPaymentPdf();
        salesPaymentPdf.setFileName("User Wise IP/OP Details");
        salesPaymentPdf.setFileuri(uri);
        salesPaymentPdf.setPid(salesPaymentPdfServiceImpl.getNextId());
        salesPaymentPdf.setData(pdfByte);
        System.out.println(salesPaymentPdf);    
        // System.out.println("------------------------End--------------------------------");
        // System.out.println(totalBillAmount);
        //System.out.println(to);
        System.out.println(typeOfCharge);
        System.out.println(patientType);
        System.out.println(cServiceId);
        salesPaymentPdfServiceImpl.save(salesPaymentPdf);
    } catch (Exception e) {
       Logger.error(e.getMessage());
    }
    return salesPaymentPdf;
    }


@RequestMapping(value = "/userWiseIpOpsummary", method = RequestMethod.POST)
public SalesPaymentPdf getUserWiseIpOpSummary(@RequestBody Map<String, Object> userShift,Principal principal) {
    
    Map<String, Object> user = userShift;
    
    String name = (String) user.get("soldBy");
    /*String[] a = name.split(" ");
    String firstName = a[0];
    String lastName = a[1];
    
*/
    String[] docName=name.split("-");
    
    
    User uid = userServiceImpl.findOneByUserId(docName[1]);
    String uId = uid.getUserId();
    String userName=uid.getUserName();
    
    List<PatientRegistration> patientRegistration = patientRegistrationRepository.findUserWiseIpOpDetailed(user.get("fromDate"), user.get("toDate"),uId);

    if(patientRegistration.isEmpty())
    {
    	throw new RuntimeException(ConstantValues.REPORT_ERROR_MSG);
    }
    
    SalesPaymentPdf salesPaymentPdf = null;
    //CreatedBy (Security)
    User userSecurity=userServiceImpl.findByUserName(principal.getName());
    String createdBy=userSecurity.getFirstName()+" "+userSecurity.getLastName();
    
    try {
        byte[] pdfByte = null;
        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
        Document document = new Document(PageSize.A4.rotate());
        Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 10, Font.NORMAL);
        Font redFont1 = new Font(Font.FontFamily.TIMES_ROMAN, 10, Font.BOLD,BaseColor.RED);

        Font headFont = new Font(Font.FontFamily.TIMES_ROMAN, 10, Font.BOLD);
        Font headFont1 = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD);
        PdfWriter writer = PdfWriter.getInstance(document, byteArrayOutputStream);
        HeaderFooterPageEvent event = new HeaderFooterPageEvent();
         writer.setPageEvent(event);
        Resource fileResourcee = resourceLoader.getResource("classpath:udbhava.png");
        document.open();
        PdfPTable table = new PdfPTable(2);
        Image img = Image.getInstance(fileResourcee.getFile().getAbsolutePath());
        img.scaleAbsolute(75, 95);
        table.setWidthPercentage(105f);
        Phrase pq = new Phrase(new Chunk(img, 5, -80));
        
    	//shantharam addr
        pq.add(new Chunk(
                "",
                redFont));
        
        
        PdfPTable table212 = new PdfPTable(1);
        table212.setWidths(new float[] { 4f });
        table212.setSpacingBefore(10);
        PdfPCell hcell192;
        hcell192 = new PdfPCell(new Phrase(ConstantValues.HOSPITAL_NAME, headFont1));
        hcell192.setBorder(Rectangle.NO_BORDER);
        hcell192.setHorizontalAlignment(Element.ALIGN_CENTER);
        table212.addCell(hcell192);
        
        PdfPCell cellp = new PdfPCell(pq);
        
        cellp.setPaddingBottom(-10f);
        PdfPCell cell1 = new PdfPCell();
        
        //cell1.setBorder(Rectangle.NO_BORDER);
        cell1.setHorizontalAlignment(Element.ALIGN_CENTER);
        cell1.setColspan(2);
        cell1.addElement(table212);
        cell1.addElement(pq);
        
        PdfPTable table21 = new PdfPTable(1);
        table21.setWidths(new float[] { 4f });
        table21.setSpacingBefore(10);
        PdfPCell hcell19;
        hcell19 = new PdfPCell(new Phrase("\n User Wise IP and OP Summary Collection Report", headFont1));
        hcell19.setBorder(Rectangle.NO_BORDER);
        //hcell19.setPaddingTop(5f);
        hcell19.setHorizontalAlignment(Element.ALIGN_CENTER);
        table21.addCell(hcell19);
        // calender format date
        String from = user.get("fromDate").toString();
        Timestamp timestamp = Timestamp.valueOf(from);
        DateFormat dateFormat = new SimpleDateFormat("dd-MMM-yyyy hh.mm aa ");
        Calendar calendar = Calendar.getInstance();
        calendar.setTimeInMillis(timestamp.getTime());
        String from1 = dateFormat.format(calendar.getTime());
        String to = user.get("toDate").toString();
        Timestamp timestamp1 = Timestamp.valueOf(to);
        DateFormat dateFormat1 = new SimpleDateFormat("dd-MMM-yyyy hh.mm aa ");
        Calendar calendar1 = Calendar.getInstance();
        calendar1.setTimeInMillis(timestamp1.getTime());
        String to1 = dateFormat1.format(calendar1.getTime());
        // Display a date in day, month, year format
        Date date = Calendar.getInstance().getTime();
        DateFormat formatter = new SimpleDateFormat("dd-MMM-yyyy hh.mm aa");
        String today = formatter.format(date).toString();
        PdfPCell hcell20;
        hcell20 = new PdfPCell(new Phrase("\n From Dt  : " + from1 + "           " + "Till Dt  : " + to1, redFont));
        hcell20.setBorder(Rectangle.NO_BORDER);
        hcell20.setPaddingTop(5f);
        hcell20.setHorizontalAlignment(Element.ALIGN_CENTER);
        table21.addCell(hcell20);
        PdfPTable table3 = new PdfPTable(2);
        table3.setWidths(new float[] { 5f, 4f });
        table3.setSpacingBefore(10);
        PdfPCell hcell111;
        hcell111 = new PdfPCell(new Phrase("\n Printed By          :  " + createdBy , redFont));
        hcell111.setBorder(Rectangle.NO_BORDER);
        hcell111.setPaddingLeft(-70f);
        table3.addCell(hcell111);
        hcell111 = new PdfPCell(new Phrase("\n Printed Date & Time    :  " + today, redFont));
        hcell111.setBorder(Rectangle.NO_BORDER);
        hcell111.setPaddingRight(-70f);
        hcell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table3.addCell(hcell111);
        
        
        cell1.addElement(table21);
        
        cell1.addElement(table3);
        PdfPTable tablea=new PdfPTable(1);
        tablea.setWidths(new float[] { 15});
        tablea.setWidthPercentage(105f);
        
        PdfPCell hcell1h;
        hcell1h = new PdfPCell(new Phrase("________________________________________________________________________________________________________________________"));
        hcell1h.setBorder(Rectangle.NO_BORDER);
        hcell1h.setPaddingTop(5f);
        hcell1h.setHorizontalAlignment(Element.ALIGN_CENTER);
        
        tablea.addCell(hcell1h);
        
        cell1.addElement(tablea);
        
        
        PdfPTable table111 = new PdfPTable(1);
        table111.setWidths(new float[] { 7});
        
        PdfPCell hcell12;
        hcell12 = new PdfPCell(new Phrase("\n UserName:  "+docName[0], headFont));
        hcell12.setBorder(Rectangle.NO_BORDER);
        hcell12.setHorizontalAlignment(Element.ALIGN_LEFT);
        hcell12.setPaddingBottom(5f);
        hcell12.setPaddingLeft(-70f);
        table111.addCell(hcell12);
        
        cell1.addElement(table111);
    
        PdfPTable table1 = new PdfPTable(11);
        table1.setWidths(new float[] {  6.6f, 4.5f, 2.7f, 4f, 4f, 4f, 4f, 3.5f, 4f,4.5f,3f });
        
        PdfPCell hcell;
        hcell = new PdfPCell(new Phrase("Scroll Type", redFont1));
        hcell.setBorder(Rectangle.NO_BORDER);
        hcell.setBackgroundColor(BaseColor.CYAN);
        hcell.setHorizontalAlignment(Element.ALIGN_LEFT);
        table1.addCell(hcell);

        hcell = new PdfPCell(new Phrase("G.Amt", redFont1));
        hcell.setBorder(Rectangle.NO_BORDER);
        hcell.setBackgroundColor(BaseColor.CYAN);
        hcell.setHorizontalAlignment(Element.ALIGN_RIGHT);
        hcell.setPaddingRight(36f);
        table1.addCell(hcell);
        hcell = new PdfPCell(new Phrase("Conc.", redFont1));
        hcell.setBorder(Rectangle.NO_BORDER);
        hcell.setBackgroundColor(BaseColor.CYAN);
        hcell.setHorizontalAlignment(Element.ALIGN_LEFT);
        hcell.setPaddingRight(18f);
        table1.addCell(hcell);
        hcell = new PdfPCell(new Phrase("Net Amt", redFont1));
        hcell.setBorder(Rectangle.NO_BORDER);
        hcell.setBackgroundColor(BaseColor.CYAN);
        hcell.setHorizontalAlignment(Element.ALIGN_RIGHT);
        hcell.setPaddingRight(19f);
        table1.addCell(hcell);
        hcell = new PdfPCell(new Phrase("Adv. Amt", redFont1));
        hcell.setBorder(Rectangle.NO_BORDER);
        hcell.setBackgroundColor(BaseColor.CYAN);
        hcell.setHorizontalAlignment(Element.ALIGN_RIGHT);
        hcell.setPaddingRight(18f);
        table1.addCell(hcell);
        hcell = new PdfPCell(new Phrase("Rec.Amt", redFont1));
        hcell.setBorder(Rectangle.NO_BORDER);
        hcell.setBackgroundColor(BaseColor.CYAN);
        hcell.setHorizontalAlignment(Element.ALIGN_RIGHT);
        hcell.setPaddingRight(19f);
        table1.addCell(hcell);
        hcell = new PdfPCell(new Phrase("Cash Amt", redFont1));
        hcell.setBorder(Rectangle.NO_BORDER);
        hcell.setBackgroundColor(BaseColor.CYAN);
        hcell.setHorizontalAlignment(Element.ALIGN_RIGHT);
        hcell.setPaddingRight(17f);
        table1.addCell(hcell);
        hcell = new PdfPCell(new Phrase("Chq.Amt", redFont1));
        hcell.setBorder(Rectangle.NO_BORDER);
        hcell.setBackgroundColor(BaseColor.CYAN);
        hcell.setHorizontalAlignment(Element.ALIGN_RIGHT);
        hcell.setPaddingRight(21f);
        table1.addCell(hcell);
        hcell = new PdfPCell(new Phrase("Card Amt", redFont1));
        hcell.setBorder(Rectangle.NO_BORDER);
        hcell.setBackgroundColor(BaseColor.CYAN);
        hcell.setHorizontalAlignment(Element.ALIGN_RIGHT);
        hcell.setPaddingRight(13f);
        table1.addCell(hcell);
        
        hcell = new PdfPCell(new Phrase("Cash+Card Amt", redFont1));
        hcell.setBorder(Rectangle.NO_BORDER);
        hcell.setBackgroundColor(BaseColor.CYAN);
        hcell.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table1.addCell(hcell);
        
        hcell = new PdfPCell(new Phrase("Due Amt", redFont1));
        hcell.setBorder(Rectangle.NO_BORDER);
        hcell.setBackgroundColor(BaseColor.CYAN);
        hcell.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table1.addCell(hcell);
        
        table1.setWidthPercentage(100f);
        cell1.addElement(table1);
        
//-------------------------- OSP BILLS -----------------------------------------                
        
        PdfPTable table12 = new PdfPTable(11);
        table12.setWidths(new float[] {  7.5f, 4f, 1.5f, 4f, 4f, 4f, 4f, 3f, 4f,4.5f,3f });
        table12.setSpacingBefore(10);
        table12.setWidthPercentage(100f);
        
         float otherOspFee = 0;
            float otherOspFees=0;
            float cashOspAmt1 = 0;
            float cashOspAmt2=0;
            float chqOspAmt1 = 0;
            float chqOspAmt2=0;
            float cardOspAmt1 = 0;
            float cardOspAmt2=0;
            float opAdvOspAmt=0;
            float opAdvOspAmt1=0;
            float totalFeeOspAmt1 = 0;
            float totalFeeOspAmt2=0;
            float totalCashOspAmt1 = 0;
            float totalCashOspAmt2=0;
            float totalCardOspAmt1 = 0;
            float totalCardOspAmt2=0;
            float totalChqOspAmt1 = 0;
            float totalChqOspAmt2=0;
            float totalDueOspAmt1 = 0;
            float totalDueOspAmt2=0;
            float dueOspAmt1=0;
            float dueOspAmt2=0;
            float recpOspAmt1=0;
            float recpOspAmt2=0;
            float totalOspRecAmt1=0;
            float totalOspRecAmt2=0;
            float totalOspAdvAmt=0;
            float totalOspAdvAmt1=0;
            String umr=null;
            String typeOfCharge=null;
            String patientType=null;
            String patientTypes=null;
            String pId = null;
            String pRegId=null;
            String cServiceId=null;
            String patientName=null;
            String consultant=null;
            
            String ospId=null;
            float totalcashPlusCardOspAmt1=0;
            float cashPlusCardOspAmt=0;
            float cashPlusCardOspAmt2=0;
            float totalcashPlusCardOspAmt=0;
                     
        
        List<OspService> ospServices=ospServiceRepository.findByUserDetails(user.get("fromDate"), user.get("toDate"),uId);
        
        if(!ospServices.isEmpty())
        {
        	for(OspService ospServiceInfo:ospServices)
                {
                
                    
                                if(ospServiceInfo.getNetAmount()!=0)
                                {
                    
                                    if(ospServiceInfo.getOspServiceId()!=null)
                                    {
            
                                                if(ospServiceInfo.getPaymentType().equalsIgnoreCase("CASH"))
                                                {
                                                    
                                                    otherOspFee=ospServiceInfo.getNetAmount();
                                                    cashOspAmt1=ospServiceInfo.getNetAmount();
                                                    chqOspAmt1=0;
                                                    cardOspAmt1=0;
                                                    totalFeeOspAmt1+=otherOspFee;
                                                    totalCashOspAmt1+=cashOspAmt1;
                                                    cashPlusCardOspAmt=0;
                                                    recpOspAmt1=otherOspFee;
                                                    dueOspAmt1 = 0;
                                                    totalDueOspAmt1+=dueOspAmt1;
                                                    totalOspRecAmt1+=recpOspAmt1;
                                
                               
                                
                                                }
                                                else if(ospServiceInfo.getPaymentType().equalsIgnoreCase("CHQ")||ospServiceInfo.getPaymentType().equalsIgnoreCase("CHEQUE"))
                                                {
                                                      otherOspFee=ospServiceInfo.getNetAmount();
                                                      chqOspAmt1=ospServiceInfo.getNetAmount();
                                                      cashOspAmt1=0;
                                                      cardOspAmt1=0;
                                                      cashPlusCardOspAmt=0;
                                                      totalFeeOspAmt1+=otherOspFee;
                                                      totalChqOspAmt1+=chqOspAmt1;
                                                      recpOspAmt1=otherOspFee;
                                                      dueOspAmt1 =0;
                                                      totalDueOspAmt1+=dueOspAmt1;
                                                      totalOspRecAmt1+=recpOspAmt1;
                               
                                                }
                                                else if(ospServiceInfo.getPaymentType().equalsIgnoreCase("DEBIT CARD") || ospServiceInfo.getPaymentType().equalsIgnoreCase("CREDIT CARD") || ospServiceInfo.getPaymentType().equalsIgnoreCase("CARD"))
                                                {
                                                    otherOspFee=ospServiceInfo.getNetAmount();
                                                    cardOspAmt1=ospServiceInfo.getNetAmount();
                                                    cashOspAmt1=0;
                                                    chqOspAmt1=0;
                                                    cashPlusCardOspAmt=0;
                                                    totalFeeOspAmt1+=otherOspFee;
                                                    totalCardOspAmt1+=cardOspAmt1;
                                                    recpOspAmt1=otherOspFee;
                                                    dueOspAmt1 =0;
                                                    totalDueOspAmt1+=dueOspAmt1;
                                                    totalOspRecAmt1+=recpOspAmt1;
                                                   
                                                
                                                }
                                                else if(ospServiceInfo.getPaymentType().equalsIgnoreCase("ADVANCE"))
                                                {
                                                    
                                                    
                                                    otherOspFee=ospServiceInfo.getNetAmount();
                                                    cashOspAmt1=0;
                                                    cardOspAmt1=0;
                                                    chqOspAmt1=0;
                                                    opAdvOspAmt=otherOspFee;
                                                    cashPlusCardOspAmt=0;
                                                    totalFeeOspAmt1+=opAdvOspAmt;
                                                    recpOspAmt1=0;
                                                    dueOspAmt1 = 0;
                                                    totalOspAdvAmt+=opAdvOspAmt;
                                                    totalCardOspAmt1+=0;
                                                    totalDueOspAmt1+=dueOspAmt1;
                                                    totalOspRecAmt1+=recpOspAmt1;
                                                } 
                                                else if(ospServiceInfo.getPaymentType().equalsIgnoreCase("DUE"))
                                                {
                                                    
                                                    
                                                    otherOspFee=0;
                                                    cashOspAmt1=0;
                                                    cardOspAmt1=0;
                                                    chqOspAmt1=0;
                                                    cashPlusCardOspAmt=0;
                                                    opAdvOspAmt=otherOspFee;
                                                    totalFeeOspAmt1+=otherOspFee;
                                                    recpOspAmt1=0;
                                                    dueOspAmt1 =ospServiceInfo.getNetAmount();
                                                    totalOspAdvAmt+=opAdvOspAmt;
                                                    totalCardOspAmt1+=0;
                                                    totalDueOspAmt1+=dueOspAmt1;
                                                    totalOspRecAmt1+=recpOspAmt1;
                                                    
                                                }
                                                else if(ospServiceInfo.getPaymentType().equalsIgnoreCase("CASH+CARD"))
                                                {
                                                    
                                                    
                                                    otherOspFee=ospServiceInfo.getNetAmount();
                                                    cashOspAmt1=0;
                                                    cardOspAmt1=0;
                                                    chqOspAmt1=0;
                                                    opAdvOspAmt=0;
                                                    totalFeeOspAmt1+=otherOspFee;
                                                    recpOspAmt1=otherOspFee;
                                                    dueOspAmt1 =0;
                                                    cashPlusCardOspAmt=ospServiceInfo.getNetAmount();
                                                    totalOspAdvAmt+=opAdvOspAmt;
                                                    totalcashPlusCardOspAmt+=cashPlusCardOspAmt;
                                                    totalCardOspAmt1+=0;
                                                    totalDueOspAmt1+=dueOspAmt1;
                                                    totalOspRecAmt1+=recpOspAmt1;
                                                    
                                                }
                                    }
            
                
        }   
            
                                }
        	
                                
                                
        PdfPCell cell03;
        cell03 = new PdfPCell(new Phrase("OSP BILLS", headFont));
        cell03.setBorder(Rectangle.NO_BORDER);
        cell03.setHorizontalAlignment(Element.ALIGN_LEFT);
        table12.addCell(cell03);
        cell03 = new PdfPCell(new Phrase(String.valueOf(totalFeeOspAmt1), redFont));
        cell03.setBorder(Rectangle.NO_BORDER);
        cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell03.setPaddingRight(42f);
        table12.addCell(cell03);
    
        cell03 = new PdfPCell(new Phrase("0", redFont));
        cell03.setBorder(Rectangle.NO_BORDER);
        cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell03.setPaddingRight(12f);
        table12.addCell(cell03);
        cell03 = new PdfPCell(new Phrase(String.valueOf(totalFeeOspAmt1), redFont));
        cell03.setBorder(Rectangle.NO_BORDER);
        cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell03.setPaddingRight(20f);
        table12.addCell(cell03);
    
        cell03 = new PdfPCell(new Phrase(String.valueOf(totalOspAdvAmt), redFont));
        cell03.setBorder(Rectangle.NO_BORDER);
        cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell03.setPaddingRight(21f);
        table12.addCell(cell03);
        cell03 = new PdfPCell(new Phrase(String.valueOf(totalOspRecAmt1), redFont));
        cell03.setBorder(Rectangle.NO_BORDER);
        cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell03.setPaddingRight(20f);
        table12.addCell(cell03);
    
        cell03 = new PdfPCell(new Phrase(String.valueOf(totalCashOspAmt1), redFont));
        cell03.setBorder(Rectangle.NO_BORDER);
        cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell03.setPaddingRight(19f);
        table12.addCell(cell03);
        cell03 = new PdfPCell(new Phrase(String.valueOf(totalChqOspAmt1), redFont));
        cell03.setBorder(Rectangle.NO_BORDER);
        cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell03.setPaddingRight(21f);
        table12.addCell(cell03);
    
        cell03 = new PdfPCell(new Phrase(String.valueOf(totalCardOspAmt1), redFont));
        cell03.setBorder(Rectangle.NO_BORDER);
        cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell03.setPaddingRight(13f);
        table12.addCell(cell03);
        
        cell03 = new PdfPCell(new Phrase(String.valueOf(totalcashPlusCardOspAmt), redFont));
        cell03.setBorder(Rectangle.NO_BORDER);
        cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table12.addCell(cell03);
        cell03 = new PdfPCell(new Phrase(String.valueOf(totalDueOspAmt1), redFont));
        cell03.setBorder(Rectangle.NO_BORDER);
        cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table12.addCell(cell03);
       
        }
        else
        {
        	PdfPCell cell03;
            cell03 = new PdfPCell(new Phrase("OSP BILLS", headFont));
            cell03.setBorder(Rectangle.NO_BORDER);
            cell03.setHorizontalAlignment(Element.ALIGN_LEFT);
            table12.addCell(cell03);
            cell03 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
            cell03.setBorder(Rectangle.NO_BORDER);
            cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell03.setPaddingRight(42f);
            table12.addCell(cell03);
        
            cell03 = new PdfPCell(new Phrase("0", redFont));
            cell03.setBorder(Rectangle.NO_BORDER);
            cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell03.setPaddingRight(12f);
            table12.addCell(cell03);
            cell03 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
            cell03.setBorder(Rectangle.NO_BORDER);
            cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell03.setPaddingRight(20f);
            table12.addCell(cell03);
        
            cell03 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
            cell03.setBorder(Rectangle.NO_BORDER);
            cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell03.setPaddingRight(21f);
            table12.addCell(cell03);
            cell03 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
            cell03.setBorder(Rectangle.NO_BORDER);
            cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell03.setPaddingRight(20f);
            table12.addCell(cell03);
        
            cell03 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
            cell03.setBorder(Rectangle.NO_BORDER);
            cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell03.setPaddingRight(19f);
            table12.addCell(cell03);
            cell03 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
            cell03.setBorder(Rectangle.NO_BORDER);
            cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell03.setPaddingRight(21f);
            table12.addCell(cell03);
        
            cell03 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
            cell03.setBorder(Rectangle.NO_BORDER);
            cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell03.setPaddingRight(13f);
            table12.addCell(cell03);
            
            cell03 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
            cell03.setBorder(Rectangle.NO_BORDER);
            cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table12.addCell(cell03);
            cell03 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
            cell03.setBorder(Rectangle.NO_BORDER);
            cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table12.addCell(cell03);
        }
        
        cell1.addElement(table12);
        
                
 //-------------------------------OP BILLS----------------------------------------------
        
        PdfPTable table17 = new PdfPTable(11);
        table17.setWidths(new float[] {  7.5f, 4f, 1.5f, 4f, 4f, 4f, 4f, 3f, 4f,4.5f,3f });
        table17.setSpacingBefore(10);
        table17.setWidthPercentage(100f);
        
       
        float otherFee = 0;
        float otherFees=0;
        float cashAmt1 = 0;
        float cashAmt2=0;
        float chqAmt1 = 0;
        float chqAmt2=0;
        float cardAmt1 = 0;
        float cardAmt2=0;
        float opAdvAmt=0;
        float opAdvAmt1=0;
        float totalFeeAmt1 = 0;
        float totalFeeAmt2=0;
        float totalCashAmt1 = 0;
        float totalCashAmt2=0;
        float totalCardAmt1 = 0;
        float totalCardAmt2=0;
        float totalChqAmt1 = 0;
        float totalChqAmt2=0;
        float totalDueAmt1 = 0;
        float totalDueAmt2=0;
        float dueAmt1=0;
        float dueAmt2=0;
        float recpAmt1=0;
        float recpAmt2=0;
        float totalRecAmt1=0;
        float totalRecAmt2=0;
        float totalOpAdvAmt=0;
        float totalOpAdvAmt1=0;
        /*String umr=null;
        String typeOfCharge=null;
        String patientType=null;
        String patientTypes=null;
        String pId = null;
        String pRegId=null;
        String cServiceId=null;
        String patientName=null;
        String consultant=null;*/
        float totalcashPlusCardAmt1=0;
        float cashPlusCardAmt=0;
        float cashPlusCardAmt2=0;
        float totalcashPlusCardAmt=0;
                 
        
        
       // String s=null;
        
        List<Map<String, String>> show6 = new ArrayList<>();
        List<String> info4 = new ArrayList<>();
        Map<String, String> displayInfo9 = null; 
        
			if (!patientRegistration.isEmpty()) {
				for (PatientRegistration pReg : patientRegistration) {

					pRegId = pReg.getRegId();

					displayInfo9 = new HashMap<>();
					patientType = pReg.getpType();

					umr = pReg.getPatientDetails().getUmr();
					if (pReg.getPatientDetails().getMiddleName() != null) {
						patientName = pReg.getPatientDetails().getFirstName() + " "
								+ pReg.getPatientDetails().getMiddleName() + " "
								+ pReg.getPatientDetails().getLastName();
					} else {
						patientName = pReg.getPatientDetails().getFirstName() + " "
								+ pReg.getPatientDetails().getLastName();
					}
					consultant = pReg.getPatientDetails().getConsultant();

					List<ChargeBill> chargeBillService = chargeBillRepository.findByPatRegIdsAndServiceId(pRegId);

					if (!info4.contains(pRegId) && patientType.equalsIgnoreCase("OUTPATIENT")) {
						if (!chargeBillService.isEmpty()) {
							List<ChargeBill> charge = chargeBillRepository.findByPatRegIds(pRegId);
							for (ChargeBill pp : chargeBillService) {
								patientTypes = pp.getPatRegId().getpType();

								if (pp.getAmount() != 0) {

									if (pp.getPatRegId() != null && patientTypes.equalsIgnoreCase("OUTPATIENT")) {
										if (pp.getServiceId() != null) {

											if (pp.getPaymentType().equalsIgnoreCase("CASH")) {

												otherFee = pp.getNetAmount();
												cashAmt1 = pp.getNetAmount();
												chqAmt1 = 0;
												cardAmt1 = 0;
												totalFeeAmt1 += otherFee;
												totalCashAmt1 += cashAmt1;
												cashPlusCardAmt = 0;
												recpAmt1 = otherFee;
												dueAmt1 = 0;
												totalDueAmt1 += dueAmt1;
												totalRecAmt1 += recpAmt1;

											} else if (pp.getPaymentType().equalsIgnoreCase("CHQ")
													|| pp.getPaymentType().equalsIgnoreCase("CHEQUE")) {
												otherFee = pp.getNetAmount();
												chqAmt1 = pp.getNetAmount();
												cashAmt1 = 0;
												cardAmt1 = 0;
												cashPlusCardAmt = 0;
												totalFeeAmt1 += otherFee;
												totalChqAmt1 += chqAmt1;
												recpAmt1 = otherFee;
												dueAmt1 = 0;
												totalDueAmt1 += dueAmt1;
												totalRecAmt1 += recpAmt1;

											} else if (pp.getPaymentType().equalsIgnoreCase("DEBIT CARD")
													|| pp.getPaymentType().equalsIgnoreCase("CREDIT CARD")
													|| pp.getPaymentType().equalsIgnoreCase("CARD")) {
												otherFee = pp.getNetAmount();
												cardAmt1 = pp.getNetAmount();
												cashAmt1 = 0;
												chqAmt1 = 0;
												cashPlusCardAmt = 0;
												totalFeeAmt1 += otherFee;
												totalCardAmt1 += cardAmt1;
												recpAmt1 = otherFee;
												dueAmt1 = 0;
												totalDueAmt1 += dueAmt1;
												totalRecAmt1 += recpAmt1;

											} else if (pp.getPaymentType().equalsIgnoreCase("ADVANCE")) {

												otherFee = pp.getNetAmount();
												cashAmt1 = 0;
												cardAmt1 = 0;
												chqAmt1 = 0;
												opAdvAmt = otherFee;
												cashPlusCardAmt = 0;
												totalFeeAmt1 += opAdvAmt;
												recpAmt1 = 0;
												dueAmt1 = 0;
												totalOpAdvAmt += opAdvAmt;
												totalCardAmt1 += 0;
												totalDueAmt1 += dueAmt1;
												totalRecAmt1 += recpAmt1;
											} else if (pp.getPaymentType().equalsIgnoreCase("DUE")) {

												otherFee = 0;
												cashAmt1 = 0;
												cardAmt1 = 0;
												chqAmt1 = 0;
												cashPlusCardAmt = 0;
												opAdvAmt = otherFee;
												totalFeeAmt1 += otherFee;
												recpAmt1 = 0;
												dueAmt1 = pp.getNetAmount();
												totalOpAdvAmt += opAdvAmt;
												totalCardAmt1 += 0;
												totalDueAmt1 += dueAmt1;
												totalRecAmt1 += recpAmt1;

											} else if (pp.getPaymentType().equalsIgnoreCase("CASH+CARD")) {

												otherFee = pp.getNetAmount();
												cashAmt1 = 0;
												cardAmt1 = 0;
												chqAmt1 = 0;
												opAdvAmt = 0;
												totalFeeAmt1 += otherFee;
												recpAmt1 = otherFee;
												dueAmt1 = 0;
												cashPlusCardAmt = pp.getNetAmount();
												totalOpAdvAmt += opAdvAmt;
												totalcashPlusCardAmt += cashPlusCardAmt;
												totalCardAmt1 += 0;
												totalDueAmt1 += dueAmt1;
												totalRecAmt1 += recpAmt1;

											}

										}

									}
								}
								System.out.println("-------Added regid+" + pRegId);

							}

						}

					}

				}

			

				 PdfPCell hcell011;
			        
				 hcell011 = new PdfPCell(new Phrase("OP BILLS", headFont));
				 hcell011.setBorder(Rectangle.NO_BORDER);
				 hcell011.setHorizontalAlignment(Element.ALIGN_LEFT);
			     table17.addCell(hcell011);
			        
			     hcell011 = new PdfPCell(new Phrase(String.valueOf(totalFeeAmt1), redFont));
			     hcell011.setBorder(Rectangle.NO_BORDER);
			     hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
			     hcell011.setPaddingRight(42f);
			        table17.addCell(hcell011);
			    
			        hcell011 = new PdfPCell(new Phrase("0", redFont));
			        hcell011.setBorder(Rectangle.NO_BORDER);
			        hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
			        hcell011.setPaddingRight(12f);
			        table17.addCell(hcell011);
			        
			        hcell011 = new PdfPCell(new Phrase(String.valueOf(totalFeeAmt1), redFont));
			        hcell011.setBorder(Rectangle.NO_BORDER);
			        hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
			        hcell011.setPaddingRight(20f);
			        table17.addCell(hcell011);
			    
			        hcell011 = new PdfPCell(new Phrase(String.valueOf(totalOpAdvAmt), redFont));
			        hcell011.setBorder(Rectangle.NO_BORDER);
			        hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
			        hcell011.setPaddingRight(21f);
			        table17.addCell(hcell011);
			        
			        hcell011 = new PdfPCell(new Phrase(String.valueOf(totalRecAmt1), redFont));
			        hcell011.setBorder(Rectangle.NO_BORDER);
			        hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
			        hcell011.setPaddingRight(20f);
			        table17.addCell(hcell011);
			    
			        hcell011 = new PdfPCell(new Phrase(String.valueOf(totalCashAmt1), redFont));
			        hcell011.setBorder(Rectangle.NO_BORDER);
			        hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
			        hcell011.setPaddingRight(19f);
			        table17.addCell(hcell011);
			        
			        hcell011 = new PdfPCell(new Phrase(String.valueOf(totalChqAmt1), redFont));
			        hcell011.setBorder(Rectangle.NO_BORDER);
			        hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
			        hcell011.setPaddingRight(21f);
			        table17.addCell(hcell011);
			    
			        hcell011 = new PdfPCell(new Phrase(String.valueOf(totalCardAmt1), redFont));
			        hcell011.setBorder(Rectangle.NO_BORDER);
			        hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
			        hcell011.setPaddingRight(13f);
			        table17.addCell(hcell011);
			        
			        hcell011 = new PdfPCell(new Phrase(String.valueOf(totalcashPlusCardAmt), redFont));
			        hcell011.setBorder(Rectangle.NO_BORDER);
			        hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
			        table17.addCell(hcell011);
			        
			        hcell011 = new PdfPCell(new Phrase(String.valueOf(totalDueAmt1), redFont));
			        hcell011.setBorder(Rectangle.NO_BORDER);
			        hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
			        table17.addCell(hcell011);
			}
			else
			{
				
				 PdfPCell hcell011;
			        
				 hcell011 = new PdfPCell(new Phrase("OP BILLS", headFont));
				 hcell011.setBorder(Rectangle.NO_BORDER);
				 hcell011.setHorizontalAlignment(Element.ALIGN_LEFT);
			     table17.addCell(hcell011);
			        
			     hcell011 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
			     hcell011.setBorder(Rectangle.NO_BORDER);
			     hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
			     hcell011.setPaddingRight(42f);
			        table17.addCell(hcell011);
			    
			        hcell011 = new PdfPCell(new Phrase("0", redFont));
			        hcell011.setBorder(Rectangle.NO_BORDER);
			        hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
			        hcell011.setPaddingRight(12f);
			        table17.addCell(hcell011);
			        
			        hcell011 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
			        hcell011.setBorder(Rectangle.NO_BORDER);
			        hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
			        hcell011.setPaddingRight(20f);
			        table17.addCell(hcell011);
			    
			        hcell011 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
			        hcell011.setBorder(Rectangle.NO_BORDER);
			        hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
			        hcell011.setPaddingRight(21f);
			        table17.addCell(hcell011);
			        
			        hcell011 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
			        hcell011.setBorder(Rectangle.NO_BORDER);
			        hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
			        hcell011.setPaddingRight(20f);
			        table17.addCell(hcell011);
			    
			        hcell011 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
			        hcell011.setBorder(Rectangle.NO_BORDER);
			        hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
			        hcell011.setPaddingRight(19f);
			        table17.addCell(hcell011);
			        
			        hcell011 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
			        hcell011.setBorder(Rectangle.NO_BORDER);
			        hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
			        hcell011.setPaddingRight(21f);
			        table17.addCell(hcell011);
			    
			        hcell011 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
			        hcell011.setBorder(Rectangle.NO_BORDER);
			        hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
			        hcell011.setPaddingRight(13f);
			        table17.addCell(hcell011);
			        
			        hcell011 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
			        hcell011.setBorder(Rectangle.NO_BORDER);
			        hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
			        table17.addCell(hcell011);
			        
			        hcell011 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
			        hcell011.setBorder(Rectangle.NO_BORDER);
			        hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
			        table17.addCell(hcell011);
			}
			
        cell1.addElement(table17);
        
        
//---------------------- CONSULTATIONS ---------------------------------                
        PdfPTable table11 = new PdfPTable(11);
        table11.setWidths(new float[] { 7.5f, 4f, 1.5f, 4f, 4f, 4f, 4f, 3f, 4f,4.5f,3f });
        table11.setSpacingBefore(10);
        table11.setWidthPercentage(100f);
        
        long fee = 0;
        long cashAmt = 0;
        long chqAmt = 0;
        long cardAmt = 0;
        long recpAmt = 0;
        long dueAmt = 0;
        long advAmt=0;
        float totalFeeAmt = 0;
        float totalCashAmt = 0;
        float totalCardAmt = 0;
        float totalChqAmt=0;
        float totalRecpAmt=0;
        float totalAdvcAmt=0;
        float totalDueAmt = 0;
        float cashPlusCardDocAmt=0;
        float totalCashPlusCardDocAmt=0;
        
        
        if(!patientRegistration.isEmpty())
        {
        for(PatientRegistration pReg : patientRegistration)
        {
            pId = pReg.getRegId();
            //Set<PatientPayment> patientPayments = pReg.getPatientPayment();
            Set<PatientPayment> patientPayments = paymentRepository.findByPatientRegistration(pReg);
            for(PatientPayment pp : patientPayments)
            {
                if(pp.getAmount()!=0)
                {
                if(pp.getTypeOfCharge().equalsIgnoreCase("Doctor Fee"))
                {
                    if(pp.getTypeOfCharge().equalsIgnoreCase("Doctor Fee")&&pp.getModeOfPaymant().equalsIgnoreCase("CASH"))
                    {
                        fee=pp.getAmount();
                        cashAmt=pp.getAmount();
                        chqAmt=0;
                        cardAmt=0;
                        totalFeeAmt+=fee;
                        advAmt=0;
                        totalCashAmt+=cashAmt;
                        recpAmt=pp.getAmount();
                        dueAmt = recpAmt-cashAmt;
                        totalDueAmt+=dueAmt;
                        totalRecpAmt+=recpAmt;
                    }
                    else if(pp.getTypeOfCharge().equalsIgnoreCase("Doctor Fee")&&(pp.getModeOfPaymant().equalsIgnoreCase("CHQ")||pp.getModeOfPaymant().equalsIgnoreCase("CHEQUE")))
                    {
                        fee=pp.getAmount();
                        chqAmt=pp.getAmount();
                        cashAmt=0;
                        cardAmt=0;
                        advAmt=0;
                        totalFeeAmt+=fee;
                        totalChqAmt+=chqAmt;
                        recpAmt=pp.getAmount();
                        dueAmt = recpAmt-chqAmt;
                        totalDueAmt+=dueAmt;
                        totalRecpAmt+=recpAmt;
                    }
                    else if(pp.getTypeOfCharge().equalsIgnoreCase("Doctor Fee")&&pp.getModeOfPaymant().equalsIgnoreCase("ADVANCE"))
                    {
                        fee=pp.getAmount();
                        chqAmt=0;
                        cashAmt=0;
                        cardAmt=0;
                        advAmt=pp.getAmount();
                        totalFeeAmt+=fee;
                        totalChqAmt+=0;
                        totalAdvcAmt+=advAmt;
                        recpAmt=0;
                        dueAmt = recpAmt-chqAmt;
                        totalDueAmt+=dueAmt;
                        totalRecpAmt+=recpAmt;
                    }
                    
                    else if(pp.getTypeOfCharge().equalsIgnoreCase("Doctor Fee")&&(pp.getModeOfPaymant().equalsIgnoreCase("DEBIT CARD") || pp.getModeOfPaymant().equalsIgnoreCase("CREDIT CARD") || pp.getModeOfPaymant().equalsIgnoreCase("CARD")))
                    {
                        fee=pp.getAmount();
                        cardAmt=pp.getAmount();
                        cashAmt=0;
                        chqAmt=0;
                        totalFeeAmt+=fee;
                        advAmt=0;
                        totalCardAmt+=cardAmt;
                        recpAmt=pp.getAmount();
                        dueAmt = recpAmt-cardAmt;
                        totalDueAmt+=dueAmt;
                        totalRecpAmt+=recpAmt;
                        
                    }
                    else if(pp.getTypeOfCharge().equalsIgnoreCase("Doctor Fee")&&pp.getModeOfPaymant().equalsIgnoreCase("DUE"))
                    {
                        fee=0;
                        chqAmt=0;
                        cashAmt=0;
                        cardAmt=0;
                        advAmt=0;
                        totalFeeAmt+=fee;
                        totalChqAmt+=0;
                        totalAdvcAmt+=advAmt;
                        recpAmt=0;
                        dueAmt =pp.getAmount();
                        totalDueAmt+=dueAmt;
                        totalRecpAmt+=recpAmt;
                    }
                    
                    else if(pp.getTypeOfCharge().equalsIgnoreCase("Doctor Fee")&&pp.getModeOfPaymant().equalsIgnoreCase("Cash+Card"))
                    {
                        fee=pp.getAmount();
                        chqAmt=0;
                        cashAmt=0;
                        cardAmt=0;
                        advAmt=0;
                        cashPlusCardDocAmt=pp.getAmount();
                        totalCashPlusCardDocAmt+=cashPlusCardDocAmt;
                        totalFeeAmt+=fee;
                        totalChqAmt+=0;
                        totalAdvcAmt+=advAmt;
                        recpAmt=fee;
                        dueAmt =0;
                        totalDueAmt+=dueAmt;
                        totalRecpAmt+=recpAmt;
                    }
                    }
                    }
                    }
                    }
                       
              
        
        PdfPCell cell1111;
        
        cell1111 = new PdfPCell(new Phrase("CONSULTATIONS", headFont));
        cell1111.setBorder(Rectangle.NO_BORDER);
        cell1111.setHorizontalAlignment(Element.ALIGN_LEFT);
        table11.addCell(cell1111);
        cell1111 = new PdfPCell(new Phrase(String.valueOf(totalFeeAmt), redFont));
        cell1111.setBorder(Rectangle.NO_BORDER);
        cell1111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell1111.setPaddingRight(42f);
        table11.addCell(cell1111);
    
        cell1111 = new PdfPCell(new Phrase("0", redFont));
        cell1111.setBorder(Rectangle.NO_BORDER);
        cell1111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell1111.setPaddingRight(12f);
        table11.addCell(cell1111);
        cell1111 = new PdfPCell(new Phrase(String.valueOf(totalFeeAmt), redFont));
        cell1111.setBorder(Rectangle.NO_BORDER);
        cell1111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell1111.setPaddingRight(20f);
        table11.addCell(cell1111);
    
        cell1111 = new PdfPCell(new Phrase(String.valueOf(totalAdvcAmt), redFont));
        cell1111.setBorder(Rectangle.NO_BORDER);
        cell1111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell1111.setPaddingRight(21f);
        table11.addCell(cell1111);
        cell1111 = new PdfPCell(new Phrase(String.valueOf(totalRecpAmt), redFont));
        cell1111.setBorder(Rectangle.NO_BORDER);
        cell1111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell1111.setPaddingRight(20f);
        table11.addCell(cell1111);
    
        cell1111 = new PdfPCell(new Phrase(String.valueOf(totalCashAmt), redFont));
        cell1111.setBorder(Rectangle.NO_BORDER);
        cell1111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell1111.setPaddingRight(19f);
        table11.addCell(cell1111);
        cell1111 = new PdfPCell(new Phrase(String.valueOf(totalChqAmt), redFont));
        cell1111.setBorder(Rectangle.NO_BORDER);
        cell1111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell1111.setPaddingRight(21f);
        table11.addCell(cell1111);
    
        cell1111 = new PdfPCell(new Phrase(String.valueOf(totalCardAmt), redFont));
        cell1111.setBorder(Rectangle.NO_BORDER);
        cell1111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell1111.setPaddingRight(13f);
        table11.addCell(cell1111);
        
        cell1111 = new PdfPCell(new Phrase(String.valueOf(totalCashPlusCardDocAmt), redFont));
        cell1111.setBorder(Rectangle.NO_BORDER);
        cell1111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        
        table11.addCell(cell1111);
        cell1111 = new PdfPCell(new Phrase(String.valueOf(totalDueAmt), redFont));
        cell1111.setBorder(Rectangle.NO_BORDER);
        cell1111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table11.addCell(cell1111);
        }
        else
        {
        	 PdfPCell cell1111;
             
             cell1111 = new PdfPCell(new Phrase("CONSULTATIONS", headFont));
             cell1111.setBorder(Rectangle.NO_BORDER);
             cell1111.setHorizontalAlignment(Element.ALIGN_LEFT);
             table11.addCell(cell1111);
             cell1111 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
             cell1111.setBorder(Rectangle.NO_BORDER);
             cell1111.setHorizontalAlignment(Element.ALIGN_RIGHT);
             cell1111.setPaddingRight(42f);
             table11.addCell(cell1111);
         
             cell1111 = new PdfPCell(new Phrase("0", redFont));
             cell1111.setBorder(Rectangle.NO_BORDER);
             cell1111.setHorizontalAlignment(Element.ALIGN_RIGHT);
             cell1111.setPaddingRight(12f);
             table11.addCell(cell1111);
             cell1111 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
             cell1111.setBorder(Rectangle.NO_BORDER);
             cell1111.setHorizontalAlignment(Element.ALIGN_RIGHT);
             cell1111.setPaddingRight(20f);
             table11.addCell(cell1111);
         
             cell1111 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
             cell1111.setBorder(Rectangle.NO_BORDER);
             cell1111.setHorizontalAlignment(Element.ALIGN_RIGHT);
             cell1111.setPaddingRight(21f);
             table11.addCell(cell1111);
             cell1111 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
             cell1111.setBorder(Rectangle.NO_BORDER);
             cell1111.setHorizontalAlignment(Element.ALIGN_RIGHT);
             cell1111.setPaddingRight(20f);
             table11.addCell(cell1111);
         
             cell1111 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
             cell1111.setBorder(Rectangle.NO_BORDER);
             cell1111.setHorizontalAlignment(Element.ALIGN_RIGHT);
             cell1111.setPaddingRight(19f);
             table11.addCell(cell1111);
             cell1111 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
             cell1111.setBorder(Rectangle.NO_BORDER);
             cell1111.setHorizontalAlignment(Element.ALIGN_RIGHT);
             cell1111.setPaddingRight(21f);
             table11.addCell(cell1111);
         
             cell1111 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
             cell1111.setBorder(Rectangle.NO_BORDER);
             cell1111.setHorizontalAlignment(Element.ALIGN_RIGHT);
             cell1111.setPaddingRight(13f);
             table11.addCell(cell1111);
             
             cell1111 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
             cell1111.setBorder(Rectangle.NO_BORDER);
             cell1111.setHorizontalAlignment(Element.ALIGN_RIGHT);
             
             table11.addCell(cell1111);
             cell1111 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
             cell1111.setBorder(Rectangle.NO_BORDER);
             cell1111.setHorizontalAlignment(Element.ALIGN_RIGHT);
             table11.addCell(cell1111);
             
        }
        cell1.addElement(table11);
        
//--------------------------- REGISTRATIONS --------------------------------------------
        
        PdfPTable table10 = new PdfPTable(11);
        table10.setWidths(new float[] {  7.5f, 4f, 1.5f, 4f, 4f, 4f, 4f, 3f, 4f,4.5f,3f});
        table10.setSpacingBefore(10);
        table10.setWidthPercentage(100f);
        
        long regFee = 0;
        long cashAmtReg = 0;
        long chqAmtReg = 0;
        long cardAmtReg = 0;
        long recpAmtReg = 0;
        long dueAmtReg = 0;
        float advAmtReg=0;
        float totalFeeAmtReg = 0;
        float totalCashAmtReg = 0;
        float totalCardAmtReg = 0;
        float totalChqAmtReg=0;
        float totalRecpAmtReg=0;
        float totalDueAmtReg = 0;
        float totalAdvcAmtReg=0;
        float cashPlusCardRegAmt=0;
        float totalCashPlusCardRegAmt=0;
        
       if(!patientRegistration.isEmpty())
       {
    	   for (PatientRegistration pReg : patientRegistration) 
            {
                pId = pReg.getRegId();
                Set<PatientPayment> patientPayments = paymentRepository.findByPatientRegistration(pReg);
                //Set<PatientPayment> patientPayments = pReg.getPatientPayment();
                for(PatientPayment pp : patientPayments)
                {
                    if(pp.getAmount()!=0)
                    {
                    if(pp.getTypeOfCharge().equalsIgnoreCase("Reg Fees"))
                    {
                        if(pp.getTypeOfCharge().equalsIgnoreCase("Reg Fees")&&pp.getModeOfPaymant().equalsIgnoreCase("CASH"))
                        {
                            regFee=pp.getAmount();
                            cashAmtReg=pp.getAmount();
                            chqAmtReg=0;
                            cardAmtReg=0;
                            advAmtReg = 0;
                            recpAmtReg=pp.getAmount();
                            dueAmtReg=0;
                            totalFeeAmtReg+=regFee;
                            totalCashAmtReg+=cashAmtReg;
                            totalDueAmtReg+=dueAmtReg;
                            totalRecpAmtReg+=recpAmtReg;
                        }
                        else if(pp.getTypeOfCharge().equalsIgnoreCase("Reg Fees")&&(pp.getModeOfPaymant().equalsIgnoreCase("CHQ")||pp.getModeOfPaymant().equalsIgnoreCase("CHEQUE")))
                        {
                            regFee=pp.getAmount();
                            chqAmtReg=pp.getAmount();
                            cashAmtReg=0;
                            cardAmtReg=0;
                            advAmtReg = 0;
                            recpAmtReg=pp.getAmount();
                            dueAmtReg=0;
                            totalFeeAmtReg+=regFee;
                            totalChqAmtReg+=chqAmtReg;
                            totalDueAmtReg=dueAmtReg;
                            totalRecpAmtReg+=recpAmtReg;
                        }
                        
                        else if(pp.getTypeOfCharge().equalsIgnoreCase("Reg Fees")&&(pp.getModeOfPaymant().equalsIgnoreCase("DEBIT CARD") || pp.getModeOfPaymant().equalsIgnoreCase("CREDIT CARD") || pp.getModeOfPaymant().equalsIgnoreCase("CARD")))
                        {
                            regFee=pp.getAmount();
                            cardAmtReg=regFee;
                            cashAmtReg=0;
                            chqAmtReg=0;
                            advAmtReg = 0;
                            recpAmtReg=pp.getAmount();
                            dueAmtReg=0;
                            totalFeeAmtReg+=regFee;
                            totalCardAmtReg+=cardAmtReg;
                            totalDueAmtReg=dueAmtReg;
                            totalRecpAmtReg+=recpAmtReg;
                        }
                        else if(pp.getTypeOfCharge().equalsIgnoreCase("Reg Fees")&&pp.getModeOfPaymant().equalsIgnoreCase("ADVANCE"))
                        {
                            regFee=pp.getAmount();
                            chqAmtReg=0;
                            cashAmtReg=0;
                            cardAmtReg=0;
                            advAmtReg=pp.getAmount();
                            totalFeeAmtReg+=regFee;
                           // totalChqAmtReg+=0;
                            //totalCardAmtReg=0;
                            totalAdvcAmtReg+=advAmtReg;
                            recpAmtReg=0;
                            dueAmtReg =0;
                            totalDueAmtReg+=dueAmtReg;
                            totalRecpAmtReg+=recpAmtReg;
                        }
                
                        else if(pp.getTypeOfCharge().equalsIgnoreCase("Reg Fees")&&pp.getModeOfPaymant().equalsIgnoreCase("DUE"))
                        {
                            regFee=0;
                            chqAmtReg=0;
                            cashAmtReg=0;
                            cardAmtReg=0;
                            advAmtReg=0;
                            totalFeeAmtReg+=regFee;
                           // totalChqAmtReg=0;
                           // totalCardAmtReg=0;
                            totalAdvcAmtReg+=advAmtReg;
                            recpAmtReg=0;
                            dueAmtReg =pp.getAmount();
                            totalDueAmtReg+=dueAmtReg;
                            totalRecpAmtReg+=recpAmtReg;
                        }
                        else if(pp.getTypeOfCharge().equalsIgnoreCase("Reg Fees")&&pp.getModeOfPaymant().equalsIgnoreCase("Cash+Card"))
                        {
                            regFee=pp.getAmount();
                            chqAmtReg=0;
                            cashAmtReg=0;
                            cardAmtReg=0;
                            advAmtReg=0;
                            cashPlusCardRegAmt=regFee;
                            totalCashPlusCardRegAmt+=cashPlusCardRegAmt;
                            totalFeeAmtReg+=regFee;
                           // totalChqAmtReg=0;
                          //  totalCardAmtReg=0;
                            totalAdvcAmtReg+=advAmtReg;
                            recpAmtReg=regFee;
                            dueAmtReg =0;
                            totalDueAmtReg+=dueAmtReg;
                            totalRecpAmtReg+=recpAmtReg;
                        }
}
}
}
            }
        
        PdfPCell cell04;
        
        cell04 = new PdfPCell(new Phrase("REGISTRATIONS", headFont));
        cell04.setBorder(Rectangle.NO_BORDER);
        cell04.setHorizontalAlignment(Element.ALIGN_LEFT);
        table10.addCell(cell04);
        cell04 = new PdfPCell(new Phrase(String.valueOf(totalFeeAmtReg), redFont));
        cell04.setBorder(Rectangle.NO_BORDER);
        cell04.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell04.setPaddingRight(42f);
        table10.addCell(cell04);
    
        cell04 = new PdfPCell(new Phrase("0", redFont));
        cell04.setBorder(Rectangle.NO_BORDER);
        cell04.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell04.setPaddingRight(12f);
        table10.addCell(cell04);
        cell04 = new PdfPCell(new Phrase(String.valueOf(totalFeeAmtReg), redFont));
        cell04.setBorder(Rectangle.NO_BORDER);
        cell04.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell04.setPaddingRight(20f);
        table10.addCell(cell04);
    
        cell04 = new PdfPCell(new Phrase(String.valueOf(totalAdvcAmtReg), redFont));
        cell04.setBorder(Rectangle.NO_BORDER);
        cell04.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell04.setPaddingRight(21f);
        table10.addCell(cell04);
        cell04 = new PdfPCell(new Phrase(String.valueOf(totalRecpAmtReg), redFont));
        cell04.setBorder(Rectangle.NO_BORDER);
        cell04.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell04.setPaddingRight(20f);
        table10.addCell(cell04);
    
        cell04 = new PdfPCell(new Phrase(String.valueOf(totalCashAmtReg), redFont));
        cell04.setBorder(Rectangle.NO_BORDER);
        cell04.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell04.setPaddingRight(19f);
        table10.addCell(cell04);
        cell04 = new PdfPCell(new Phrase(String.valueOf(totalChqAmtReg), redFont));
        cell04.setBorder(Rectangle.NO_BORDER);
        cell04.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell04.setPaddingRight(21f);
        table10.addCell(cell04);
    
        cell04 = new PdfPCell(new Phrase(String.valueOf(totalCardAmtReg), redFont));
        cell04.setBorder(Rectangle.NO_BORDER);
        cell04.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell04.setPaddingRight(13f);
        table10.addCell(cell04);
        
        cell04 = new PdfPCell(new Phrase(String.valueOf(totalCashPlusCardRegAmt), redFont));
        cell04.setBorder(Rectangle.NO_BORDER);
        cell04.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table10.addCell(cell04);
        cell04 = new PdfPCell(new Phrase(String.valueOf(totalDueAmtReg), redFont));
        cell04.setBorder(Rectangle.NO_BORDER);
        cell04.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table10.addCell(cell04);
            }
    	   else
    	   {
    		   PdfPCell cell04;
    	        
    	        cell04 = new PdfPCell(new Phrase("REGISTRATIONS", headFont));
    	        cell04.setBorder(Rectangle.NO_BORDER);
    	        cell04.setHorizontalAlignment(Element.ALIGN_LEFT);
    	        table10.addCell(cell04);
    	        cell04 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
    	        cell04.setBorder(Rectangle.NO_BORDER);
    	        cell04.setHorizontalAlignment(Element.ALIGN_RIGHT);
    	        cell04.setPaddingRight(42f);
    	        table10.addCell(cell04);
    	    
    	        cell04 = new PdfPCell(new Phrase("0", redFont));
    	        cell04.setBorder(Rectangle.NO_BORDER);
    	        cell04.setHorizontalAlignment(Element.ALIGN_RIGHT);
    	        cell04.setPaddingRight(12f);
    	        table10.addCell(cell04);
    	        cell04 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
    	        cell04.setBorder(Rectangle.NO_BORDER);
    	        cell04.setHorizontalAlignment(Element.ALIGN_RIGHT);
    	        cell04.setPaddingRight(20f);
    	        table10.addCell(cell04);
    	    
    	        cell04 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
    	        cell04.setBorder(Rectangle.NO_BORDER);
    	        cell04.setHorizontalAlignment(Element.ALIGN_RIGHT);
    	        cell04.setPaddingRight(21f);
    	        table10.addCell(cell04);
    	        cell04 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
    	        cell04.setBorder(Rectangle.NO_BORDER);
    	        cell04.setHorizontalAlignment(Element.ALIGN_RIGHT);
    	        cell04.setPaddingRight(20f);
    	        table10.addCell(cell04);
    	    
    	        cell04 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
    	        cell04.setBorder(Rectangle.NO_BORDER);
    	        cell04.setHorizontalAlignment(Element.ALIGN_RIGHT);
    	        cell04.setPaddingRight(19f);
    	        table10.addCell(cell04);
    	        cell04 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
    	        cell04.setBorder(Rectangle.NO_BORDER);
    	        cell04.setHorizontalAlignment(Element.ALIGN_RIGHT);
    	        cell04.setPaddingRight(21f);
    	        table10.addCell(cell04);
    	    
    	        cell04 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
    	        cell04.setBorder(Rectangle.NO_BORDER);
    	        cell04.setHorizontalAlignment(Element.ALIGN_RIGHT);
    	        cell04.setPaddingRight(13f);
    	        table10.addCell(cell04);
    	        
    	        cell04 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
    	        cell04.setBorder(Rectangle.NO_BORDER);
    	        cell04.setHorizontalAlignment(Element.ALIGN_RIGHT);
    	        table10.addCell(cell04);
    	        cell04 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
    	        cell04.setBorder(Rectangle.NO_BORDER);
    	        cell04.setHorizontalAlignment(Element.ALIGN_RIGHT);
    	        table10.addCell(cell04);
    	   }
        cell1.addElement(table10);
        
//---------------------------------- IP BILLS ---------------------------------------
        
        PdfPTable table14 = new PdfPTable(11);
        table14.setWidths(new float[] {  7.5f, 4f, 1.5f, 4f, 4f, 4f, 4f, 3f, 4f,4.5f,3f});
        table14.setSpacingBefore(10);
        table14.setWidthPercentage(100f);
        float ipFee = 0;
        float ipCashAmt1 = 0;
        float ipChqAmt1 = 0;
        float ipCardAmt1 = 0;
        float ipAdvAmt = 0;
        float totalIpFeeAmt1 = 0;
        float totalIpCashAmt1 = 0;
        float totalIpCardAmt1 = 0;
        float totalIpChqAmt1 = 0;
        float totalIpDueAmt1 = 0;
        float ipDueAmt1=0;
        float ipRecpAmt1=0;
        float totalIpRecAmt1=0;
        float totalIpAdvAmt = 0;
        float ipCashPlusCardAmt=0;
        float ipTotalCashPlusCardAmt=0;
                    
        if(!patientRegistration.isEmpty())
        {
        for(PatientRegistration pReg : patientRegistration)
        {
            patientType=pReg.getpType();
            pId = pReg.getRegId();
            //Set<PatientPayment> patientPayments = pReg.getPatientPayment();
            
            List<ChargeBill> chargeBillService=chargeBillRepository.findByPatRegIdsAndServiceId(pId);
            Set<PatientPayment> patientPayments = paymentRepository.findByPatientRegistration(pReg);
            List<ChargeBill> charge=chargeBillRepository.findByPatRegId(pReg);
            for(ChargeBill pp : chargeBillService)
            {
                /*if(pp.getServiceId()!=null)
                {
                cServiceId=pp.getServiceId().getServiceId();
                serviceType=pp.getServiceId().getServiceType();
                */
                //cServiceId=pp.getServiceId().getServiceId();
                /*LabServices lab=labServicesRepository.findByServiceId(cServiceId);
                lServiceId=lab.getServiceId();
                */
                if(pp.getAmount()!=0)
                {
           
                if(patientType.equalsIgnoreCase("INPATIENT") && !pp.getServiceId().getServiceType().equalsIgnoreCase("Lab"))
                {
                    if(pp.getServiceId()!=null)
                    {
                        if(pp.getPaymentType().equalsIgnoreCase("CASH"))
                        {
                             
                            ipFee=pp.getNetAmount();
                            ipAdvAmt=pp.getNetAmount();
                            ipCashAmt1=pp.getNetAmount();
                            ipChqAmt1=0;
                            ipCardAmt1=0;
                            totalIpFeeAmt1+=ipFee;
                            totalIpCashAmt1+=ipCashAmt1;
                            ipRecpAmt1=pp.getNetAmount();
                            ipDueAmt1 =0;
                            totalIpDueAmt1+=ipDueAmt1;
                            totalIpRecAmt1+=ipRecpAmt1;
                        }
                        else if(pp.getPaymentType().equalsIgnoreCase("CHQ")||pp.getPaymentType().equalsIgnoreCase("CHEQUE"))
                        {
                    
                            ipFee=pp.getNetAmount();
                            ipChqAmt1=pp.getNetAmount();
                            ipCashAmt1=0;
                            ipCardAmt1=0;
                            ipAdvAmt=0;
                            totalIpFeeAmt1+=ipFee;
                            totalIpChqAmt1+=ipChqAmt1;
                            ipRecpAmt1=pp.getNetAmount();
                            ipDueAmt1 = 0;
                            totalIpDueAmt1+=ipDueAmt1;
                            totalIpRecAmt1+=ipRecpAmt1;
                        }
                        else if(pp.getPaymentType().equalsIgnoreCase("DEBIT CARD") || pp.getPaymentType().equalsIgnoreCase("CREDIT CARD") || pp.getPaymentType().equalsIgnoreCase("CARD"))
                        {
                            
                                ipFee=pp.getNetAmount();
                                ipCardAmt1=pp.getNetAmount();
                                ipChqAmt1=0;
                                ipCashAmt1=0;
                                ipAdvAmt=0;
                                totalIpFeeAmt1+=ipFee;
                                totalIpCardAmt1+=ipCardAmt1;
                                ipRecpAmt1=pp.getNetAmount();
                                ipDueAmt1 = 0;
                                totalIpDueAmt1+=ipDueAmt1;
                                totalIpRecAmt1+=ipRecpAmt1;
                                
                        
                        }
                        else if(pp.getPaymentType().equalsIgnoreCase("ADVANCE"))
                        {
                            
                            
                            ipFee=pp.getNetAmount();
                            ipCashAmt1=0;
                            ipCardAmt1=0;
                            ipChqAmt1=0;
                            ipAdvAmt=pp.getNetAmount();
                            totalIpFeeAmt1+=ipAdvAmt;
                            ipRecpAmt1=0;
                            ipDueAmt1 = 0;
                            totalIpAdvAmt+=ipAdvAmt;
                            totalIpCardAmt1+=ipCardAmt1;
                            totalIpDueAmt1+=ipDueAmt1;
                            totalIpRecAmt1+=ipRecpAmt1;
                            
                        } else if(pp.getPaymentType().equalsIgnoreCase("DUE"))
                        {
                            
                            
                            ipFee=0;
                            ipCashAmt1=0;
                            ipCardAmt1=0;
                            ipChqAmt1=0;
                            ipAdvAmt=0;
                            totalIpFeeAmt1=0;
                            ipRecpAmt1=0;
                            ipDueAmt1 =pp.getNetAmount();
                            totalIpAdvAmt=0;
                           // totalIpCardAmt1+=ipCardAmt1;
                            totalIpDueAmt1+=ipDueAmt1;
                            totalIpRecAmt1+=ipRecpAmt1;
                            
                        }
                        else if(pp.getPaymentType().equalsIgnoreCase("Cash+Card"))
                        {
                            
                            
                            ipFee=pp.getNetAmount();
                            ipCashAmt1=0;
                            ipCardAmt1=0;
                            ipChqAmt1=0;
                            ipAdvAmt=0;
                            ipCashPlusCardAmt=ipFee;
                            ipTotalCashPlusCardAmt+=ipCashPlusCardAmt;
                            totalIpFeeAmt1+=ipFee;
                            ipRecpAmt1=0;
                            ipDueAmt1 =0;
                            totalIpAdvAmt+=ipAdvAmt;
                            totalIpCardAmt1+=ipCardAmt1;
                            totalIpDueAmt1+=ipDueAmt1;
                            totalIpRecAmt1+=ipRecpAmt1;
                            
                        }
}
}
}
}
}

            
        
            
            
            PdfPCell cell041;
            
            cell041 = new PdfPCell(new Phrase("IP BILLS", headFont));
            cell041.setBorder(Rectangle.NO_BORDER);
            cell041.setHorizontalAlignment(Element.ALIGN_LEFT);
            //cell041.setPaddingTop(10f);
            table14.addCell(cell041);
            cell041 = new PdfPCell(new Phrase(String.valueOf(totalIpFeeAmt1), redFont));
            cell041.setBorder(Rectangle.NO_BORDER);
            cell041.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell041.setPaddingTop(10f);
            cell041.setPaddingRight(42f);
            table14.addCell(cell041);
        
            cell041 = new PdfPCell(new Phrase("0", redFont));
            cell041.setBorder(Rectangle.NO_BORDER);
            cell041.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell041.setPaddingRight(12f);
            //cell041.setPaddingTop(10f);
            table14.addCell(cell041);
            cell041 = new PdfPCell(new Phrase(String.valueOf(totalIpFeeAmt1), redFont));
            cell041.setBorder(Rectangle.NO_BORDER);
            cell041.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell041.setPaddingTop(10f);
            cell041.setPaddingRight(20f);
            table14.addCell(cell041);
        
            cell041 = new PdfPCell(new Phrase(String.valueOf(totalIpAdvAmt), redFont));
            cell041.setBorder(Rectangle.NO_BORDER);
            cell041.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell041.setPaddingRight(21f);
            //cell041.setPaddingTop(10f);
            table14.addCell(cell041);
            cell041 = new PdfPCell(new Phrase(String.valueOf(totalIpRecAmt1), redFont));
            cell041.setBorder(Rectangle.NO_BORDER);
            cell041.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell041.setPaddingTop(10f);
            cell041.setPaddingRight(20f);
            table14.addCell(cell041);
        
            cell041 = new PdfPCell(new Phrase(String.valueOf(totalIpCashAmt1), redFont));
            cell041.setBorder(Rectangle.NO_BORDER);
            cell041.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell041.setPaddingRight(19f);
            //cell041.setPaddingTop(10f);
            table14.addCell(cell041);
            cell041 = new PdfPCell(new Phrase(String.valueOf(totalIpChqAmt1), redFont));
            cell041.setBorder(Rectangle.NO_BORDER);
            cell041.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell041.setPaddingRight(21f);
            //cell041.setPaddingTop(10f);
            table14.addCell(cell041);
        
            cell041 = new PdfPCell(new Phrase(String.valueOf(totalIpCardAmt1), redFont));
            cell041.setBorder(Rectangle.NO_BORDER);
            cell041.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell041.setPaddingRight(13f);
            //cell041.setPaddingTop(10f);
            table14.addCell(cell041);
            
            cell041 = new PdfPCell(new Phrase(String.valueOf(ipTotalCashPlusCardAmt), redFont));
            cell041.setBorder(Rectangle.NO_BORDER);
            cell041.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell041.setPaddingTop(10f);
            table14.addCell(cell041);
            cell041 = new PdfPCell(new Phrase(String.valueOf(totalIpDueAmt1), redFont));
            cell041.setBorder(Rectangle.NO_BORDER);
            cell041.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell041.setPaddingTop(10f);
            table14.addCell(cell041);
        }
        else
        {
            PdfPCell cell041;
            
            cell041 = new PdfPCell(new Phrase("IP BILLS", headFont));
            cell041.setBorder(Rectangle.NO_BORDER);
            cell041.setHorizontalAlignment(Element.ALIGN_LEFT);
            //cell041.setPaddingTop(10f);
            table14.addCell(cell041);
            cell041 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
            cell041.setBorder(Rectangle.NO_BORDER);
            cell041.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell041.setPaddingTop(10f);
            cell041.setPaddingRight(42f);
            table14.addCell(cell041);
        
            cell041 = new PdfPCell(new Phrase("0", redFont));
            cell041.setBorder(Rectangle.NO_BORDER);
            cell041.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell041.setPaddingRight(12f);
            //cell041.setPaddingTop(10f);
            table14.addCell(cell041);
            cell041 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
            cell041.setBorder(Rectangle.NO_BORDER);
            cell041.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell041.setPaddingTop(10f);
            cell041.setPaddingRight(20f);
            table14.addCell(cell041);
        
            cell041 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
            cell041.setBorder(Rectangle.NO_BORDER);
            cell041.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell041.setPaddingRight(21f);
            //cell041.setPaddingTop(10f);
            table14.addCell(cell041);
            cell041 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
            cell041.setBorder(Rectangle.NO_BORDER);
            cell041.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell041.setPaddingTop(10f);
            cell041.setPaddingRight(20f);
            table14.addCell(cell041);
        
            cell041 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
            cell041.setBorder(Rectangle.NO_BORDER);
            cell041.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell041.setPaddingRight(19f);
            //cell041.setPaddingTop(10f);
            table14.addCell(cell041);
            cell041 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
            cell041.setBorder(Rectangle.NO_BORDER);
            cell041.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell041.setPaddingRight(21f);
            //cell041.setPaddingTop(10f);
            table14.addCell(cell041);
        
            cell041 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
            cell041.setBorder(Rectangle.NO_BORDER);
            cell041.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell041.setPaddingRight(13f);
            //cell041.setPaddingTop(10f);
            table14.addCell(cell041);
            
            cell041 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
            cell041.setBorder(Rectangle.NO_BORDER);
            cell041.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell041.setPaddingTop(10f);
            table14.addCell(cell041);
            cell041 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
            cell041.setBorder(Rectangle.NO_BORDER);
            cell041.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell041.setPaddingTop(10f);
            table14.addCell(cell041);

        }
            cell1.addElement(table14);
            
            
            
            PdfPTable table81 = new PdfPTable(11);
            table81.setWidths(new float[] {7.5f, 4f, 1.5f, 4f, 4f, 4f, 4f, 3f, 4f,4.5f,3f});
            table81.setSpacingBefore(10);
            table81.setWidthPercentage(100f);
            
            //-----------------------------------IP ADVANCE BILL---------------------
            
            List<Map<String, String>> show7 = new ArrayList<>();
            List<String> info7 = new ArrayList<>();
            Map<String, String> displayInfo7 = null; 
            
            
            String patientTypeIp=null;
            String patientIpName=null;
            String ipUmr=null;
            String ipConsultant=null;
            long ipAdvFee = 0;
            long ipAdvFee1 = 0;
            long ipAdvCashAmt1 = 0;
            long ipAdvChqAmt1 = 0;
            long ipAdvCardAmt1 = 0;
            long ipAdvAdAmt1=0;
            float totalipAdvFeeAmt1 = 0;
            float totalipAdvCashAmt1 = 0;
            float totalipAdvCardAmt1 = 0;
            float totalipAdvChqAmt1 = 0;
            float totalipAdvDueAmt1 = 0;
            float totalipAdvAdvcAmt1=0;
            long dueipAdvAmt1=0;
            long recpipAdvAmt1=0;
            float totalipAdvRecpAmt1=0;
            float cashPlusCardipAdvAmt1=0;
            float totalCashPlusCardipAdvAmt1=0;
            
            long ipAdvCashAmt = 0;
            long ipAdvChqAmt = 0;
            long ipAdvCardAmt = 0;
            long ipAdvAdAmt=0;
            float totalipAdvFeeAmt = 0;
            float totalipAdvCashAmt = 0;
            float totalipAdvCardAmt = 0;
            float totalipAdvChqAmt = 0;
            float totalipAdvDueAmt = 0;
            float totalipAdvAdvcAmt=0;
            long dueipAdvAmt=0;
            long recpipAdvAmt=0;
            float totalipAdvRecpAmt=0;
            float cashPlusCardipAdvAmt=0;
            float totalCashPlusCardipAdvAmt=0;
            String paymentMode=null;
          
            List<PatientPayment> patientPayment = paymentRepository.findUserWiseIpOpDetailed(user.get("fromDate"), user.get("toDate"),uId);
            if(!patientPayment.isEmpty())
            {
            for(PatientPayment pp : patientPayment)
            {
                                if(pp.getAmount()!=0)
                                {
                    
                                    if(pp.getPatientRegistration().getRegId()!=null && pp.getPatientRegistration().getpType().equalsIgnoreCase("INPATIENT") && pp.getTypeOfCharge().equalsIgnoreCase("ADVANCE"))
                                    {
                                    
                                                    if(pp.getModeOfPaymant().equalsIgnoreCase("CASH"))
                                                    {
                                                        
                                                        
                                                        ipAdvFee=pp.getAmount();
                                                        ipAdvAdAmt=0;
                                                       ipAdvCashAmt=ipAdvFee;
                                                        ipAdvChqAmt=0;
                                                        ipAdvCardAmt=0;
                                                        cashPlusCardipAdvAmt=0;
                                                        totalipAdvFeeAmt+=ipAdvFee;
                                                        totalipAdvCashAmt+=ipAdvCashAmt;
                                                        recpipAdvAmt=ipAdvCashAmt;
                                                        dueipAdvAmt = 0;
                                                        totalipAdvDueAmt+=dueipAdvAmt;
                                                        totalipAdvRecpAmt+=recpipAdvAmt;
                                                    }
                                                    else if(pp.getModeOfPaymant().equalsIgnoreCase("CHQ")||pp.getModeOfPaymant().equalsIgnoreCase("CHEQUE"))
                                                    {
                                                
                                                        
                                                        ipAdvFee=pp.getAmount();
                                                        ipAdvChqAmt=pp.getAmount();
                                                        ipAdvCashAmt=0;
                                                        ipAdvCardAmt=0;
                                                        ipAdvAdAmt=0;
                                                        cashPlusCardipAdvAmt=0;
                                                        totalipAdvFeeAmt+=ipAdvFee;
                                                        totalipAdvChqAmt+=ipAdvChqAmt;
                                                        recpipAdvAmt=pp.getAmount();
                                                        dueipAdvAmt = 0;
                                                        totalipAdvDueAmt+=dueipAdvAmt;
                                                        totalipAdvRecpAmt+=recpipAdvAmt;
                                                    }
                                                    else if(pp.getModeOfPaymant().equalsIgnoreCase("DEBIT CARD") || pp.getModeOfPaymant().equalsIgnoreCase("CREDIT CARD") || pp.getModeOfPaymant().equalsIgnoreCase("CARD"))
                                                    {
                                                        
                                                        ipAdvFee=pp.getAmount();
                                                        ipAdvCardAmt=pp.getAmount();
                                                        ipAdvChqAmt=0;
                                                        ipAdvCashAmt=0;
                                                        ipAdvAdAmt=0;
                                                        totalipAdvFeeAmt+=ipAdvFee;
                                                        totalipAdvCardAmt+=ipAdvCardAmt;
                                                        recpipAdvAmt=pp.getAmount();
                                                        dueipAdvAmt = 0;
                                                        totalipAdvDueAmt+=dueipAdvAmt;
                                                        totalipAdvRecpAmt+=recpipAdvAmt;
                                                            
                                                    
                                                    }
                                                    else if(pp.getModeOfPaymant().equalsIgnoreCase("ADVANCE"))
                                                    {
                                                        
                                                        
                                                        ipAdvFee=pp.getAmount();
                                                        ipAdvCashAmt=0;
                                                        ipAdvCardAmt=0;
                                                        ipAdvChqAmt=0;
                                                        ipAdvAdAmt=pp.getAmount();
                                                        totalipAdvFeeAmt+=ipAdvAdAmt;
                                                        recpipAdvAmt=0;
                                                        dueipAdvAmt = 0;
                                                        totalipAdvAdvcAmt+=ipAdvAdAmt;
                                                        totalipAdvCardAmt+=ipAdvCardAmt;
                                                        totalipAdvDueAmt+=dueipAdvAmt;
                                                        totalipAdvRecpAmt+=recpipAdvAmt;
                                                        
                                                    }
                         
                                                    else if(pp.getModeOfPaymant().equalsIgnoreCase("due"))
                                                    {
                                                        
                                                        
                                                        ipAdvFee=0;
                                                        ipAdvCashAmt=0;
                                                        ipAdvCardAmt=0;
                                                        ipAdvChqAmt=0;
                                                        ipAdvAdAmt=0;
                                                        cashPlusCardipAdvAmt=0;
                                                        totalipAdvFeeAmt+=ipAdvFee;
                                                        recpipAdvAmt=0;
                                                        dueipAdvAmt =pp.getAmount()    ;
                                                        totalipAdvAdvcAmt+=ipAdvAdAmt;
                                                        totalipAdvCardAmt+=ipAdvCardAmt;
                                                        totalipAdvDueAmt+=dueipAdvAmt;
                                                        totalipAdvRecpAmt+=recpipAdvAmt;
                                                        
                                                    }
                                                    else if(pp.getModeOfPaymant().equalsIgnoreCase("Cash+Card"))
                                                    {
                                                        
                                                        
                                                        ipAdvFee=pp.getAmount(); 
                                                        ipAdvCashAmt=0;
                                                        ipAdvCardAmt=0;
                                                        ipAdvChqAmt=0;
                                                        ipAdvAdAmt=0;
                                                        cashPlusCardipAdvAmt=ipAdvFee; 
                                                        totalCashPlusCardipAdvAmt+=cashPlusCardipAdvAmt; 
                                                        totalipAdvFeeAmt+=ipAdvFee; 
                                                        recpipAdvAmt=ipAdvFee;
                                                        dueipAdvAmt =0;
                                                        totalipAdvAdvcAmt+=ipAdvAdAmt;
                                                        totalIpCardAmt1+=ipCardAmt1;
                                                        totalipAdvDueAmt+=dueipAdvAmt;
                                                        totalipAdvRecpAmt+=recpipAdvAmt;
                                                        
                                                    }
                                            
                                                }
                                
                                            }
                    
                                        }
                                
            
            
            
            /*PdfPTable table081 = new PdfPTable(1);
            table081.setWidths(new float[] {6});
            table081.setSpacingBefore(10);
            table081.setWidthPercentage(100f);
            
            PdfPCell hcell043;
            hcell043 = new PdfPCell(new Phrase("",headFont));
            hcell043.setBorder(Rectangle.NO_BORDER);
            hcell043.setHorizontalAlignment(Element.ALIGN_LEFT);
            hcell043.setPaddingBottom(-10f);
            table081.addCell(hcell043);
            cell1.addElement(table081);*/
            
          
            PdfPCell cell0411;
            cell0411 = new PdfPCell(new Phrase("IP ADVANCE BILLS", headFont));
            cell0411.setBorder(Rectangle.NO_BORDER);
            cell0411.setHorizontalAlignment(Element.ALIGN_LEFT);
            //cell0411.setPaddingTop(10f);
            table81.addCell(cell0411);
            cell0411 = new PdfPCell(new Phrase(String.valueOf(totalipAdvFeeAmt), redFont));
            cell0411.setBorder(Rectangle.NO_BORDER);
            cell0411.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell0411.setPaddingRight(42f);
            //cell0411.setPaddingTop(10f);
            //cell0411.setPaddingRight(20f);
            table81.addCell(cell0411);
        
            cell0411 = new PdfPCell(new Phrase("0", redFont));
            cell0411.setBorder(Rectangle.NO_BORDER);
            cell0411.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell0411.setPaddingRight(12f);
            //cell0411.setPaddingTop(10f);
            table81.addCell(cell0411);
            cell0411 = new PdfPCell(new Phrase(String.valueOf(totalipAdvFeeAmt), redFont));
            cell0411.setBorder(Rectangle.NO_BORDER);
            cell0411.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell0411.setPaddingTop(10f);
            cell0411.setPaddingRight(20f);
            table81.addCell(cell0411);
        
            cell0411 = new PdfPCell(new Phrase(String.valueOf(totalipAdvAdvcAmt), redFont));
            cell0411.setBorder(Rectangle.NO_BORDER);
            cell0411.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell0411.setPaddingRight(21f);
            //cell0411.setPaddingTop(10f);
            table81.addCell(cell0411);
            cell0411 = new PdfPCell(new Phrase(String.valueOf(totalipAdvRecpAmt), redFont));
            cell0411.setBorder(Rectangle.NO_BORDER);
            cell0411.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell0411.setPaddingTop(10f);
            cell0411.setPaddingRight(20f);
            table81.addCell(cell0411);
        
            cell0411 = new PdfPCell(new Phrase(String.valueOf(totalipAdvCashAmt), redFont));
            cell0411.setBorder(Rectangle.NO_BORDER);
            cell0411.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell0411.setPaddingRight(19f);
            //cell0411.setPaddingTop(10f);
            table81.addCell(cell0411);
            cell0411 = new PdfPCell(new Phrase(String.valueOf(totalipAdvChqAmt), redFont));
            cell0411.setBorder(Rectangle.NO_BORDER);
            cell0411.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell0411.setPaddingRight(21f);
        //    cell0411.setPaddingTop(10f);
            table81.addCell(cell0411);
        
            cell0411 = new PdfPCell(new Phrase(String.valueOf(totalipAdvCardAmt), redFont));
            cell0411.setBorder(Rectangle.NO_BORDER);
            cell0411.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell0411.setPaddingRight(13f);
            //cell0411.setPaddingTop(10f);
            table81.addCell(cell0411);
            
            cell0411 = new PdfPCell(new Phrase(String.valueOf(totalCashPlusCardipAdvAmt), redFont));
            cell0411.setBorder(Rectangle.NO_BORDER);
            cell0411.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell0411.setPaddingRight(15f);
            //cell0411.setPaddingTop(10f);
            table81.addCell(cell0411);
            cell0411 = new PdfPCell(new Phrase(String.valueOf(totalipAdvDueAmt), redFont));
            cell0411.setBorder(Rectangle.NO_BORDER);
            cell0411.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell0411.setPaddingTop(10f);
            table81.addCell(cell0411);
            }
            else
            {
            	 PdfPCell cell0411;
                 cell0411 = new PdfPCell(new Phrase("IP ADVANCE BILLS", headFont));
                 cell0411.setBorder(Rectangle.NO_BORDER);
                 cell0411.setHorizontalAlignment(Element.ALIGN_LEFT);
                 //cell0411.setPaddingTop(10f);
                 table81.addCell(cell0411);
                 cell0411 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
                 cell0411.setBorder(Rectangle.NO_BORDER);
                 cell0411.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 cell0411.setPaddingRight(42f);
                 //cell0411.setPaddingTop(10f);
                 //cell0411.setPaddingRight(20f);
                 table81.addCell(cell0411);
             
                 cell0411 = new PdfPCell(new Phrase("0", redFont));
                 cell0411.setBorder(Rectangle.NO_BORDER);
                 cell0411.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 cell0411.setPaddingRight(12f);
                 //cell0411.setPaddingTop(10f);
                 table81.addCell(cell0411);
                 cell0411 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
                 cell0411.setBorder(Rectangle.NO_BORDER);
                 cell0411.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 //cell0411.setPaddingTop(10f);
                 cell0411.setPaddingRight(20f);
                 table81.addCell(cell0411);
             
                 cell0411 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
                 cell0411.setBorder(Rectangle.NO_BORDER);
                 cell0411.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 cell0411.setPaddingRight(21f);
                 //cell0411.setPaddingTop(10f);
                 table81.addCell(cell0411);
                 cell0411 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
                 cell0411.setBorder(Rectangle.NO_BORDER);
                 cell0411.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 //cell0411.setPaddingTop(10f);
                 cell0411.setPaddingRight(20f);
                 table81.addCell(cell0411);
             
                 cell0411 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
                 cell0411.setBorder(Rectangle.NO_BORDER);
                 cell0411.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 cell0411.setPaddingRight(19f);
                 //cell0411.setPaddingTop(10f);
                 table81.addCell(cell0411);
                 cell0411 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
                 cell0411.setBorder(Rectangle.NO_BORDER);
                 cell0411.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 cell0411.setPaddingRight(21f);
             //    cell0411.setPaddingTop(10f);
                 table81.addCell(cell0411);
             
                 cell0411 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
                 cell0411.setBorder(Rectangle.NO_BORDER);
                 cell0411.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 cell0411.setPaddingRight(13f);
                 //cell0411.setPaddingTop(10f);
                 table81.addCell(cell0411);
                 
                 cell0411 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
                 cell0411.setBorder(Rectangle.NO_BORDER);
                 cell0411.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 //cell0411.setPaddingRight(15f);
                 //cell0411.setPaddingTop(10f);
                 table81.addCell(cell0411);
                 cell0411 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
                 cell0411.setBorder(Rectangle.NO_BORDER);
                 cell0411.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 //cell0411.setPaddingTop(10f);
                 table81.addCell(cell0411);
                 
            }
            
            cell1.addElement(table81);
            
            
                        
//--------------------------------LABORATORY BILLS-------------------------------------------------
            
            PdfPTable table141 = new PdfPTable(11);
            table141.setWidths(new float[] { 7.5f, 4f, 1.5f, 4f, 4f, 4f, 4f, 3f, 4f,4.5f,3f});
            table141.setSpacingBefore(10);
            table141.setWidthPercentage(100f);
            float labFee = 0;
            float labCashAmt1 = 0;
            float labChqAmt1 = 0;
            float labCardAmt1 = 0;
            float labAdvAmt = 0;
            float totalLabFeeAmt1 = 0;
            float totalLabCashAmt1 = 0;
            float totalLabCardAmt1 = 0;
            float totalLabChqAmt1 = 0;
            float totalLabDueAmt1 = 0;
            float labDueAmt1=0;
            float labRecpAmt1=0;
            float totalLabRecAmt1=0;
            float totalLabAdvAmt = 0;
            float labCashPlusCardAmt=0;
            float labTotalCashPlusCardAmt=0;
            String lRegId=null;
            float totalLabFeeAmt2=0;
			float totalLabAdvAmt1=0;
			float totalLabDueAmt2=0;
			float totalLabRecAmt2=0;
		float labTotalCashPlusCardAmt1=0;
			float totalLabCardAmt2=0;
			float totalLabCashAmt2=0;
			float totalLabChqAmt2=0;
			
            

            List<LaboratoryRegistration> labDetails=laboratoryRegistrationRepository.findUserWiseIpOpDetailedCheck(user.get("fromDate"),user.get("toDate"),uId);
      //  Logger.error(String.valueOf(labDetails.size()));
            
            //Set<PatientPayment> patientPayments = pReg.getPatientPayment();
          //  Set<PatientPayment> patientPayments = paymentRepository.findByPatientRegistration(pReg);

        System.out.println("lab siz--------------------------"+labDetails.size());
        
			if (!labDetails.isEmpty()) {
				for (LaboratoryRegistration labs : labDetails) {
					System.out.println("hello i am for loop");

					//System.out.println(labs.getEnteredDate());
					PatientRegistration pReg = labs.getLaboratoryPatientRegistration();
					//lRegId=pReg.getRegId();


							if (labs.getNetAmount() != 0) {

								System.out.println("lab inside if");
								if (labs.getPaymentType().equalsIgnoreCase("CASH")) {
									labFee = labs.getNetAmount();
									labAdvAmt = 0;
									labCashAmt1 = labs.getNetAmount();
									labChqAmt1 = 0;
									labCashPlusCardAmt=0;
									labCardAmt1 = 0;
									totalLabFeeAmt1 += labFee;
									totalLabCashAmt1 += labCashAmt1;
									labRecpAmt1 = labs.getNetAmount();
									labDueAmt1 = 0;
									totalLabDueAmt1 += labDueAmt1;
									totalLabRecAmt1 += labRecpAmt1;
									System.out.println("Cash "+labs);
								}

								else if (labs.getPaymentType().equalsIgnoreCase("CHQ")
										|| labs.getPaymentType().equalsIgnoreCase("CHEQUE")) {

									labFee = labs.getNetAmount();
									labAdvAmt = 0;
									labCashAmt1 = 0;
									labChqAmt1 = labs.getNetAmount();
									labCardAmt1 = 0;
									totalLabFeeAmt1 += labFee;
									totalLabChqAmt1 += labChqAmt1;
									labRecpAmt1 = labs.getNetAmount();
									labDueAmt1 = 0;
									totalLabDueAmt1 += labDueAmt1;
									totalLabRecAmt1 += labRecpAmt1;
									System.out.println("CHQ "+labs);
								} else if (labs.getPaymentType().equalsIgnoreCase("DEBIT CARD")
										|| labs.getPaymentType().equalsIgnoreCase("CREDIT CARD")
										|| labs.getPaymentType().equalsIgnoreCase("CARD")) {

									labFee = labs.getNetAmount();
									labAdvAmt = 0;
									labCashAmt1 = 0;
									labChqAmt1 = 0;
									labCardAmt1 = labs.getNetAmount();
									totalLabFeeAmt1 += labFee;
									totalLabCardAmt1 += labCardAmt1;
									labRecpAmt1 = labs.getNetAmount();
									labDueAmt1 = 0;
									totalLabDueAmt1 += labDueAmt1;
									totalLabRecAmt1 += labRecpAmt1;
									System.out.println("Card "+labs);

								} else if (labs.getPaymentType().equalsIgnoreCase("ADVANCE")) {

									labFee = 0;
									labAdvAmt = labs.getNetAmount();
									labCashAmt1 = 0;
									labChqAmt1 = 0;
									labCardAmt1 = 0;
									totalLabFeeAmt1 += labFee;
									totalLabAdvAmt += labAdvAmt;

									labRecpAmt1 = 0;
									labDueAmt1 = 0;
									totalLabDueAmt1 += totalLabDueAmt1;
									totalLabRecAmt1 += totalLabRecAmt1;
									System.out.println("Adv "+labs);

								} else if (labs.getPaymentType().equalsIgnoreCase("DUE")) {

									labFee = 0;
									labAdvAmt = 0;
									labCashAmt1 = 0;
									labChqAmt1 = 0;
									labCardAmt1 = 0;
									totalLabFeeAmt1 += labFee;
									totalLabAdvAmt += labAdvAmt;
									labRecpAmt1 = 0;
									labDueAmt1 = labs.getNetAmount();
									totalLabDueAmt1 += labDueAmt1;
									totalLabRecAmt1 += labRecpAmt1;
									System.out.println("Due "+labs);

								} else if (labs.getPaymentType().equalsIgnoreCase("Cash+Card")) {

									labFee = labs.getNetAmount();
									labAdvAmt = 0;
									labCashAmt1 = 0;
									labChqAmt1 = 0;
									labCardAmt1 = 0;
									labCashPlusCardAmt = labs.getNetAmount();
									labTotalCashPlusCardAmt += labCashPlusCardAmt;
									totalLabFeeAmt1 += labCashPlusCardAmt;
									totalLabAdvAmt += labAdvAmt;
									labRecpAmt1 = labCashPlusCardAmt;
									labDueAmt1 = 0;
									totalLabDueAmt1 += labDueAmt1;
									totalLabRecAmt1 += labRecpAmt1;
									System.out.println("Cash + card"+labs);

								}


						}

				}

				
            
                
                PdfPCell cell042;
                
                cell042 = new PdfPCell(new Phrase("LABORATORY BILLS", headFont));
                cell042.setBorder(Rectangle.NO_BORDER);
                cell042.setHorizontalAlignment(Element.ALIGN_LEFT);
                //cell0411.setPaddingTop(10f);
                table141.addCell(cell042);
                cell042 = new PdfPCell(new Phrase(String.valueOf(totalLabFeeAmt1), redFont));
                cell042.setBorder(Rectangle.NO_BORDER);
                cell042.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell042.setPaddingRight(42f);
                //cell0411.setPaddingTop(10f);
                //cell0411.setPaddingRight(20f);
                table141.addCell(cell042);
            System.out.println(totalLabFeeAmt1);
                cell042 = new PdfPCell(new Phrase("0", redFont));
                cell042.setBorder(Rectangle.NO_BORDER);
                cell042.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell042.setPaddingRight(12f);
                //cell0411.setPaddingTop(10f);
                table141.addCell(cell042);
                cell042 = new PdfPCell(new Phrase(String.valueOf(totalLabFeeAmt1), redFont));
                cell042.setBorder(Rectangle.NO_BORDER);
                cell042.setHorizontalAlignment(Element.ALIGN_RIGHT);
                //cell0411.setPaddingTop(10f);
                cell042.setPaddingRight(20f);
                table141.addCell(cell042);
                System.out.println(totalLabFeeAmt1);
                
                cell042 = new PdfPCell(new Phrase(String.valueOf(totalLabAdvAmt), redFont));
                cell042.setBorder(Rectangle.NO_BORDER);
                cell042.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell042.setPaddingRight(21f);
                //cell0411.setPaddingTop(10f);
                table141.addCell(cell042);
                System.out.println(totalLabFeeAmt1);
                
                System.out.println(totalLabAdvAmt);
                cell042 = new PdfPCell(new Phrase(String.valueOf(totalLabRecAmt1), redFont));
                cell042.setBorder(Rectangle.NO_BORDER);
                cell042.setHorizontalAlignment(Element.ALIGN_RIGHT);
                //cell0411.setPaddingTop(10f);
                cell042.setPaddingRight(20f);
                table141.addCell(cell042);
                System.out.println(totalLabRecAmt1);
            
                
                cell042 = new PdfPCell(new Phrase(String.valueOf(totalLabCashAmt1), redFont));
                cell042.setBorder(Rectangle.NO_BORDER);
                cell042.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell042.setPaddingRight(19f);
                //cell0411.setPaddingTop(10f);
                table141.addCell(cell042);
                System.out.println(totalLabCashAmt1);
                
                cell042 = new PdfPCell(new Phrase(String.valueOf(totalLabChqAmt1), redFont));
                cell042.setBorder(Rectangle.NO_BORDER);
                cell042.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell042.setPaddingRight(21f);
            //    cell0411.setPaddingTop(10f);
                table141.addCell(cell042);
                System.out.println(totalLabChqAmt1);
            
                cell042 = new PdfPCell(new Phrase(String.valueOf(totalLabCardAmt1), redFont));
                cell042.setBorder(Rectangle.NO_BORDER);
                cell042.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell042.setPaddingRight(13f);
                //cell0411.setPaddingTop(10f);
                table141.addCell(cell042);
                System.out.println(totalLabCardAmt1);
                
                cell042 = new PdfPCell(new Phrase(String.valueOf(labTotalCashPlusCardAmt), redFont));
                cell042.setBorder(Rectangle.NO_BORDER);
                cell042.setHorizontalAlignment(Element.ALIGN_RIGHT);
                //cell0411.setPaddingRight(15f);
                //cell0411.setPaddingTop(10f);
                table141.addCell(cell042);
                System.out.println(labTotalCashPlusCardAmt);
                
                cell042 = new PdfPCell(new Phrase(String.valueOf(totalLabDueAmt1), redFont));
                cell042.setBorder(Rectangle.NO_BORDER);
                cell042.setHorizontalAlignment(Element.ALIGN_RIGHT);
                //cell0411.setPaddingTop(10f);
                table141.addCell(cell042);
                System.out.println(totalLabDueAmt1);
			}
    
              else
              {
            	  PdfPCell cell042;
                  
                  cell042 = new PdfPCell(new Phrase("LABORATORY BILLS", headFont));
                  cell042.setBorder(Rectangle.NO_BORDER);
                  cell042.setHorizontalAlignment(Element.ALIGN_LEFT);
                  //cell0411.setPaddingTop(10f);
                  table141.addCell(cell042);
                  cell042 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
                  cell042.setBorder(Rectangle.NO_BORDER);
                  cell042.setHorizontalAlignment(Element.ALIGN_RIGHT);
                  cell042.setPaddingRight(42f);
                  //cell0411.setPaddingTop(10f);
                  //cell0411.setPaddingRight(20f);
                  table141.addCell(cell042);
              
                  cell042 = new PdfPCell(new Phrase("0", redFont));
                  cell042.setBorder(Rectangle.NO_BORDER);
                  cell042.setHorizontalAlignment(Element.ALIGN_RIGHT);
                  cell042.setPaddingRight(12f);
                  //cell0411.setPaddingTop(10f);
                  table141.addCell(cell042);
                  cell042 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
                  cell042.setBorder(Rectangle.NO_BORDER);
                  cell042.setHorizontalAlignment(Element.ALIGN_RIGHT);
                  //cell0411.setPaddingTop(10f);
                  cell042.setPaddingRight(20f);
                  table141.addCell(cell042);
              
                  cell042 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
                  cell042.setBorder(Rectangle.NO_BORDER);
                  cell042.setHorizontalAlignment(Element.ALIGN_RIGHT);
                  cell042.setPaddingRight(21f);
                  //cell0411.setPaddingTop(10f);
                  table141.addCell(cell042);
                  cell042 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
                  cell042.setBorder(Rectangle.NO_BORDER);
                  cell042.setHorizontalAlignment(Element.ALIGN_RIGHT);
                  //cell0411.setPaddingTop(10f);
                  cell042.setPaddingRight(20f);
                  table141.addCell(cell042);
              
                  cell042 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
                  cell042.setBorder(Rectangle.NO_BORDER);
                  cell042.setHorizontalAlignment(Element.ALIGN_RIGHT);
                  cell042.setPaddingRight(19f);
                  //cell0411.setPaddingTop(10f);
                  table141.addCell(cell042);
                  cell042 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
                  cell042.setBorder(Rectangle.NO_BORDER);
                  cell042.setHorizontalAlignment(Element.ALIGN_RIGHT);
                  cell042.setPaddingRight(21f);
              //    cell0411.setPaddingTop(10f);
                  table141.addCell(cell042);
              
                  cell042 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
                  cell042.setBorder(Rectangle.NO_BORDER);
                  cell042.setHorizontalAlignment(Element.ALIGN_RIGHT);
                  cell042.setPaddingRight(13f);
                  //cell0411.setPaddingTop(10f);
                  table141.addCell(cell042);
                  
                  cell042 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
                  cell042.setBorder(Rectangle.NO_BORDER);
                  cell042.setHorizontalAlignment(Element.ALIGN_RIGHT);
                  //cell0411.setPaddingRight(15f);
                  //cell0411.setPaddingTop(10f);
                  table141.addCell(cell042);
                  cell042 = new PdfPCell(new Phrase(String.valueOf("0"), redFont));
                  cell042.setBorder(Rectangle.NO_BORDER);
                  cell042.setHorizontalAlignment(Element.ALIGN_RIGHT);
                  //cell0411.setPaddingTop(10f);
                  table141.addCell(cell042);
              }
    
                cell1.addElement(table141);
                
              
              
            
            
//------------------------------- VOUCHER PAYMENTS -----------------------------------
            
            PdfPTable table15 = new PdfPTable(11);
            table15.setWidths(new float[] { 7.5f, 4f, 1.5f, 4f, 4f, 4f, 4f, 3f, 4f,4.5f,3f});
            table15.setSpacingBefore(10);
            table15.setWidthPercentage(100f);
            long vAmt = 0;
            long vCashAmt = 0;
            long vChqAmt = 0;
            long vCardAmt = 0;
            float totalVAmt = 0;
            float totalVCashAmt = 0;
            float totalVCardAmt = 0;
            float totalVChqAmt = 0;
            float totalVDueAmt = 0;
            long vDueAmt=0;
            long vRecpAmt=0;
            float totalVRecpAmt =0;
            float vCashPlusCardAmt=0;
            float vTotalCashPlusCardAmt=0;
            
            List<Voucher> voucher = (List<Voucher>) voucherRepository.findUserWiseIpOpDetailed(user.get("fromDate"), user.get("toDate"),uId);
                        
             if(!voucher.isEmpty())
             {
                for(Voucher v : voucher)
                {
                    if(v.getPaymentType().equalsIgnoreCase("CASH"))
                    {
                        vAmt = v.getVoucherAmount();
                        vCashAmt = v.getVoucherAmount();
                        vChqAmt = 0;
                        vCardAmt = 0;
                        vRecpAmt = v.getVoucherAmount();
                        vDueAmt = vRecpAmt-vCashAmt;
                        totalVCashAmt+=vCashAmt;
                        totalVAmt+=vAmt;
                        totalVDueAmt+=vDueAmt;
                        totalVRecpAmt+=vRecpAmt;
                        
                    }
                    else if(v.getPaymentType().equalsIgnoreCase("CHQ")||v.getPaymentType().equalsIgnoreCase("Cheque"))
                    {
                        vAmt = v.getVoucherAmount();
                        vChqAmt = v.getVoucherAmount();
                        vCashAmt = 0;
                        vCardAmt = 0;
                        vRecpAmt = v.getVoucherAmount();
                        vDueAmt = vRecpAmt-vChqAmt;
                        totalVChqAmt+=vChqAmt;
                        totalVAmt+=vAmt;
                        totalVDueAmt+=vDueAmt;
                        totalVRecpAmt+=vRecpAmt;
                        
                    }
                    else if(v.getPaymentType().equalsIgnoreCase("DEBIT CARD") || v.getPaymentType().equalsIgnoreCase("CREDIT CARD") || v.getPaymentType().equalsIgnoreCase("CARD"))
                    {
                        vAmt = v.getVoucherAmount();
                        vCardAmt = v.getVoucherAmount();
                        vCashAmt = 0;
                        vChqAmt = 0;
                        vRecpAmt = v.getVoucherAmount();
                        vDueAmt = vRecpAmt-vCardAmt;
                        totalVCardAmt+=vCardAmt;
                        totalVAmt+=vAmt;
                        totalVDueAmt+=vDueAmt;
                        totalVRecpAmt+=vRecpAmt;
                        
                    }
                    else if(v.getPaymentType().equalsIgnoreCase("DUE"))
                    {
                        vAmt = 0;
                        vCashAmt =0;
                        vChqAmt = 0;
                        vCardAmt = 0;
                        vRecpAmt =0;
                        vDueAmt = v.getVoucherAmount();
                        totalVCashAmt+=vCashAmt;
                        totalVAmt+=vAmt;
                        totalVDueAmt+=vDueAmt;
                        totalVRecpAmt+=vRecpAmt;
                        
                    }
                    else if(v.getPaymentType().equalsIgnoreCase("Cash+Card"))
                    {
                        vAmt = v.getVoucherAmount();
                        vCashAmt =0;
                        vChqAmt = 0;
                        vCardAmt = 0;
                        vRecpAmt =vAmt;
                        vDueAmt = 0;
                        vCashPlusCardAmt=v.getVoucherAmount();
                        vTotalCashPlusCardAmt=vCashPlusCardAmt;
                        totalVCashAmt+=vCashAmt;
                        totalVAmt+=vAmt;
                        totalVDueAmt+=vDueAmt;
                        totalVRecpAmt+=vRecpAmt;
                        
                    }
}
        
                
                PdfPCell cell05;
                
                cell05 = new PdfPCell(new Phrase("VOUCHER PAYMENTS", headFont));
                cell05.setBorder(Rectangle.NO_BORDER);
                cell05.setHorizontalAlignment(Element.ALIGN_LEFT);
                //cell05.setPaddingTop(10f);
                table15.addCell(cell05);
                cell05 = new PdfPCell(new Phrase("-"+String.valueOf(totalVAmt), redFont1));
                cell05.setBorder(Rectangle.NO_BORDER);
                cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
                //cell05.setPaddingTop(10f);
                cell05.setPaddingRight(42f);
                table15.addCell(cell05);
            
                cell05 = new PdfPCell(new Phrase("0", redFont));
                cell05.setBorder(Rectangle.NO_BORDER);
                cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell05.setPaddingRight(12f);
                table15.addCell(cell05);
                cell05 = new PdfPCell(new Phrase("-"+String.valueOf(totalVAmt), redFont1));
                cell05.setBorder(Rectangle.NO_BORDER);
                cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
                //cell05.setPaddingTop(10f);
                cell05.setPaddingRight(20f);
                table15.addCell(cell05);
            
                cell05 = new PdfPCell(new Phrase("0.0", redFont));
                cell05.setBorder(Rectangle.NO_BORDER);
                cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell05.setPaddingRight(21f);
                table15.addCell(cell05);
                cell05 = new PdfPCell(new Phrase("-"+String.valueOf(totalVRecpAmt), redFont1));
                cell05.setBorder(Rectangle.NO_BORDER);
                cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
                //cell05.setPaddingTop(10f);
                cell05.setPaddingRight(19f);
                table15.addCell(cell05);
            
                cell05 = new PdfPCell(new Phrase("-"+String.valueOf(totalVCashAmt), redFont1));
                cell05.setBorder(Rectangle.NO_BORDER);
                cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell05.setPaddingRight(21f);
                table15.addCell(cell05);
                cell05 = new PdfPCell(new Phrase("-"+String.valueOf(totalVChqAmt), redFont1));
                cell05.setBorder(Rectangle.NO_BORDER);
                cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell05.setPaddingRight(21f);
                table15.addCell(cell05);
            
                cell05 = new PdfPCell(new Phrase("-"+String.valueOf(totalVCardAmt), redFont1));
                cell05.setBorder(Rectangle.NO_BORDER);
                cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell05.setPaddingRight(12f);
                table15.addCell(cell05);
                
                cell05 = new PdfPCell(new Phrase("-"+String.valueOf(vTotalCashPlusCardAmt), redFont1));
                cell05.setBorder(Rectangle.NO_BORDER);
                cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
                //cell05.setPaddingRight(10f);
                table15.addCell(cell05);
                cell05 = new PdfPCell(new Phrase("-"+String.valueOf(totalVDueAmt), redFont1));
                cell05.setBorder(Rectangle.NO_BORDER);
                cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
                //cell05.setPaddingRight(10f);
                table15.addCell(cell05);
             }
             else
             {
            	 PdfPCell cell05;
                 
                 cell05 = new PdfPCell(new Phrase("VOUCHER PAYMENTS", headFont));
                 cell05.setBorder(Rectangle.NO_BORDER);
                 cell05.setHorizontalAlignment(Element.ALIGN_LEFT);
                 //cell05.setPaddingTop(10f);
                 table15.addCell(cell05);
                 cell05 = new PdfPCell(new Phrase("-"+String.valueOf("0"), redFont1));
                 cell05.setBorder(Rectangle.NO_BORDER);
                 cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 //cell05.setPaddingTop(10f);
                 cell05.setPaddingRight(42f);
                 table15.addCell(cell05);
             
                 cell05 = new PdfPCell(new Phrase("0", redFont));
                 cell05.setBorder(Rectangle.NO_BORDER);
                 cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 cell05.setPaddingRight(12f);
                 table15.addCell(cell05);
                 cell05 = new PdfPCell(new Phrase("-"+String.valueOf("0"), redFont1));
                 cell05.setBorder(Rectangle.NO_BORDER);
                 cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 //cell05.setPaddingTop(10f);
                 cell05.setPaddingRight(20f);
                 table15.addCell(cell05);
             
                 cell05 = new PdfPCell(new Phrase("0.0", redFont));
                 cell05.setBorder(Rectangle.NO_BORDER);
                 cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 cell05.setPaddingRight(21f);
                 table15.addCell(cell05);
                 cell05 = new PdfPCell(new Phrase("-"+String.valueOf("0"), redFont1));
                 cell05.setBorder(Rectangle.NO_BORDER);
                 cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 //cell05.setPaddingTop(10f);
                 cell05.setPaddingRight(19f);
                 table15.addCell(cell05);
             
                 cell05 = new PdfPCell(new Phrase("-"+String.valueOf("0"), redFont1));
                 cell05.setBorder(Rectangle.NO_BORDER);
                 cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 cell05.setPaddingRight(21f);
                 table15.addCell(cell05);
                 cell05 = new PdfPCell(new Phrase("-"+String.valueOf("0"), redFont1));
                 cell05.setBorder(Rectangle.NO_BORDER);
                 cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 cell05.setPaddingRight(21f);
                 table15.addCell(cell05);
             
                 cell05 = new PdfPCell(new Phrase("-"+String.valueOf("0"), redFont1));
                 cell05.setBorder(Rectangle.NO_BORDER);
                 cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 cell05.setPaddingRight(12f);
                 table15.addCell(cell05);
                 
                 cell05 = new PdfPCell(new Phrase("-"+String.valueOf("0"), redFont1));
                 cell05.setBorder(Rectangle.NO_BORDER);
                 cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 //cell05.setPaddingRight(10f);
                 table15.addCell(cell05);
                 cell05 = new PdfPCell(new Phrase("-"+String.valueOf("0"), redFont1));
                 cell05.setBorder(Rectangle.NO_BORDER);
                 cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 //cell05.setPaddingRight(10f);
                 table15.addCell(cell05);
             }
    
                cell1.addElement(table15);
        

				 float totalGAmt = ((totalFeeOspAmt1+totalFeeAmt1+totalFeeAmt+totalFeeAmtReg+totalIpFeeAmt1+totalipAdvFeeAmt+totalLabFeeAmt1)-totalVAmt);
               float totalNetAmt =((totalFeeOspAmt1+totalFeeAmt1+totalFeeAmt+totalFeeAmtReg+totalIpRecAmt1+totalipAdvFeeAmt+totalLabFeeAmt2)-totalVAmt);
               float totalAdvAmt =(totalOspAdvAmt+totalOpAdvAmt+totalAdvcAmt+totalAdvcAmtReg+totalIpAdvAmt+totalipAdvAdvcAmt+totalLabAdvAmt1);
               float totalRAmt = ((totalOspRecAmt1+totalRecAmt1 +totalRecpAmt+totalRecpAmtReg+totalIpRecAmt1+totalipAdvRecpAmt+totalLabRecAmt2)-totalVRecpAmt);
			float totalCAmt =((totalCashOspAmt1+totalCashAmt1+totalCashAmt+totalCashAmtReg+totalIpCashAmt1+totalipAdvCashAmt+totalLabCashAmt1)-totalVCashAmt);
               float totalChAmt =((totalChqOspAmt1 +totalChqAmt1+totalChqAmt+totalChqAmtReg+totalIpChqAmt1+totalipAdvChqAmt+totalLabChqAmt2)-totalVChqAmt);
               float totalCrdAmt = ((totalCardOspAmt1+totalCardAmt1+totalCardAmt+totalCardAmtReg+totalIpCardAmt1+totalipAdvCardAmt+totalLabCardAmt2)-totalVCardAmt);
               float totalGCPCAmt = ((totalcashPlusCardOspAmt1+totalcashPlusCardAmt+totalCashPlusCardDocAmt+totalCashPlusCardRegAmt+ipTotalCashPlusCardAmt+totalCashPlusCardipAdvAmt+labTotalCashPlusCardAmt1)-vTotalCashPlusCardAmt);
               float totalDAmt=((totalDueOspAmt1+totalDueAmt1+totalDueAmt+totalDueAmtReg+totalIpDueAmt1+totalipAdvDueAmt+totalLabDueAmt1)-totalVDueAmt);
				
        PdfPTable table06 = new PdfPTable(11);
        table06.setWidths(new float[] {7.5f, 4f, 1.5f, 4f, 4f, 4f, 4f, 3f, 4f,4.5f,3f});
        table06.setSpacingBefore(10);
        table06.setWidthPercentage(100f);
        
        PdfPCell cell08;
        cell08 = new PdfPCell(new Phrase("User Total         :", headFont));
        cell08.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell08.setPaddingTop(5f);
        cell08.setPaddingBottom(7f);
        cell08.setHorizontalAlignment(Element.ALIGN_LEFT);
        table06.addCell(cell08);
        cell08 = new PdfPCell(new Phrase(String.valueOf(totalGAmt), redFont));
        cell08.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell08.setPaddingTop(5f);
        cell08.setPaddingBottom(7f);
        cell08.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell08.setPaddingRight(42f);
        table06.addCell(cell08);
    
        cell08 = new PdfPCell(new Phrase("0", redFont));
        cell08.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell08.setPaddingTop(5f);
        cell08.setPaddingBottom(7f);
        cell08.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell08.setPaddingRight(12f);
        table06.addCell(cell08);
        cell08 = new PdfPCell(new Phrase(String.valueOf(totalGAmt), redFont));
        cell08.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell08.setPaddingTop(5f);
        cell08.setPaddingBottom(7f);
        cell08.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell08.setPaddingRight(20f);
        table06.addCell(cell08);
    
        cell08 = new PdfPCell(new Phrase(String.valueOf(totalAdvAmt), redFont));
        cell08.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell08.setPaddingTop(5f);
        cell08.setPaddingBottom(7f);
        cell08.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell08.setPaddingRight(21f);
        table06.addCell(cell08);
        cell08 = new PdfPCell(new Phrase(String.valueOf(totalGAmt), redFont));
        cell08.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell08.setPaddingTop(5f);
        cell08.setPaddingBottom(7f);
        cell08.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell08.setPaddingRight(19f);
        table06.addCell(cell08);
    
        cell08 = new PdfPCell(new Phrase(String.valueOf(totalCAmt), redFont));
        cell08.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell08.setPaddingTop(5f);
        cell08.setPaddingBottom(7f);
        cell08.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell08.setPaddingRight(21f);
        table06.addCell(cell08);
        cell08 = new PdfPCell(new Phrase(String.valueOf(totalChAmt), redFont));
        cell08.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell08.setPaddingTop(5f);
        cell08.setPaddingBottom(7f);
        cell08.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell08.setPaddingRight(21f);
        table06.addCell(cell08);
    
        cell08 = new PdfPCell(new Phrase(String.valueOf(totalCrdAmt), redFont));
        cell08.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell08.setPaddingTop(5f);
        cell08.setPaddingBottom(7f);
        cell08.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell08.setPaddingRight(12f);
        table06.addCell(cell08);
        
        cell08 = new PdfPCell(new Phrase(String.valueOf(totalGCPCAmt), redFont));
        cell08.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell08.setPaddingTop(5f);
        cell08.setPaddingBottom(7f);
        cell08.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table06.addCell(cell08);
        cell08 = new PdfPCell(new Phrase(String.valueOf(totalDAmt), redFont));
        cell08.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell08.setPaddingTop(5f);
        cell08.setPaddingBottom(7f);
        cell08.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table06.addCell(cell08);
        cell1.addElement(table06);
        
        PdfPTable table08 = new PdfPTable(11);
        table08.setWidths(new float[] {7.5f, 4f, 1.5f, 4f, 4f, 4f, 4f, 3f, 4f,4.5f,3f});
        table08.setSpacingBefore(10);
        table08.setWidthPercentage(100f);
        
        PdfPCell cell09;
        cell09 = new PdfPCell(new Phrase("Grand Total      :", headFont));
        cell09.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell09.setPaddingTop(5f);
        cell09.setPaddingBottom(7f);
        cell09.setHorizontalAlignment(Element.ALIGN_LEFT);
        table08.addCell(cell09);
        cell09 = new PdfPCell(new Phrase(String.valueOf(totalGAmt), redFont));
        cell09.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell09.setPaddingTop(5f);
        cell09.setPaddingBottom(7f);
        cell09.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell09.setPaddingRight(42f);
        table08.addCell(cell09);
    
        cell09 = new PdfPCell(new Phrase("0", redFont));
        cell09.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell09.setPaddingTop(5f);
        cell09.setPaddingBottom(7f);
        cell09.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell09.setPaddingRight(12f);
        table08.addCell(cell09);
        cell09 = new PdfPCell(new Phrase(String.valueOf(totalNetAmt), redFont));
        cell09.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell09.setPaddingTop(5f);
        cell09.setPaddingBottom(7f);
        cell09.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell09.setPaddingRight(20f);
        table08.addCell(cell09);
    
        cell09 = new PdfPCell(new Phrase(String.valueOf(totalAdvAmt), redFont));
        cell09.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell09.setPaddingTop(5f);
        cell09.setPaddingBottom(7f);
        cell09.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell09.setPaddingRight(21f);
        table08.addCell(cell09);
        cell09 = new PdfPCell(new Phrase(String.valueOf(totalRAmt), redFont));
        cell09.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell09.setPaddingTop(5f);
        cell09.setPaddingBottom(7f);
        cell09.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell09.setPaddingRight(20f);
        //cell09.setPaddingRight(-5f);
        table08.addCell(cell09);
    
        cell09 = new PdfPCell(new Phrase(String.valueOf(totalCAmt), redFont));
        cell09.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell09.setPaddingTop(5f);
        cell09.setPaddingBottom(7f);
        cell09.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell09.setPaddingRight(19f);
        table08.addCell(cell09);
        cell09 = new PdfPCell(new Phrase(String.valueOf(totalChAmt), redFont));
        cell09.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell09.setPaddingTop(5f);
        cell09.setPaddingBottom(7f);
        cell09.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell09.setPaddingRight(21f);
        table08.addCell(cell09);
    
        cell09 = new PdfPCell(new Phrase(String.valueOf(totalCrdAmt), redFont));
        cell09.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell09.setPaddingTop(5f);
        cell09.setPaddingBottom(7f);
        cell09.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell09.setPaddingRight(12f);
        table08.addCell(cell09);
        
        cell09 = new PdfPCell(new Phrase(String.valueOf(totalGCPCAmt), redFont));
        cell09.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell09.setPaddingTop(5f);
        cell09.setPaddingBottom(7f);
        cell09.setHorizontalAlignment(Element.ALIGN_RIGHT);
        //cell09.setPaddingRight(17f);
        table08.addCell(cell09);
        cell09 = new PdfPCell(new Phrase(String.valueOf(totalDAmt), redFont));
        cell09.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell09.setPaddingTop(5f);
        cell09.setPaddingBottom(7f);
        cell09.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table08.addCell(cell09);
         cell1.addElement(table08);
         //for cash + card calculations--------------------------------------------------------
        
        
        PdfPTable table051 = new PdfPTable(1);
        table051.setWidths(new float[] { 8f});
        table051.setSpacingBefore(10);
        table051.setWidthPercentage(100f);
       
        PdfPCell hcell1011;
        hcell1011 = new PdfPCell(new Phrase("CASH PLUS CARD PAYMENTS", headFont));
        hcell1011.setBorder(Rectangle.NO_BORDER);
        
        hcell1011.setHorizontalAlignment(Element.ALIGN_LEFT);
        hcell1011.setPaddingBottom(1f);
        table051.addCell(hcell1011);
        cell1.addElement(table051);
        
        PdfPTable table151 = new PdfPTable(14);
        table151.setWidths(new float[] {2f,2f, 8f, 8f, 4f, 4f, 3.3f, 3.4f, 3.3f, 3.6f, 3.4f, 3.6f,4.5f,3.1f});
        table151.setSpacingBefore(10);
        table151.setWidthPercentage(100f);
        PdfPCell hcell176;
        hcell176 = new PdfPCell(new Phrase("", redFont));
        hcell176.setBorder(Rectangle.NO_BORDER);
        hcell176.setBackgroundColor(BaseColor.GRAY);
        hcell176.setPaddingBottom(5f);
        hcell176.setHorizontalAlignment(Element.ALIGN_LEFT);
        table151.addCell(hcell176);
        
        hcell176 = new PdfPCell(new Phrase("", redFont));
        hcell176.setBorder(Rectangle.NO_BORDER);
        hcell176.setBackgroundColor(BaseColor.GRAY);
        hcell176.setPaddingBottom(5f);
        hcell176.setHorizontalAlignment(Element.ALIGN_LEFT);
        table151.addCell(hcell176);
        
        hcell176 = new PdfPCell(new Phrase("Cash Amount", redFont));
        hcell176.setBorder(Rectangle.NO_BORDER);
        hcell176.setBackgroundColor(BaseColor.GRAY);
        hcell176.setPaddingBottom(5f);
        hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
        hcell176.setPaddingRight(10f);
        table151.addCell(hcell176);
        
        hcell176 = new PdfPCell(new Phrase("Card Amount", redFont));
        hcell176.setBorder(Rectangle.NO_BORDER);
        hcell176.setBackgroundColor(BaseColor.GRAY);
        hcell176.setPaddingBottom(5f);
        hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
        hcell176.setPaddingRight(10f);
        table151.addCell(hcell176);
        
        hcell176 = new PdfPCell(new Phrase(" ", redFont));
        hcell176.setBorder(Rectangle.NO_BORDER);
        hcell176.setBackgroundColor(BaseColor.GRAY);
        hcell176.setPaddingBottom(5f);
        hcell176.setHorizontalAlignment(Element.ALIGN_LEFT);
        //hcell10.setPaddingRight(20f);
        table151.addCell(hcell176);
        
        hcell176 = new PdfPCell(new Phrase(" ", redFont));
        hcell176.setBorder(Rectangle.NO_BORDER);
        hcell176.setBackgroundColor(BaseColor.GRAY);
        hcell176.setPaddingBottom(5f);
        hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
        hcell176.setPaddingRight(10f);
        table151.addCell(hcell176);
        
        hcell176 = new PdfPCell(new Phrase(" ", redFont));
        hcell176.setBorder(Rectangle.NO_BORDER);
        hcell176.setBackgroundColor(BaseColor.GRAY);
        hcell176.setPaddingBottom(5f);
        hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
        hcell176.setPaddingRight(10f);
        table151.addCell(hcell176);
        
        hcell176 = new PdfPCell(new Phrase(" ", redFont));
        hcell176.setBorder(Rectangle.NO_BORDER);
        hcell176.setBackgroundColor(BaseColor.GRAY);
        hcell176.setPaddingBottom(5f);
        hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
        hcell176.setPaddingRight(10f);
        table151.addCell(hcell176);
        
        hcell176 = new PdfPCell(new Phrase(" ", redFont));
        hcell176.setBorder(Rectangle.NO_BORDER);
        hcell176.setBackgroundColor(BaseColor.GRAY);
        hcell176.setPaddingBottom(5f);
        hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
        hcell176.setPaddingRight(10f);
        table151.addCell(hcell176);
        
        hcell176 = new PdfPCell(new Phrase(" ", redFont));
        hcell176.setBorder(Rectangle.NO_BORDER);
        hcell176.setBackgroundColor(BaseColor.GRAY);
        hcell176.setPaddingBottom(5f);
        hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
        hcell176.setPaddingRight(10f);
        table151.addCell(hcell176);
        
        hcell176 = new PdfPCell(new Phrase(" ", redFont));
        hcell176.setBorder(Rectangle.NO_BORDER);
        hcell176.setBackgroundColor(BaseColor.GRAY);
        hcell176.setPaddingBottom(5f);
        hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
        hcell176.setPaddingRight(10f);
        table151.addCell(hcell176);
        
        hcell176 = new PdfPCell(new Phrase(" ", redFont));
        hcell176.setBorder(Rectangle.NO_BORDER);
        hcell176.setBackgroundColor(BaseColor.GRAY);
        hcell176.setPaddingBottom(5f);
        hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
        hcell176.setPaddingRight(10f);
        table151.addCell(hcell176);
        
        hcell176 = new PdfPCell(new Phrase(" ", redFont));
        hcell176.setBorder(Rectangle.NO_BORDER);
        hcell176.setBackgroundColor(BaseColor.GRAY);
        hcell176.setPaddingBottom(5f);
        hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
        hcell176.setPaddingRight(10f);
        table151.addCell(hcell176);
        
        
        hcell176 = new PdfPCell(new Phrase(" ", redFont));
        hcell176.setBorder(Rectangle.NO_BORDER);
        hcell176.setBackgroundColor(BaseColor.GRAY);
        hcell176.setPaddingBottom(5f);
        hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table151.addCell(hcell176);
        
        
        
        //-----------------------------------------------
        
        String billNo=null;
        float cardAmount=0;
        float cardAmount1=0;
        float cashAmount=0;
        float cashAmount1=0;
        float totalCardAmount=0;
        float totalCardAmount1=0;
        float totalCashAmount=0;
        float totalCashAmount1=0;
       // String umr=null;
        
        PdfPTable table1511 = new PdfPTable(14);
        table1511.setWidths(new float[] {9.9f, 3.7f, 6f, 6f, 5f, 5f, 3.3f, 3.4f, 3.3f, 3.6f, 3.4f, 3.6f,4.5f,3.1f});
        table1511.setSpacingBefore(10);
        table1511.setWidthPercentage(100f);
        PdfPCell cell111;
        
        
        List<Map<String, String>> show = new ArrayList<>();
        List<String> info = new ArrayList<>();
        List<String> infoDes = new ArrayList<>();
        Map<String, String> displayInfo = null; 
        
        
        
     
            
        
                                    List<CashPlusCard> cashNCard=cashPlusCardRepository.findByBillNoAndDescriptions(user.get("fromDate"),user.get("toDate"),uId);
                                
                                                if(!cashNCard.isEmpty())
                                                {
                                                    
                                                for(CashPlusCard cashNCrd:cashNCard)
                                                {
                                                    String description=cashNCrd.getDescription();
                                                    //umr=pReg.getPatientDetails().getUmr();
                                                
                                                            
                                                                    if(cashNCrd.getCardAmount()!=0)
                                                                    {
                                                                        cardAmount=cashNCrd.getCardAmount();
                                                                        totalCardAmount+=cardAmount;
                                                                        
                                                                    }
                                                                   if(cashNCrd.getCashAmount()!=0)
                                                                    {
                                                                       cashAmount=cashNCrd.getCashAmount();
                                                                       totalCashAmount+=cashAmount;
                                                                        
                                                                    }
                                                           } 
                                                }
                                                            
                
        
      //  totalCashAmount1+=totalCashAmount;
      //  totalCardAmount1+=totalCardAmount;
         
        
              PdfPCell cell36;
                
              cell36 = new PdfPCell(new Phrase("", redFont));
              cell36.setBorder(Rectangle.NO_BORDER);
              cell36.setHorizontalAlignment(Element.ALIGN_LEFT);
              table151.addCell(cell36);
              cell36 = new PdfPCell(new Phrase("", redFont));
              cell36.setBorder(Rectangle.NO_BORDER);
              cell36.setHorizontalAlignment(Element.ALIGN_LEFT);
              //cell111.setPaddingLeft(-30f);
              table151.addCell(cell36);
              cell36 = new PdfPCell(new Phrase(String.valueOf(totalCashAmount), redFont));
              cell36.setBorder(Rectangle.NO_BORDER);
              cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
              cell36.setPaddingRight(10f);
              //cell111.setPaddingLeft(-30f);
              table151.addCell(cell36);
              cell36 = new PdfPCell(new Phrase(String.valueOf(totalCardAmount), redFont));
              cell36.setBorder(Rectangle.NO_BORDER);
              cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
              cell36.setPaddingRight(10f);
              //cell111.setPaddingLeft(-20f);
              table151.addCell(cell36);
              cell36 = new PdfPCell(new Phrase("", redFont));
              cell36.setBorder(Rectangle.NO_BORDER);
              cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
              cell36.setPaddingRight(10f);
              //cell111.setPaddingRight(35f);
              table151.addCell(cell36);
          
              cell36 = new PdfPCell(new Phrase("", redFont));
              cell36.setBorder(Rectangle.NO_BORDER);
              cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
              cell36.setPaddingRight(10f);
              //cell11.setPaddingRight(20f);
              table151.addCell(cell36);
              cell36 = new PdfPCell(new Phrase("", redFont));
              cell36.setBorder(Rectangle.NO_BORDER);
              cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
              cell36.setPaddingRight(10f);
              //cell111.setPaddingRight(15f);
              table151.addCell(cell36);
          
              cell36 = new PdfPCell(new Phrase("", redFont));
              cell36.setBorder(Rectangle.NO_BORDER);
              cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
              cell36.setPaddingRight(10f);
              //cell111.setPaddingRight(12f);
              table151.addCell(cell36);
              cell36 = new PdfPCell(new Phrase("", redFont));
              cell36.setBorder(Rectangle.NO_BORDER);
              cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
              cell36.setPaddingRight(10f);
              //cell111.setPaddingRight(10f);
              table151.addCell(cell36);
          
              cell36 = new PdfPCell(new Phrase("", redFont));
              cell36.setBorder(Rectangle.NO_BORDER);
              cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
              cell36.setPaddingRight(10f);
              //cell111.setPaddingRight(10f);
              table151.addCell(cell36);
              cell36 = new PdfPCell(new Phrase("", redFont));
              cell36.setBorder(Rectangle.NO_BORDER);
              cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
              cell36.setPaddingRight(10f);
              table151.addCell(cell36);
          
              cell36 = new PdfPCell(new Phrase("", redFont));
              cell36.setBorder(Rectangle.NO_BORDER);
              cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
              cell36.setPaddingRight(10f);
              table151.addCell(cell36);
              
              cell36 = new PdfPCell(new Phrase("", redFont));
              cell36.setBorder(Rectangle.NO_BORDER);
              cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
              cell36.setPaddingRight(10f);
              table151.addCell(cell36);
              cell36 = new PdfPCell(new Phrase("", redFont));
              cell36.setBorder(Rectangle.NO_BORDER);
              cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
              
              table151.addCell(cell36);
        
        
             
      
        
       
        
       //-----------------------------for total amount calculation------------------------------------------
        
        float totalCashGAmount=0;
        float totalCardGAmount=0;
        float totalChequeGAmount=0;
        float totalDueGAmount=0;
      
        if(totalCashAmount!=0 || totalCAmt!=0)
        {
            totalCashGAmount+=totalCashAmount+totalCAmt;
        }
        if(totalCardAmount!=0 || totalCrdAmt!=0)
        {
            totalCardGAmount+=totalCardAmount+totalCrdAmt;
        }
        if(totalChAmt!=0)
        {
            totalChequeGAmount+=totalChAmt;
        }
        if(totalDAmt!=0)
        {
            totalDueGAmount+=totalDAmt;
        }
       
        PdfPTable table059 = new PdfPTable(1);
        table059.setWidths(new float[] { 8f});
        table059.setSpacingBefore(10);
        table059.setWidthPercentage(100f);
       
        PdfPCell hcell1059;
        hcell1059 = new PdfPCell(new Phrase("GRAND TOTAL AMOUNT :", headFont));
        hcell1059.setBorder(Rectangle.NO_BORDER);
        
        hcell1059.setHorizontalAlignment(Element.ALIGN_LEFT);
        hcell1059.setPaddingBottom(1f);
        table059.addCell(hcell1059);
       // cell1.addElement(table059);
        
        PdfPTable table15111 = new PdfPTable(14);
        table15111.setWidths(new float[] {9.9f, 9.9f, 9.9f, 9.9f, 3f, 3f, 3.3f, 3f, 3f, 3f, 3.4f, 3.6f,4.5f,3.1f});
        table15111.setSpacingBefore(10);
        table15111.setWidthPercentage(100f);
        
        
        PdfPCell cell17;
        
        cell17 = new PdfPCell(new Phrase("Cash Amount", headFont));
        cell17.setBackgroundColor(BaseColor.GRAY);
        cell17.setBorder(Rectangle.NO_BORDER);
        cell17.setPaddingBottom(3f);
        cell17.setPaddingTop(3f);
        cell17.setHorizontalAlignment(Element.ALIGN_LEFT);
        table15111.addCell(cell17);
        cell17 = new PdfPCell(new Phrase("Card Amount", headFont));
        cell17.setBackgroundColor(BaseColor.GRAY);
        cell17.setBorder(Rectangle.NO_BORDER);
        cell17.setPaddingBottom(3f);
        cell17.setPaddingTop(3f);
        cell17.setHorizontalAlignment(Element.ALIGN_LEFT);
        //cell111.setPaddingLeft(-30f);
        table15111.addCell(cell17);
        cell17 = new PdfPCell(new Phrase("Cheque Amount", headFont));
        cell17.setBackgroundColor(BaseColor.GRAY);
        cell17.setBorder(Rectangle.NO_BORDER);
        cell17.setPaddingBottom(3f);
        cell17.setPaddingTop(3f);
        cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell17.setPaddingRight(22f);
        //cell111.setPaddingLeft(-30f);
        table15111.addCell(cell17);
        cell17 = new PdfPCell(new Phrase("Due Amount", headFont));
        cell17.setBackgroundColor(BaseColor.GRAY);
        cell17.setBorder(Rectangle.NO_BORDER);
        cell17.setPaddingBottom(3f);
        cell17.setPaddingTop(3f);
        cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell17.setPaddingRight(19f);
        //cell111.setPaddingLeft(-20f);
        table15111.addCell(cell17);
        cell17 = new PdfPCell(new Phrase("", redFont));
        cell17.setBackgroundColor(BaseColor.GRAY);
        cell17.setBorder(Rectangle.NO_BORDER);
        cell17.setPaddingBottom(3f);
        cell17.setPaddingTop(3f);
        cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell17.setPaddingRight(10f);
        //cell111.setPaddingRight(35f);
        table15111.addCell(cell17);
    
        cell17 = new PdfPCell(new Phrase("", redFont));
        cell17.setBackgroundColor(BaseColor.GRAY);
        cell17.setBorder(Rectangle.NO_BORDER);
        cell17.setPaddingBottom(3f);
        cell17.setPaddingTop(3f);
        cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell17.setPaddingRight(10f);
        //cell111.setPaddingRight(20f);
        table15111.addCell(cell17);
        cell17 = new PdfPCell(new Phrase("", redFont));
        cell17.setBackgroundColor(BaseColor.GRAY);
        cell17.setBorder(Rectangle.NO_BORDER);
        cell17.setPaddingBottom(3f);
        cell17.setPaddingTop(3f);
        cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell17.setPaddingRight(10f);
        //cell111.setPaddingRight(15f);
        table15111.addCell(cell17);
    
        cell17 = new PdfPCell(new Phrase("", redFont));
        cell17.setBackgroundColor(BaseColor.GRAY);
        cell17.setBorder(Rectangle.NO_BORDER);
        cell17.setPaddingBottom(3f);
        cell17.setPaddingTop(3f);
        cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell17.setPaddingRight(10f);
        //cell111.setPaddingRight(12f);
        table15111.addCell(cell17);
        cell17 = new PdfPCell(new Phrase("", redFont));
        cell17.setBackgroundColor(BaseColor.GRAY);
        cell17.setBorder(Rectangle.NO_BORDER);
        cell17.setPaddingBottom(3f);
        cell17.setPaddingTop(3f);
        cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell17.setPaddingRight(10f);
        //cell111.setPaddingRight(10f);
        table15111.addCell(cell17);
    
        cell17 = new PdfPCell(new Phrase("", redFont));
        cell17.setBackgroundColor(BaseColor.GRAY);
        cell17.setBorder(Rectangle.NO_BORDER);
        cell17.setPaddingBottom(3f);
        cell17.setPaddingTop(3f);
        cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell17.setPaddingRight(10f);
        //cell111.setPaddingRight(10f);
        table15111.addCell(cell17);
        cell17 = new PdfPCell(new Phrase("", redFont));
        cell17.setBackgroundColor(BaseColor.GRAY);
        cell17.setBorder(Rectangle.NO_BORDER);
        cell17.setPaddingBottom(3f);
        cell17.setPaddingTop(3f);
        cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell17.setPaddingRight(10f);
        table15111.addCell(cell17);
    
        cell17 = new PdfPCell(new Phrase("", redFont));
        cell17.setBackgroundColor(BaseColor.GRAY);
        cell17.setBorder(Rectangle.NO_BORDER);
        cell17.setPaddingBottom(3f);
        cell17.setPaddingTop(3f);
        cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell17.setPaddingRight(10f);
        table15111.addCell(cell17);
        
        cell17 = new PdfPCell(new Phrase("", redFont));
        cell17.setBackgroundColor(BaseColor.GRAY);
        cell17.setBorder(Rectangle.NO_BORDER);
        cell17.setPaddingBottom(3f);
        cell17.setPaddingTop(3f);
        cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell17.setPaddingRight(10f);
        table15111.addCell(cell17);
        cell17 = new PdfPCell(new Phrase("", redFont));
        cell17.setBackgroundColor(BaseColor.GRAY);
        cell17.setBorder(Rectangle.NO_BORDER);
        cell17.setPaddingBottom(3f);
        cell17.setPaddingTop(3f);
        cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
        
        table15111.addCell(cell17);
        
        
        PdfPCell cell171;
        
        cell171 = new PdfPCell(new Phrase(String.valueOf(totalCashGAmount), redFont));
        cell171.setBorder(Rectangle.NO_BORDER);
        cell171.setPaddingBottom(3f);
        cell171.setPaddingTop(3f);
        cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell171.setPaddingRight(48f);
        table15111.addCell(cell171);
        cell171 = new PdfPCell(new Phrase(String.valueOf(totalCardGAmount), redFont));
        cell171.setBorder(Rectangle.NO_BORDER);
        cell171.setPaddingBottom(3f);
        cell171.setPaddingTop(3f);
        cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell171.setPaddingRight(49f);
        //cell111.setPaddingLeft(-30f);
        table15111.addCell(cell171);
        cell171 = new PdfPCell(new Phrase(String.valueOf(totalChequeGAmount), redFont));
        cell171.setBorder(Rectangle.NO_BORDER);
        cell171.setPaddingBottom(3f);
        cell171.setPaddingTop(3f);
        cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell171.setPaddingRight(22f);
        //cell111.setPaddingLeft(-30f);
        table15111.addCell(cell171);
        cell171 = new PdfPCell(new Phrase(String.valueOf(totalDueGAmount), redFont));
        cell171.setBorder(Rectangle.NO_BORDER);
        cell171.setPaddingBottom(3f);
        cell171.setPaddingTop(3f);
        cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell171.setPaddingRight(19f);
        //cell111.setPaddingLeft(-20f);
        table15111.addCell(cell171);
        cell171 = new PdfPCell(new Phrase("", redFont));
        cell171.setBorder(Rectangle.NO_BORDER);
        cell171.setPaddingBottom(3f);
        cell171.setPaddingTop(3f);
        cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell171.setPaddingRight(10f);
        //cell111.setPaddingRight(35f);
        table15111.addCell(cell171);
    
        cell171 = new PdfPCell(new Phrase("", redFont));
        cell171.setBorder(Rectangle.NO_BORDER);
        cell171.setPaddingBottom(3f);
        cell171.setPaddingTop(3f);
        cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell171.setPaddingRight(10f);
        //cell111.setPaddingRight(20f);
        table15111.addCell(cell171);
        cell171 = new PdfPCell(new Phrase("", redFont));
        cell171.setBorder(Rectangle.NO_BORDER);
        cell171.setPaddingBottom(3f);
        cell171.setPaddingTop(3f);
        cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell171.setPaddingRight(10f);
        //cell111.setPaddingRight(15f);
        table15111.addCell(cell171);
    
        cell171 = new PdfPCell(new Phrase("", redFont));
        cell171.setBorder(Rectangle.NO_BORDER);
        cell171.setPaddingBottom(3f);
        cell171.setPaddingTop(3f);
        cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell171.setPaddingRight(10f);
        //cell111.setPaddingRight(12f);
        table15111.addCell(cell171);
        cell171 = new PdfPCell(new Phrase("", redFont));
        cell171.setBorder(Rectangle.NO_BORDER);
        cell171.setPaddingBottom(3f);
        cell171.setPaddingTop(3f);
        cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell171.setPaddingRight(10f);
        //cell111.setPaddingRight(10f);
        table15111.addCell(cell171);
    
        cell171 = new PdfPCell(new Phrase("", redFont));
        cell171.setBorder(Rectangle.NO_BORDER);
        cell171.setPaddingBottom(3f);
        cell171.setPaddingTop(3f);
        cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell171.setPaddingRight(10f);
        //cell111.setPaddingRight(10f);
        table15111.addCell(cell171);
        cell171 = new PdfPCell(new Phrase("", redFont));
        cell171.setBorder(Rectangle.NO_BORDER);
        cell171.setPaddingBottom(3f);
        cell171.setPaddingTop(3f);
        cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell171.setPaddingRight(10f);
        table15111.addCell(cell171);
    
        cell171 = new PdfPCell(new Phrase("", redFont));
        cell171.setBorder(Rectangle.NO_BORDER);
        cell171.setPaddingBottom(3f);
        cell171.setPaddingTop(3f);
        cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell171.setPaddingRight(10f);
        table15111.addCell(cell171);
        
        cell171 = new PdfPCell(new Phrase("", redFont));
        cell171.setBorder(Rectangle.NO_BORDER);
        cell171.setPaddingBottom(3f);
        cell171.setPaddingTop(3f);
        cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell171.setPaddingRight(10f);
        table15111.addCell(cell171);
        cell171 = new PdfPCell(new Phrase("", redFont));
        cell171.setBorder(Rectangle.NO_BORDER);
        cell171.setPaddingBottom(3f);
        cell171.setPaddingTop(3f);
        cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
        
        table15111.addCell(cell171);
       
        //----------------------------------end of pdf-------------------------------------------
        
       
        cell1.addElement(table151);
        cell1.addElement(table059);
        cell1.addElement(table1511);
        
        cell1.addElement(table15111);
    
        
        
        
        table.addCell(cell1);
        document.add(table);
        document.close();
    
    System.out.println("finished");
    pdfByte = byteArrayOutputStream.toByteArray();
    String uri = ServletUriComponentsBuilder.fromCurrentContextPath().path("/v1/sales/viewFile/")
            .path(salesPaymentPdfServiceImpl.getNextId()).toUriString();
    salesPaymentPdf = new SalesPaymentPdf();
    salesPaymentPdf.setFileName("User Wise IP/OP Summary");
    salesPaymentPdf.setFileuri(uri);
    salesPaymentPdf.setPid(salesPaymentPdfServiceImpl.getNextId());
    salesPaymentPdf.setData(pdfByte);
    System.out.println("my file uri----"+salesPaymentPdf.getFileuri());
    // System.out.println("------------------------End--------------------------------");
    // System.out.println(totalBillAmount);
//    System.out.println(firstName+" "+lastName);
    salesPaymentPdfServiceImpl.save(salesPaymentPdf);
            
            } 
catch (Exception e) {
    e.printStackTrace();
}
return salesPaymentPdf;
}
 





@RequestMapping(value = "/userWiseIpOpDetailedPatientWise", method = RequestMethod.POST)
public SalesPaymentPdf getUserWiseIpOpDetailPatientWise(@RequestBody Map<String, Object> userShift,Principal principal) {
    
    Map<String, Object> user = userShift;
    
    String name = (String) user.get("soldBy");
  /*  String[] a=name.split(" ");
    String firstName=a[0];
    String lastName=a[1];*/
    
    String[] docName=name.split("-");
    
    User user1 = userServiceImpl.findOneByUserId(docName[1]);
    String uId = user1.getUserId();
    String userName = user1.getUserName();
    
//    System.out.println(firstName+" "+lastName);
    
    /*List<PatientRegistration> patientRegistration = patientRegistrationRepository.findUserWiseIpOpDetailed(user.get("fromDate"), user.get("toDate"),uId);
    SalesPaymentPdf salesPaymentPdf = null;
    //CreatedBy (Security)
    User user
    Security=userServiceImpl.findOneByUserId(principal.getName());
    String createdBy=userSecurity.getFirstName()+" "+userSecurity.getLastName();*/
    
    List<PatientRegistration> patientRegistration = patientRegistrationRepository.findUserWiseIpOpDetailed(user.get("fromDate"), user.get("toDate"),uId);
    SalesPaymentPdf salesPaymentPdf = null;
    //CreatedBy (Security)
    User userSecurity=userServiceImpl.findByUserName(principal.getName());
    String createdBy=userSecurity.getFirstName()+" "+userSecurity.getLastName();
    
    
    try {
        byte[] pdfByte = null;
        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
        Document document = new Document(PageSize.A4.rotate());
        Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 10, Font.NORMAL);
        Font redFont1 = new Font(Font.FontFamily.TIMES_ROMAN, 10, Font.NORMAL,BaseColor.RED);
        Font headFont = new Font(Font.FontFamily.TIMES_ROMAN, 10, Font.BOLD);
        Font headFont1 = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD);
        PdfWriter writer = PdfWriter.getInstance(document, byteArrayOutputStream);
        HeaderFooterPageEvent event = new HeaderFooterPageEvent();
        writer.setPageEvent(event);
        Resource fileResourcee = resourceLoader.getResource("classpath:udbhava.png");
        document.open();
        PdfPTable table = new PdfPTable(2);
        Image img = Image.getInstance(fileResourcee.getFile().getAbsolutePath());
        img.scaleAbsolute(75, 95);
        table.setWidthPercentage(105f);
        Phrase pq = new Phrase(new Chunk(img, 5, -80));
    	//shantharam addr
        pq.add(new Chunk(
                "",
                redFont));
        
        
        PdfPTable table212 = new PdfPTable(1);
        table212.setWidths(new float[] { 4f });
        table212.setSpacingBefore(10);
        PdfPCell hcell192;
        hcell192 = new PdfPCell(new Phrase("UDBHAVA HOSPITALS", headFont1));
        hcell192.setBorder(Rectangle.NO_BORDER);
        hcell192.setHorizontalAlignment(Element.ALIGN_CENTER);
        table212.addCell(hcell192);
        
        PdfPCell cellp = new PdfPCell(pq);
        
        cellp.setPaddingBottom(-10f);
        PdfPCell cell1 = new PdfPCell();
        
        //cell1.setBorder(Rectangle.NO_BORDER);
        //cell1.setHorizontalAlignment(Element.ALIGN_CENTER);
        //cell1.setColspan(2);
        cell1.addElement(table212);
        cell1.addElement(pq);
        cell1.setHorizontalAlignment(Element.ALIGN_CENTER);
        cell1.setColspan(2);
        PdfPTable table21 = new PdfPTable(1);
        table21.setWidths(new float[] { 4f });
        table21.setSpacingBefore(10);
        PdfPCell hcell19;
        hcell19 = new PdfPCell(new Phrase("User Wise IP and OP Detailed PatientWise Collection Report", headFont1));
        hcell19.setBorder(Rectangle.NO_BORDER);
        hcell19.setHorizontalAlignment(Element.ALIGN_CENTER);
        table21.addCell(hcell19);
        
        // calender format date
        String from = user.get("fromDate").toString();
        Timestamp timestamp = Timestamp.valueOf(from);
        DateFormat dateFormat = new SimpleDateFormat("dd-MMM-yyyy hh.mm aa ");
        Calendar calendar = Calendar.getInstance();
        calendar.setTimeInMillis(timestamp.getTime());
        String from1 = dateFormat.format(calendar.getTime());
        String to = user.get("toDate").toString();
        
        Timestamp timestamp1 = Timestamp.valueOf(to);
        DateFormat dateFormat1 = new SimpleDateFormat("dd-MMM-yyyy hh.mm aa ");
        Calendar calendar1 = Calendar.getInstance();
        calendar1.setTimeInMillis(timestamp1.getTime());
        String to1 = dateFormat1.format(calendar1.getTime());
        
        // Display a date in day, month, year format
        Date date = Calendar.getInstance().getTime();
        DateFormat formatter = new SimpleDateFormat("dd-MMM-yyyy hh.mm aa");
        String today = formatter.format(date).toString();
        
        PdfPCell hcell20;
        hcell20 = new PdfPCell(new Phrase("From Dt  : " + from1 + "           " + "Till Dt  : " + to1, redFont));
        hcell20.setBorder(Rectangle.NO_BORDER);
        hcell20.setHorizontalAlignment(Element.ALIGN_CENTER);
        table21.addCell(hcell20);
        
        PdfPTable table3 = new PdfPTable(2);
        table3.setWidths(new float[] { 5f, 4f });
        table3.setSpacingBefore(10);
        
        PdfPCell hcell111;
        
        hcell111 = new PdfPCell(new Phrase("Printed By          :  " + createdBy , redFont));
        hcell111.setBorder(Rectangle.NO_BORDER);
        hcell111.setPaddingLeft(-70f);
        table3.addCell(hcell111);
        hcell111 = new PdfPCell(new Phrase("Printed Date & Time    :  " + today, redFont));
        hcell111.setBorder(Rectangle.NO_BORDER);
        hcell111.setPaddingRight(-70f);
        
        hcell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table3.addCell(hcell111);
        cell1.addElement(table21);
        cell1.addElement(table3);
        
        PdfPTable table111 = new PdfPTable(1);
        table111.setWidths(new float[] { 7});
        
        PdfPCell hcell12;
        hcell12 = new PdfPCell(new Phrase("\n UserName  :"+docName[0], headFont));
        hcell12.setBorder(Rectangle.NO_BORDER);
        hcell12.setHorizontalAlignment(Element.ALIGN_LEFT);
        hcell12.setPaddingLeft(-70f);
        table111.addCell(hcell12);
        cell1.addElement(table111);
        
        PdfPTable table1 = new PdfPTable(14);
        table1.setWidths(new float[] { 4f, 6f, 4f, 6f, 4f, 2f, 3f, 3f, 3f, 3f, 3f, 3f,4f,3f });
        PdfPCell hcell;
        hcell = new PdfPCell(new Phrase("Umr No", redFont));
        hcell.setBorder(Rectangle.NO_BORDER);
        hcell.setBackgroundColor(BaseColor.GRAY);
        hcell.setHorizontalAlignment(Element.ALIGN_LEFT);
        table1.addCell(hcell);
        
        hcell = new PdfPCell(new Phrase("Patient Name", redFont));
        hcell.setBorder(Rectangle.NO_BORDER);
        hcell.setBackgroundColor(BaseColor.GRAY);
        hcell.setHorizontalAlignment(Element.ALIGN_LEFT);
        table1.addCell(hcell);
        
        hcell = new PdfPCell(new Phrase("Bill No", redFont));
        hcell.setBorder(Rectangle.NO_BORDER);
        hcell.setBackgroundColor(BaseColor.GRAY);
        hcell.setHorizontalAlignment(Element.ALIGN_LEFT);
        table1.addCell(hcell);
        
        hcell = new PdfPCell(new Phrase("Consultant", redFont));
        hcell.setBorder(Rectangle.NO_BORDER);
        hcell.setBackgroundColor(BaseColor.GRAY);
        hcell.setHorizontalAlignment(Element.ALIGN_LEFT);
        table1.addCell(hcell);
        
        hcell = new PdfPCell(new Phrase("G.Amt", redFont));
        hcell.setBorder(Rectangle.NO_BORDER);
        hcell.setBackgroundColor(BaseColor.GRAY);
        hcell.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table1.addCell(hcell);
        
        hcell = new PdfPCell(new Phrase("Conc.", redFont));
        hcell.setBorder(Rectangle.NO_BORDER);
        hcell.setBackgroundColor(BaseColor.GRAY);
        hcell.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table1.addCell(hcell);
        
        hcell = new PdfPCell(new Phrase("Net Amt", redFont));
        hcell.setBorder(Rectangle.NO_BORDER);
        hcell.setBackgroundColor(BaseColor.GRAY);
        hcell.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table1.addCell(hcell);
        
        hcell = new PdfPCell(new Phrase("Adv. Amt", redFont));
        hcell.setBorder(Rectangle.NO_BORDER);
        hcell.setBackgroundColor(BaseColor.GRAY);
        hcell.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table1.addCell(hcell);
        
        hcell = new PdfPCell(new Phrase("Rec.Amt", redFont));
        hcell.setBorder(Rectangle.NO_BORDER);
        hcell.setBackgroundColor(BaseColor.GRAY);
        hcell.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table1.addCell(hcell);
        
        hcell = new PdfPCell(new Phrase("Cash Amt", redFont));
        hcell.setBorder(Rectangle.NO_BORDER);
        hcell.setBackgroundColor(BaseColor.GRAY);
        hcell.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table1.addCell(hcell);
        
        hcell = new PdfPCell(new Phrase("Chq.Amt", redFont));
        hcell.setBorder(Rectangle.NO_BORDER);
        hcell.setBackgroundColor(BaseColor.GRAY);
        hcell.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table1.addCell(hcell);
        
        hcell = new PdfPCell(new Phrase("Card Amt", redFont));
        hcell.setBorder(Rectangle.NO_BORDER);
        hcell.setBackgroundColor(BaseColor.GRAY);
        hcell.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table1.addCell(hcell);
        
        hcell = new PdfPCell(new Phrase("Cash+Card Amt", redFont));
        hcell.setBorder(Rectangle.NO_BORDER);
        hcell.setBackgroundColor(BaseColor.GRAY);
        hcell.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table1.addCell(hcell);
        
        hcell = new PdfPCell(new Phrase("Due Amt", redFont)); 
        hcell.setBorder(Rectangle.NO_BORDER);
        hcell.setBackgroundColor(BaseColor.GRAY);
        hcell.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table1.addCell(hcell);
        
        table1.setWidthPercentage(100f);
        cell1.addElement(table1);
        
        
//-------------------- OSP BILLS ----------------------------------------            
        
        PdfPTable table11 = new PdfPTable(14);
        table11.setWidths(new float[] { 4f, 6f, 4f, 6f, 4f, 2f, 3f, 3f, 3f, 3f, 3f, 3f,4f,3f });
        table11.setSpacingBefore(10);
        table11.setWidthPercentage(100f);
        PdfPCell hcell01;
        hcell01 = new PdfPCell(new Phrase("OSP BILLS", headFont));
        hcell01.setBorder(Rectangle.NO_BORDER);
        hcell01.setHorizontalAlignment(Element.ALIGN_LEFT);
        table11.addCell(hcell01);
        
        hcell01 = new PdfPCell(new Phrase("", headFont));
        hcell01.setBorder(Rectangle.NO_BORDER);
        hcell01.setHorizontalAlignment(Element.ALIGN_LEFT);
        table11.addCell(hcell01);
        
        hcell01 = new PdfPCell(new Phrase("", headFont));
        hcell01.setBorder(Rectangle.NO_BORDER);
        hcell01.setHorizontalAlignment(Element.ALIGN_LEFT);
        table11.addCell(hcell01);
        
        hcell01 = new PdfPCell(new Phrase("", headFont));
        hcell01.setBorder(Rectangle.NO_BORDER);
        hcell01.setHorizontalAlignment(Element.ALIGN_LEFT);
        table11.addCell(hcell01);
        
        hcell01 = new PdfPCell(new Phrase("", headFont));
        hcell01.setBorder(Rectangle.NO_BORDER);
        hcell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table11.addCell(hcell01);
        
        hcell01 = new PdfPCell(new Phrase("", headFont));
        hcell01.setBorder(Rectangle.NO_BORDER);
        hcell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table11.addCell(hcell01);
        
        hcell01 = new PdfPCell(new Phrase("", headFont));
        hcell01.setBorder(Rectangle.NO_BORDER);
        hcell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table11.addCell(hcell01);
        
        hcell01 = new PdfPCell(new Phrase("", headFont));
        hcell01.setBorder(Rectangle.NO_BORDER);
        hcell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table11.addCell(hcell01);
        
        hcell01 = new PdfPCell(new Phrase("", headFont));
        hcell01.setBorder(Rectangle.NO_BORDER);
        hcell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table11.addCell(hcell01);
        
        hcell01 = new PdfPCell(new Phrase("", headFont));
        hcell01.setBorder(Rectangle.NO_BORDER);
        hcell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table11.addCell(hcell01);
        
        hcell01 = new PdfPCell(new Phrase("", headFont));
        hcell01.setBorder(Rectangle.NO_BORDER);
        hcell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table11.addCell(hcell01);
        
        hcell01 = new PdfPCell(new Phrase("", headFont));
        hcell01.setBorder(Rectangle.NO_BORDER);
        hcell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table11.addCell(hcell01);
        
        hcell01 = new PdfPCell(new Phrase("", headFont));
        hcell01.setBorder(Rectangle.NO_BORDER);
        hcell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table11.addCell(hcell01);
        
        hcell01 = new PdfPCell(new Phrase("", headFont));
        hcell01.setBorder(Rectangle.NO_BORDER);
        hcell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table11.addCell(hcell01);
        
        float otherOspFee = 0;
        float otherOspFees=0;
        float cashOspAmt1 = 0;
        float cashOspAmt2=0;
        float chqOspAmt1 = 0;
        float chqOspAmt2=0;
        float cardOspAmt1 = 0;
        float cardOspAmt2=0;
        float opAdvOspAmt=0;
        float opAdvOspAmt1=0;
        float totalFeeOspAmt1 = 0;
        float totalFeeOspAmt2=0;
        float totalCashOspAmt1 = 0;
        float totalCashOspAmt2=0;
        float totalCardOspAmt1 = 0;
        float totalCardOspAmt2=0;
        float totalChqOspAmt1 = 0;
        float totalChqOspAmt2=0;
        float totalDueOspAmt1 = 0;
        float totalDueOspAmt2=0;
        float dueOspAmt1=0;
        float dueOspAmt2=0;
        float recpOspAmt1=0;
        float recpOspAmt2=0;
        float totalOspRecAmt1=0;
        float totalOspRecAmt2=0;
        float totalOspAdvAmt=0;
        float totalOspAdvAmt1=0;
        String umr=null;
        String typeOfCharge=null;
        String patientType=null;
        String patientTypes=null;
        String pId = null;
        String pRegId=null;
        String cServiceId=null;
        String patientName=null;
        String consultant=null;
        
        String ospId=null;
        float totalcashPlusCardOspAmt1=0;
        float cashPlusCardOspAmt=0;
        float cashPlusCardOspAmt2=0;
        float totalcashPlusCardOspAmt=0;
                 
        
        
        String s=null;
        
        List<Map<String, String>> show = new ArrayList<>();
        List<String> info = new ArrayList<>();
        Map<String, String> displayInfo = null; 
        
        List<OspService> ospService=ospServiceRepository.findByUserDetails(user.get("fromDate"), user.get("toDate"),uId);
        
        
                            if(!ospService.isEmpty())
                            {
                                for(OspService osp : ospService)
                                {
                                    ospId=osp.getOspServiceId();
                                    
                                    displayInfo = new HashMap<>();     
                                    
                                    patientName=osp.getPatientName();
                                    
                                    User userOsp=userServiceImpl.findOneByUserId(osp.getRefferedById());                        
                                    consultant=userOsp.getFirstName()+" "+userOsp.getLastName();
                                    List<OspService> ospServices=ospServiceRepository.findServices(ospId);
                                    
                                    if (!info.contains(ospId)) 
                                    {
                                            for(OspService ospServiceInfo:ospServices)
                                            {
                                            
                                                
                                                            if(ospServiceInfo.getNetAmount()!=0)
                                                            {
                                                
                                                                if(ospServiceInfo.getOspServiceId()!=null)
                                                                {
                                        
                    
                                                                            if(ospServiceInfo.getPaymentType().equalsIgnoreCase("CASH"))
                                                                            {
                                                                                
                                                                                otherOspFee=ospServiceInfo.getNetAmount();
                                                                                cashOspAmt1=ospServiceInfo.getNetAmount();
                                                                                chqOspAmt1=0;
                                                                                cardOspAmt1=0;
                                                                                totalFeeOspAmt1+=otherOspFee;
                                                                                totalCashOspAmt1+=cashOspAmt1;
                                                                                cashPlusCardOspAmt=0;
                                                                                recpOspAmt1=otherOspFee;
                                                                                dueOspAmt1 = 0;
                                                                                totalDueOspAmt1+=dueOspAmt1;
                                                                                totalOspRecAmt1+=recpOspAmt1;
                                                            
                                                           
                                                            
                                                                            }
                                                                            else if(ospServiceInfo.getPaymentType().equalsIgnoreCase("CHQ")||ospServiceInfo.getPaymentType().equalsIgnoreCase("CHEQUE"))
                                                                            {
                                                                                  otherOspFee=ospServiceInfo.getNetAmount();
                                                                                  chqOspAmt1=ospServiceInfo.getNetAmount();
                                                                                  cashOspAmt1=0;
                                                                                  cardOspAmt1=0;
                                                                                  cashPlusCardOspAmt=0;
                                                                                  totalFeeOspAmt1+=otherOspFee;
                                                                                  totalChqOspAmt1+=chqOspAmt1;
                                                                                  recpOspAmt1=otherOspFee;
                                                                                  dueOspAmt1 =0;
                                                                                  totalDueOspAmt1+=dueOspAmt1;
                                                                                  totalOspRecAmt1+=recpOspAmt1;
                                                           
                                                                            }
                                                                            else if(ospServiceInfo.getPaymentType().equalsIgnoreCase("DEBIT CARD") || ospServiceInfo.getPaymentType().equalsIgnoreCase("CREDIT CARD") || ospServiceInfo.getPaymentType().equalsIgnoreCase("CARD"))
                                                                            {
                                                                                otherOspFee=ospServiceInfo.getNetAmount();
                                                                                cardOspAmt1=ospServiceInfo.getNetAmount();
                                                                                cashOspAmt1=0;
                                                                                chqOspAmt1=0;
                                                                                cashPlusCardOspAmt=0;
                                                                                totalFeeOspAmt1+=otherOspFee;
                                                                                totalCardOspAmt1+=cardOspAmt1;
                                                                                recpOspAmt1=otherOspFee;
                                                                                dueOspAmt1 =0;
                                                                                totalDueOspAmt1+=dueOspAmt1;
                                                                                totalOspRecAmt1+=recpOspAmt1;
                                                                               
                                                                            
                                                                            }
                                                                            else if(ospServiceInfo.getPaymentType().equalsIgnoreCase("ADVANCE"))
                                                                            {
                                                                                
                                                                                
                                                                                otherOspFee=ospServiceInfo.getNetAmount();
                                                                                cashOspAmt1=0;
                                                                                cardOspAmt1=0;
                                                                                chqOspAmt1=0;
                                                                                opAdvOspAmt=otherOspFee;
                                                                                cashPlusCardOspAmt=0;
                                                                                totalFeeOspAmt1+=opAdvOspAmt;
                                                                                recpOspAmt1=0;
                                                                                dueOspAmt1 = 0;
                                                                                totalOspAdvAmt+=opAdvOspAmt;
                                                                                totalCardOspAmt1+=0;
                                                                                totalDueOspAmt1+=dueOspAmt1;
                                                                                totalOspRecAmt1+=recpOspAmt1;
                                                                            } 
                                                                            else if(ospServiceInfo.getPaymentType().equalsIgnoreCase("DUE"))
                                                                            {
                                                                                
                                                                                
                                                                                otherOspFee=0;
                                                                                cashOspAmt1=0;
                                                                                cardOspAmt1=0;
                                                                                chqOspAmt1=0;
                                                                                cashPlusCardOspAmt=0;
                                                                                opAdvOspAmt=otherOspFee;
                                                                                totalFeeOspAmt1+=otherOspFee;
                                                                                recpOspAmt1=0;
                                                                                dueOspAmt1 =ospServiceInfo.getNetAmount();
                                                                                totalOspAdvAmt+=opAdvOspAmt;
                                                                                totalCardOspAmt1+=0;
                                                                                totalDueOspAmt1+=dueOspAmt1;
                                                                                totalOspRecAmt1+=recpOspAmt1;
                                                                                
                                                                            }
                                                                            else if(ospServiceInfo.getPaymentType().equalsIgnoreCase("CASH+CARD"))
                                                                            {
                                                                                
                                                                                
                                                                                otherOspFee=ospServiceInfo.getNetAmount();
                                                                                cashOspAmt1=0;
                                                                                cardOspAmt1=0;
                                                                                chqOspAmt1=0;
                                                                                opAdvOspAmt=0;
                                                                                totalFeeOspAmt1+=otherOspFee;
                                                                                recpOspAmt1=otherOspFee;
                                                                                dueOspAmt1 =0;
                                                                                cashPlusCardOspAmt=ospServiceInfo.getNetAmount();
                                                                                totalOspAdvAmt+=opAdvOspAmt;
                                                                                totalcashPlusCardOspAmt+=cashPlusCardOspAmt;
                                                                                totalCardOspAmt1+=0;
                                                                                totalDueOspAmt1+=dueOspAmt1;
                                                                                totalOspRecAmt1+=recpOspAmt1;
                                                                                
                                                                            }
                      
                                            otherOspFees+=otherOspFee;
                                            cashOspAmt2+=cashOspAmt1;
                                            cardOspAmt2+=cardOspAmt1;
                                            chqOspAmt2+=chqOspAmt1;
                                            opAdvOspAmt1+=opAdvOspAmt;
                                            recpOspAmt2+= recpOspAmt1;
                                            dueOspAmt2+=dueOspAmt1;
                                            cashPlusCardOspAmt2+=cashPlusCardOspAmt;
                                            
                                    }   
                                        
                                                            }
                                                            
                                                            displayInfo.put("patientName", patientName);
                                                             displayInfo.put("ospId", ospId);
                                                             displayInfo.put("consultant", consultant);
                                                            info.add(ospId);
                                    }
                 
                                    System.out.println("-------Added regid+"+pRegId);
                                    
                                    
                                
                                System.out.println("-------list contains regid");
                        
                                System.out.println("-------outside for");
                
                                
                                displayInfo.put("otherOspFee", String.valueOf(otherOspFees));
                                  displayInfo.put("opAdvOspAmt", String.valueOf(opAdvOspAmt1));
                                  displayInfo.put("cashOspAmt1", String.valueOf(cashOspAmt2));
                                  displayInfo.put("cardOspAmt1", String.valueOf(cardOspAmt2));
                                  displayInfo.put("chqOspAmt1", String.valueOf(chqOspAmt2));  
                                  displayInfo.put("recpOspAmt1", String.valueOf(recpOspAmt2));
                                  displayInfo.put("dueOspAmt1", String.valueOf(dueOspAmt2));
                                  displayInfo.put("cashPlusCardOspAmt", String.valueOf(cashPlusCardOspAmt2));
                                
                                
                                 show.add(displayInfo);
                                            }    
                                    
                                                    
                                    
                                            otherOspFees=0;
                                            cashOspAmt2=0;
                                            cardOspAmt2=0;
                                            chqOspAmt2=0;
                                            opAdvOspAmt1=0;
                                            recpOspAmt2=0;
                                            dueOspAmt2=0;
                                            cashPlusCardOspAmt2=0;
            
            }
            totalFeeOspAmt2+=totalFeeOspAmt1;
            totalCashOspAmt2+=totalCashOspAmt1;
            totalCardOspAmt2+=totalCardOspAmt1;
            totalChqOspAmt2+=totalChqOspAmt1;
            totalDueOspAmt2+=totalDueOspAmt1;
            totalOspRecAmt2+=totalOspRecAmt1;
            totalOspAdvAmt1+=totalOspAdvAmt;
            totalcashPlusCardOspAmt1+=totalcashPlusCardOspAmt;
            
        
        //-----------------------------------FOR DISPLAYING VALUES----------------------------------------
        
                PdfPCell cell111;
                
                for (Map<String, String> show1 : show) {
                cell111 = new PdfPCell(new Phrase("", redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                table11.addCell(cell111);
              
            cell111 = new PdfPCell(new Phrase(String.valueOf(show1.get("patientName")), redFont));
            cell111.setBorder(Rectangle.NO_BORDER);
            cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
            table11.addCell(cell111);
                cell111 = new PdfPCell(new Phrase(String.valueOf(show1.get("ospId")), redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                table11.addCell(cell111);
                cell111 = new PdfPCell(new Phrase(String.valueOf(show1.get("consultant")), redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                table11.addCell(cell111);
                cell111 = new PdfPCell(new Phrase(String.valueOf(show1.get("otherOspFee")), redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                table11.addCell(cell111);
            
                cell111 = new PdfPCell(new Phrase("0", redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                table11.addCell(cell111);
                cell111 = new PdfPCell(new Phrase(String.valueOf(show1.get("otherOspFee")), redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                table11.addCell(cell111);
            
                cell111 = new PdfPCell(new Phrase(String.valueOf(show1.get("opAdvOspAmt")), redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                table11.addCell(cell111);
                cell111 = new PdfPCell(new Phrase(String.valueOf(show1.get("recpOspAmt1")), redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                table11.addCell(cell111);
            
                cell111 = new PdfPCell(new Phrase(String.valueOf(show1.get("cashOspAmt1")), redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                table11.addCell(cell111);
                cell111 = new PdfPCell(new Phrase(String.valueOf(show1.get("chqOspAmt1")), redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                table11.addCell(cell111);
            
                cell111 = new PdfPCell(new Phrase(String.valueOf(show1.get("cardOspAmt1")), redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                table11.addCell(cell111);
                cell111 = new PdfPCell(new Phrase(String.valueOf(show1.get("cashPlusCardOspAmt")), redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                table11.addCell(cell111);
                cell111 = new PdfPCell(new Phrase(String.valueOf(show1.get("dueOspAmt1")), redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                table11.addCell(cell111);
                }
                
        }
        else
        {
             PdfPCell cell111;
                
             cell111 = new PdfPCell(new Phrase("", redFont));
             cell111.setBorder(Rectangle.NO_BORDER);
             cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
             table11.addCell(cell111);
            
             
                 cell111 = new PdfPCell(new Phrase("", redFont));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                 table11.addCell(cell111);
             
             cell111 = new PdfPCell(new Phrase("", redFont));
             cell111.setBorder(Rectangle.NO_BORDER);
             cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
             table11.addCell(cell111);
             cell111 = new PdfPCell(new Phrase("", redFont));
             cell111.setBorder(Rectangle.NO_BORDER);
             cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
             table11.addCell(cell111);
             cell111 = new PdfPCell(new Phrase("0", redFont));
             cell111.setBorder(Rectangle.NO_BORDER);
             cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
             table11.addCell(cell111);
         
             cell111 = new PdfPCell(new Phrase("0", redFont));
             cell111.setBorder(Rectangle.NO_BORDER);
             cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
             table11.addCell(cell111);
             cell111 = new PdfPCell(new Phrase("0", redFont));
             cell111.setBorder(Rectangle.NO_BORDER);
             cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
             table11.addCell(cell111);
         
             cell111 = new PdfPCell(new Phrase("0", redFont));
             cell111.setBorder(Rectangle.NO_BORDER);
             cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
             table11.addCell(cell111);
             cell111 = new PdfPCell(new Phrase("0", redFont));
             cell111.setBorder(Rectangle.NO_BORDER);
             cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
             table11.addCell(cell111);
         
             cell111 = new PdfPCell(new Phrase("0", redFont));
             cell111.setBorder(Rectangle.NO_BORDER);
             cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
             table11.addCell(cell111);
             cell111 = new PdfPCell(new Phrase("0", redFont));
             cell111.setBorder(Rectangle.NO_BORDER);
             cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
             table11.addCell(cell111);
         
             cell111 = new PdfPCell(new Phrase("0", redFont));
             cell111.setBorder(Rectangle.NO_BORDER);
             cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
             table11.addCell(cell111);
             
             cell111 = new PdfPCell(new Phrase("0", redFont));
             cell111.setBorder(Rectangle.NO_BORDER);
             cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
             table11.addCell(cell111);
             cell111 = new PdfPCell(new Phrase("0", redFont));
             cell111.setBorder(Rectangle.NO_BORDER);
             cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
             table11.addCell(cell111);
        }
    
        
        
        cell1.addElement(table11);
        
        PdfPTable table611 = new PdfPTable(14);
        table611.setWidths(new float[] {4f, 6f, 4f, 6f, 4f, 2f, 3f, 3f, 3f, 3f, 3f, 3f,4f,3f});
        table611.setSpacingBefore(10);
        table611.setWidthPercentage(100f);
        
        PdfPCell cell1111;
        cell1111 = new PdfPCell(new Phrase("", redFont));
        cell1111.setBorder(Rectangle.NO_BORDER);
        cell1111.setHorizontalAlignment(Element.ALIGN_LEFT);
        table611.addCell(cell1111);
        
        cell1111 = new PdfPCell(new Phrase("", redFont));
        cell1111.setBorder(Rectangle.NO_BORDER);
        cell1111.setHorizontalAlignment(Element.ALIGN_LEFT);
        table611.addCell(cell1111);
        
        cell1111 = new PdfPCell(new Phrase("", redFont));
        cell1111.setBorder(Rectangle.NO_BORDER);
        cell1111.setHorizontalAlignment(Element.ALIGN_LEFT);
        table611.addCell(cell1111);
        
        cell1111 = new PdfPCell(new Phrase("", redFont));
        cell1111.setBorder(Rectangle.NO_BORDER);
        cell1111.setHorizontalAlignment(Element.ALIGN_LEFT);
        table611.addCell(cell1111);
        
        cell1111 = new PdfPCell(new Phrase(String.valueOf(totalFeeOspAmt1), redFont));
        cell1111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell1111.setPaddingTop(5f);
        cell1111.setPaddingBottom(5f);
        cell1111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table611.addCell(cell1111);
    
        cell1111 = new PdfPCell(new Phrase("0", redFont));
        cell1111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell1111.setPaddingTop(5f);
        cell1111.setPaddingBottom(5f);
        cell1111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table611.addCell(cell1111);
        
        cell1111 = new PdfPCell(new Phrase(String.valueOf(totalFeeOspAmt1), redFont));
        cell1111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell1111.setPaddingTop(5f);
        cell1111.setPaddingBottom(5f);
        cell1111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table611.addCell(cell1111);
    
        cell1111 = new PdfPCell(new Phrase(String.valueOf(totalOspAdvAmt), redFont));
        cell1111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell1111.setPaddingTop(5f);
        cell1111.setPaddingBottom(5f);
        cell1111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table611.addCell(cell1111);
        
        cell1111 = new PdfPCell(new Phrase(String.valueOf(totalOspRecAmt1), redFont));
        cell1111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell1111.setPaddingTop(5f);
        cell1111.setPaddingBottom(5f);
        cell1111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table611.addCell(cell1111);
    
        cell1111 = new PdfPCell(new Phrase(String.valueOf(totalCashOspAmt1), redFont));
        cell1111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell1111.setPaddingTop(5f);
        cell1111.setPaddingBottom(5f);
        cell1111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table611.addCell(cell1111);
        
        cell1111 = new PdfPCell(new Phrase(String.valueOf(totalChqOspAmt1), redFont));
        cell1111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell1111.setPaddingTop(5f);
        cell1111.setPaddingBottom(5f);
        cell1111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table611.addCell(cell1111);
    
        cell1111 = new PdfPCell(new Phrase(String.valueOf(totalCardOspAmt1), redFont));
        cell1111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell1111.setPaddingTop(5f);
        cell1111.setPaddingBottom(5f);
        cell1111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table611.addCell(cell1111);
        
        cell1111 = new PdfPCell(new Phrase(String.valueOf(totalcashPlusCardOspAmt1), redFont));
        cell1111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell1111.setPaddingTop(5f);
        cell1111.setPaddingBottom(5f);
        cell1111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table611.addCell(cell1111);
        
        cell1111 = new PdfPCell(new Phrase(String.valueOf(totalDueOspAmt1), redFont));
        cell1111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell1111.setPaddingTop(5f);
        cell1111.setPaddingBottom(5f);
        cell1111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table611.addCell(cell1111);
        cell1.addElement(table611);
        
        
        
        
        
//-------------------- OP BILLS ----------------------------------------            
        
        PdfPTable table17 = new PdfPTable(14);
        table17.setWidths(new float[] { 4f, 6f, 4f, 6f, 4f, 2f, 3f, 3f, 3f, 3f, 3f, 3f,4f,3f });
        table17.setSpacingBefore(10);
        table17.setWidthPercentage(100f);
        PdfPCell hcell011;
        hcell011 = new PdfPCell(new Phrase("OP BILLS", headFont));
        hcell011.setBorder(Rectangle.NO_BORDER);
        hcell011.setHorizontalAlignment(Element.ALIGN_LEFT);
        table17.addCell(hcell011);
        
        hcell011 = new PdfPCell(new Phrase("", headFont));
        hcell011.setBorder(Rectangle.NO_BORDER);
        hcell011.setHorizontalAlignment(Element.ALIGN_LEFT);
        table17.addCell(hcell011);
        
        hcell011 = new PdfPCell(new Phrase("", headFont));
        hcell011.setBorder(Rectangle.NO_BORDER);
        hcell011.setHorizontalAlignment(Element.ALIGN_LEFT);
        table17.addCell(hcell011);
        
        hcell011 = new PdfPCell(new Phrase("", headFont));
        hcell011.setBorder(Rectangle.NO_BORDER);
        hcell011.setHorizontalAlignment(Element.ALIGN_LEFT);
        table17.addCell(hcell011);
        
        hcell011 = new PdfPCell(new Phrase("", headFont));
        hcell011.setBorder(Rectangle.NO_BORDER);
        hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table17.addCell(hcell011);
        
        hcell011 = new PdfPCell(new Phrase("", headFont));
        hcell011.setBorder(Rectangle.NO_BORDER);
        hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table17.addCell(hcell011);
        
        hcell011 = new PdfPCell(new Phrase("", headFont));
        hcell011.setBorder(Rectangle.NO_BORDER);
        hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table17.addCell(hcell011);
        
        hcell011 = new PdfPCell(new Phrase("", headFont));
        hcell011.setBorder(Rectangle.NO_BORDER);
        hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table17.addCell(hcell011);
        
        hcell011 = new PdfPCell(new Phrase("", headFont));
        hcell011.setBorder(Rectangle.NO_BORDER);
        hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table17.addCell(hcell011);
        
        hcell011 = new PdfPCell(new Phrase("", headFont));
        hcell011.setBorder(Rectangle.NO_BORDER);
        hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table17.addCell(hcell011);
        
        hcell011 = new PdfPCell(new Phrase("", headFont));
        hcell011.setBorder(Rectangle.NO_BORDER);
        hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table17.addCell(hcell011);
        
        hcell011 = new PdfPCell(new Phrase("", headFont));
        hcell011.setBorder(Rectangle.NO_BORDER);
        hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table17.addCell(hcell011);
        
        hcell011 = new PdfPCell(new Phrase("", headFont));
        hcell011.setBorder(Rectangle.NO_BORDER);
        hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table17.addCell(hcell011);
        
        hcell011 = new PdfPCell(new Phrase("", headFont));
        hcell011.setBorder(Rectangle.NO_BORDER);
        hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table17.addCell(hcell011);
        
        float otherFee = 0;
        float otherFees=0;
        float cashAmt1 = 0;
        float cashAmt2=0;
        float chqAmt1 = 0;
        float chqAmt2=0;
        float cardAmt1 = 0;
        float cardAmt2=0;
        float opAdvAmt=0;
        float opAdvAmt1=0;
        float totalFeeAmt1 = 0;
        float totalFeeAmt2=0;
        float totalCashAmt1 = 0;
        float totalCashAmt2=0;
        float totalCardAmt1 = 0;
        float totalCardAmt2=0;
        float totalChqAmt1 = 0;
        float totalChqAmt2=0;
        float totalDueAmt1 = 0;
        float totalDueAmt2=0;
        float dueAmt1=0;
        float dueAmt2=0;
        float recpAmt1=0;
        float recpAmt2=0;
        float totalRecAmt1=0;
        float totalRecAmt2=0;
        float totalOpAdvAmt=0;
        float totalOpAdvAmt1=0;
        /*String umr=null;
        String typeOfCharge=null;
        String patientType=null;
        String patientTypes=null;
        String pId = null;
        String pRegId=null;
        String cServiceId=null;
        String patientName=null;
        String consultant=null;*/
        float totalcashPlusCardAmt1=0;
        float cashPlusCardAmt=0;
        float cashPlusCardAmt2=0;
        float totalcashPlusCardAmt=0;
        String pId1=null;
                 
        
        
       // String s=null;
        
        List<Map<String, String>> show6 = new ArrayList<>();
        List<String> info4 = new ArrayList<>();
        Map<String, String> displayInfo9 = null; 
        
        
        List<LaboratoryRegistration> laboratoryRegistrations=laboratoryRegistrationRepository.findUserWiseIpOpDetailedOther(user.get("fromDate"), user.get("toDate"),uId);
        
        
        
        if(!laboratoryRegistrations.isEmpty())
        {
            for(LaboratoryRegistration pReg : laboratoryRegistrations)
            {
            	PatientRegistration laboratory=pReg.getLaboratoryPatientRegistration();
                pId1=pReg.getLaboratoryPatientRegistration().getRegId();
                
                System.out.println("p id-----------------"+pId1);
                displayInfo9 = new HashMap<>();     
                patientType=pReg.getpType();
          
                umr=laboratory.getPatientDetails().getUmr();
                if(laboratory.getPatientDetails().getMiddleName()!=null)
                {
                    patientName=laboratory.getPatientDetails().getFirstName()+" "+laboratory.getPatientDetails().getMiddleName()+" "+laboratory.getPatientDetails().getLastName();
                }
                else
                {
                    patientName=laboratory.getPatientDetails().getFirstName()+" "+laboratory.getPatientDetails().getLastName();    
                }
                consultant=laboratory.getPatientDetails().getConsultant();
               
                System.out.println("---------------------inside patreg if");
               // List<ChargeBill> chargeBillService=chargeBillRepository.findByPatRegIdsAndServiceId(pRegId);
                
                List<LaboratoryRegistration> laboratoryRegistration=laboratoryRegistrationRepository.findUserWiseIpOpDetailedOtherRegId(user.get("fromDate"), user.get("toDate"),uId,pId1);
                
                if (!info4.contains(pId1)) 
                {
                	System.out.println("---------------------inside info if");
                    if(!laboratoryRegistration.isEmpty())
                    {
                       // List<ChargeBill> charge=chargeBillRepository.findByPatRegIds(pRegId);
                        for(LaboratoryRegistration pp : laboratoryRegistration)
                        {
                        	System.out.println("lab reg id"+pp.getLabRegId());
                                
          
                                if(pp.getNetAmount()!=0)
                                {
                                	System.out.println("----------------------------------labamount ");	
                    
                                            if(pp.getPaymentType().equalsIgnoreCase("CASH"))
                                            {
                                                
                                                otherFee=pp.getNetAmount();
                                                cashAmt1=pp.getNetAmount();
                                                chqAmt1=0;
                                                cardAmt1=0;
                                                totalFeeAmt1+=otherFee;
                                                totalCashAmt1+=cashAmt1;
                                                cashPlusCardAmt=0;
                                                recpAmt1=otherFee;
                                                dueAmt1 = 0;
                                                totalDueAmt1+=dueAmt1;
                                                totalRecAmt1+=recpAmt1;
                            
                           
                            
                                            }
                                            else if(pp.getPaymentType().equalsIgnoreCase("CHQ")||pp.getPaymentType().equalsIgnoreCase("CHEQUE"))
                                            {
                                                  otherFee=pp.getNetAmount();
                                                  chqAmt1=pp.getNetAmount();
                                                  cashAmt1=0;
                                                  cardAmt1=0;
                                                  cashPlusCardAmt=0;
                                                  totalFeeAmt1+=otherFee;
                                                  totalChqAmt1+=chqAmt1;
                                                  recpAmt1=otherFee;
                                                  dueAmt1 =0;
                                                  totalDueAmt1+=dueAmt1;
                                                  totalRecAmt1+=recpAmt1;
                           
                                            }
                                            else if(pp.getPaymentType().equalsIgnoreCase("DEBIT CARD") || pp.getPaymentType().equalsIgnoreCase("CREDIT CARD") || pp.getPaymentType().equalsIgnoreCase("CARD"))
                                            {
                                                otherFee=pp.getNetAmount();
                                                cardAmt1=pp.getNetAmount();
                                                cashAmt1=0;
                                                chqAmt1=0;
                                                cashPlusCardAmt=0;
                                                totalFeeAmt1+=otherFee;
                                                totalCardAmt1+=cardAmt1;
                                                recpAmt1=otherFee;
                                                dueAmt1 =0;
                                                totalDueAmt1+=dueAmt1;
                                                totalRecAmt1+=recpAmt1;
                                               
                                            
                                            }
                                            else if(pp.getPaymentType().equalsIgnoreCase("ADVANCE"))
                                            {
                                                
                                                
                                                otherFee=pp.getNetAmount();
                                                cashAmt1=0;
                                                cardAmt1=0;
                                                chqAmt1=0;
                                                opAdvAmt=otherFee;
                                                cashPlusCardAmt=0;
                                                totalFeeAmt1+=opAdvAmt;
                                                recpAmt1=0;
                                                dueAmt1 = 0;
                                                totalOpAdvAmt+=opAdvAmt;
                                                totalCardAmt1+=0;
                                                totalDueAmt1+=dueAmt1;
                                                totalRecAmt1+=recpAmt1;
                                            } 
                                            else if(pp.getPaymentType().equalsIgnoreCase("DUE"))
                                            {
                                                
                                                
                                                otherFee=0;
                                                cashAmt1=0;
                                                cardAmt1=0;
                                                chqAmt1=0;
                                                cashPlusCardAmt=0;
                                                opAdvAmt=otherFee;
                                                totalFeeAmt1+=otherFee;
                                                recpAmt1=0;
                                                dueAmt1 =pp.getNetAmount();
                                                totalOpAdvAmt+=opAdvAmt;
                                                totalCardAmt1+=0;
                                                totalDueAmt1+=dueAmt1;
                                                totalRecAmt1+=recpAmt1;
                                                
                                            }
                                            else if(pp.getPaymentType().equalsIgnoreCase("CASH+CARD"))
                                            {
                                                
                                                
                                                otherFee=pp.getNetAmount();
                                                cashAmt1=0;
                                                cardAmt1=0;
                                                chqAmt1=0;
                                                opAdvAmt=0;
                                                totalFeeAmt1+=otherFee;
                                                recpAmt1=otherFee;
                                                dueAmt1 =0;
                                                cashPlusCardAmt=pp.getNetAmount();
                                                totalOpAdvAmt+=opAdvAmt;
                                                totalcashPlusCardAmt+=cashPlusCardAmt;
                                                totalCardAmt1+=0;
                                                totalDueAmt1+=dueAmt1;
                                                totalRecAmt1+=recpAmt1;
                                                
                                            }
                      
                                            otherFees+=otherFee;
                                            
                                            cashAmt2+=cashAmt1;
                                            cardAmt2+=cardAmt1;
                                            chqAmt2+=chqAmt1;
                                            opAdvAmt1+=opAdvAmt;
                                            recpAmt2+= recpAmt1;
                                            dueAmt2+=dueAmt1;
                                            cashPlusCardAmt2+=cashPlusCardAmt;
                                            
                                                   
                                            
                                        
                
                                         displayInfo9.put("otherFee", String.valueOf(otherFees));
                                              displayInfo9.put("opAdvAmt", String.valueOf(opAdvAmt1));
                                              displayInfo9.put("cashAmt1", String.valueOf(cashAmt2));
                                              displayInfo9.put("cardAmt1", String.valueOf(cardAmt2));
                                              displayInfo9.put("chqAmt1", String.valueOf(chqAmt2));  
                                              displayInfo9.put("recpAmt1", String.valueOf(recpAmt2));
                                              displayInfo9.put("dueAmt1", String.valueOf(dueAmt2));
                                              displayInfo9.put("cashPlusCardAmt", String.valueOf(cashPlusCardAmt2));
                                    }
                                   
                                	
                                    
                                    System.out.println("-------Added regid+"+pRegId);
                                    
                                    
                                }
                               
                                
                        info4.add(pId1);
                               
                    }
                    
                    System.out.println("-------list contains regid");
                    
                    System.out.println("-------outside for");
    
                    
                    displayInfo9.put("umr", umr);
                     displayInfo9.put("patientName", patientName);
                     displayInfo9.put("pRegId", pId1);
                     displayInfo9.put("consultant", consultant);
                     show6.add(displayInfo9); 
                   
                        
                    }
                
                otherFees=0;
                cashAmt2=0;
                cardAmt2=0;
                chqAmt2=0;
                opAdvAmt1=0;
                recpAmt2=0;
                dueAmt2=0;
                cashPlusCardAmt2=0;
            }
            totalFeeAmt2+=totalFeeAmt1;
            totalCashAmt2+=totalCashAmt1;
            totalCardAmt2+=totalCardAmt1;
            totalChqAmt2+=totalChqAmt1;
            totalDueAmt2+=totalDueAmt1;
            totalRecAmt2+=totalRecAmt1;
            totalOpAdvAmt1+=totalOpAdvAmt;
            totalcashPlusCardAmt1+=totalcashPlusCardAmt;
            
        
        //-----------------------------------FOR DISPLAYING VALUES----------------------------------------
        
                PdfPCell cell111;
                
                for (Map<String, String> show1 : show6) {
                	System.out.println("List consists of-----------"+show6.size());
                cell111 = new PdfPCell(new Phrase(String.valueOf( show1.get("umr")), redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                table17.addCell(cell111);
              
            cell111 = new PdfPCell(new Phrase(String.valueOf(show1.get("patientName")), redFont));
            cell111.setBorder(Rectangle.NO_BORDER);
            cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
            table17.addCell(cell111);
                cell111 = new PdfPCell(new Phrase(String.valueOf(show1.get("pRegId")), redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                table17.addCell(cell111);
                cell111 = new PdfPCell(new Phrase(String.valueOf(show1.get("consultant")), redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                table17.addCell(cell111);
                cell111 = new PdfPCell(new Phrase(String.valueOf(show1.get("otherFee")), redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                table17.addCell(cell111);
            
                cell111 = new PdfPCell(new Phrase("0", redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                table17.addCell(cell111);
                cell111 = new PdfPCell(new Phrase(String.valueOf(show1.get("otherFee")), redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                table17.addCell(cell111);
            
                cell111 = new PdfPCell(new Phrase(String.valueOf(show1.get("opAdvAmt")), redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                table17.addCell(cell111);
                cell111 = new PdfPCell(new Phrase(String.valueOf(show1.get("recpAmt1")), redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                table17.addCell(cell111);
            
                cell111 = new PdfPCell(new Phrase(String.valueOf(show1.get("cashAmt1")), redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                table17.addCell(cell111);
                cell111 = new PdfPCell(new Phrase(String.valueOf(show1.get("chqAmt1")), redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                table17.addCell(cell111);
            
                cell111 = new PdfPCell(new Phrase(String.valueOf(show1.get("cardAmt1")), redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                table17.addCell(cell111);
                cell111 = new PdfPCell(new Phrase(String.valueOf(show1.get("cashPlusCardAmt")), redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                table17.addCell(cell111);
                cell111 = new PdfPCell(new Phrase(String.valueOf(show1.get("dueAmt1")), redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                table17.addCell(cell111);
                }
                
        }
        else
        {
             PdfPCell cell111;
                
             cell111 = new PdfPCell(new Phrase("", redFont));
             cell111.setBorder(Rectangle.NO_BORDER);
             cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
             table17.addCell(cell111);
            
             
                 cell111 = new PdfPCell(new Phrase("", redFont));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                 table17.addCell(cell111);
             
             cell111 = new PdfPCell(new Phrase("", redFont));
             cell111.setBorder(Rectangle.NO_BORDER);
             cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
             table17.addCell(cell111);
             cell111 = new PdfPCell(new Phrase("", redFont));
             cell111.setBorder(Rectangle.NO_BORDER);
             cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
             table17.addCell(cell111);
             cell111 = new PdfPCell(new Phrase("0", redFont));
             cell111.setBorder(Rectangle.NO_BORDER);
             cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
             table17.addCell(cell111);
         
             cell111 = new PdfPCell(new Phrase("0", redFont));
             cell111.setBorder(Rectangle.NO_BORDER);
             cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
             table17.addCell(cell111);
             cell111 = new PdfPCell(new Phrase("0", redFont));
             cell111.setBorder(Rectangle.NO_BORDER);
             cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
             table17.addCell(cell111);
         
             cell111 = new PdfPCell(new Phrase("0", redFont));
             cell111.setBorder(Rectangle.NO_BORDER);
             cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
             table17.addCell(cell111);
             cell111 = new PdfPCell(new Phrase("0", redFont));
             cell111.setBorder(Rectangle.NO_BORDER);
             cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
             table17.addCell(cell111);
         
             cell111 = new PdfPCell(new Phrase("0", redFont));
             cell111.setBorder(Rectangle.NO_BORDER);
             cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
             table17.addCell(cell111);
             cell111 = new PdfPCell(new Phrase("0", redFont));
             cell111.setBorder(Rectangle.NO_BORDER);
             cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
             table17.addCell(cell111);
         
             cell111 = new PdfPCell(new Phrase("0", redFont));
             cell111.setBorder(Rectangle.NO_BORDER);
             cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
             table17.addCell(cell111);
             
             cell111 = new PdfPCell(new Phrase("0", redFont));
             cell111.setBorder(Rectangle.NO_BORDER);
             cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
             table17.addCell(cell111);
             cell111 = new PdfPCell(new Phrase("0", redFont));
             cell111.setBorder(Rectangle.NO_BORDER);
             cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
             table17.addCell(cell111);
        }
    
        
        
        cell1.addElement(table17);
        
        PdfPTable table6111 = new PdfPTable(14);
        table6111.setWidths(new float[] {4f, 6f, 4f, 6f, 4f, 2f, 3f, 3f, 3f, 3f, 3f, 3f,4f,3f});
        table6111.setSpacingBefore(10);
        table6111.setWidthPercentage(100f);
        
        PdfPCell cell11111;
        cell11111 = new PdfPCell(new Phrase("", redFont));
        cell11111.setBorder(Rectangle.NO_BORDER);
        cell11111.setHorizontalAlignment(Element.ALIGN_LEFT);
        table6111.addCell(cell11111);
        
        cell11111 = new PdfPCell(new Phrase("", redFont));
        cell11111.setBorder(Rectangle.NO_BORDER);
        cell11111.setHorizontalAlignment(Element.ALIGN_LEFT);
        table6111.addCell(cell11111);
        
        cell11111 = new PdfPCell(new Phrase("", redFont));
        cell11111.setBorder(Rectangle.NO_BORDER);
        cell11111.setHorizontalAlignment(Element.ALIGN_LEFT);
        table6111.addCell(cell11111);
        
        cell11111 = new PdfPCell(new Phrase("", redFont));
        cell11111.setBorder(Rectangle.NO_BORDER);
        cell11111.setHorizontalAlignment(Element.ALIGN_LEFT);
        table6111.addCell(cell11111);
        
        cell11111 = new PdfPCell(new Phrase(String.valueOf(totalFeeAmt1), redFont));
        cell11111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell11111.setPaddingTop(5f);
        cell11111.setPaddingBottom(5f);
        cell11111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table6111.addCell(cell11111);
    
        cell11111 = new PdfPCell(new Phrase("0", redFont));
        cell11111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell11111.setPaddingTop(5f);
        cell11111.setPaddingBottom(5f);
        cell11111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table6111.addCell(cell11111);
        
        cell11111 = new PdfPCell(new Phrase(String.valueOf(totalFeeAmt1), redFont));
        cell11111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell11111.setPaddingTop(5f);
        cell11111.setPaddingBottom(5f);
        cell11111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table6111.addCell(cell11111);
    
        cell11111 = new PdfPCell(new Phrase(String.valueOf(totalOpAdvAmt), redFont));
        cell11111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell11111.setPaddingTop(5f);
        cell11111.setPaddingBottom(5f);
        cell11111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table6111.addCell(cell11111);
        
        cell11111 = new PdfPCell(new Phrase(String.valueOf(totalRecAmt1), redFont));
        cell11111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell11111.setPaddingTop(5f);
        cell11111.setPaddingBottom(5f);
        cell11111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table6111.addCell(cell11111);
    
        cell11111 = new PdfPCell(new Phrase(String.valueOf(totalCashAmt1), redFont));
        cell11111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell11111.setPaddingTop(5f);
        cell11111.setPaddingBottom(5f);
        cell11111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table6111.addCell(cell11111);
        
        cell11111 = new PdfPCell(new Phrase(String.valueOf(totalChqAmt1), redFont));
        cell11111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell11111.setPaddingTop(5f);
        cell11111.setPaddingBottom(5f);
        cell11111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table6111.addCell(cell11111);
    
        cell11111 = new PdfPCell(new Phrase(String.valueOf(totalCardAmt1), redFont));
        cell11111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell11111.setPaddingTop(5f);
        cell11111.setPaddingBottom(5f);
        cell11111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table6111.addCell(cell11111);
        
        cell11111 = new PdfPCell(new Phrase(String.valueOf(totalcashPlusCardAmt1), redFont));
        cell11111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell11111.setPaddingTop(5f);
        cell11111.setPaddingBottom(5f);
        cell11111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table6111.addCell(cell11111);
        
        cell11111 = new PdfPCell(new Phrase(String.valueOf(totalDueAmt1), redFont));
        cell11111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell11111.setPaddingTop(5f);
        cell11111.setPaddingBottom(5f);
        cell11111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table6111.addCell(cell11111);
        cell1.addElement(table6111);
//-------------------------------------------- CONSULTATIONS ----------------------------------------------------------
      PdfPTable table08 = new PdfPTable(1);
        table08.setWidths(new float[] {6});
        table08.setSpacingBefore(10);
        table08.setWidthPercentage(100f);
        
        PdfPCell hcell0;
        hcell0 = new PdfPCell(new Phrase("CONSULTATIONS",headFont));
        hcell0.setBorder(Rectangle.NO_BORDER);
        hcell0.setHorizontalAlignment(Element.ALIGN_LEFT);
        hcell0.setPaddingBottom(-10f);
        table08.addCell(hcell0);
        cell1.addElement(table08);
        
        PdfPTable table8 = new PdfPTable(14);
        table8.setWidths(new float[] { 4f, 6f, 4f, 6f, 4f, 2f, 3f, 3f, 3f, 3f, 3f, 3f,4f,3f});
        table8.setSpacingBefore(10);
        table8.setWidthPercentage(100f);
        PdfPCell hcell03;
        hcell03 = new PdfPCell(new Phrase("", headFont));
        hcell03.setBorder(Rectangle.NO_BORDER);
        hcell03.setHorizontalAlignment(Element.ALIGN_LEFT);
        table8.addCell(hcell03);
        
        hcell03 = new PdfPCell(new Phrase("", headFont));
        hcell03.setBorder(Rectangle.NO_BORDER);
        hcell03.setHorizontalAlignment(Element.ALIGN_LEFT);
        table8.addCell(hcell03);
        
        hcell03 = new PdfPCell(new Phrase("", headFont));
        hcell03.setBorder(Rectangle.NO_BORDER);
        hcell03.setHorizontalAlignment(Element.ALIGN_LEFT);
        table8.addCell(hcell03);
        
        hcell03 = new PdfPCell(new Phrase("", headFont));
        hcell03.setBorder(Rectangle.NO_BORDER);
        hcell03.setHorizontalAlignment(Element.ALIGN_LEFT);
        table8.addCell(hcell03);
        
        hcell03 = new PdfPCell(new Phrase("", headFont));
        hcell03.setBorder(Rectangle.NO_BORDER);
        hcell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table8.addCell(hcell03);
        
        hcell03 = new PdfPCell(new Phrase("", headFont));
        hcell03.setBorder(Rectangle.NO_BORDER);
        hcell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table8.addCell(hcell03);
        
        hcell03 = new PdfPCell(new Phrase("", headFont));
        hcell03.setBorder(Rectangle.NO_BORDER);
        hcell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table8.addCell(hcell03);
        
        hcell03 = new PdfPCell(new Phrase("", headFont));
        hcell03.setBorder(Rectangle.NO_BORDER);
        hcell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table8.addCell(hcell03);
        
        hcell03 = new PdfPCell(new Phrase("", headFont));
        hcell03.setBorder(Rectangle.NO_BORDER);
        hcell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table8.addCell(hcell03);
        
        hcell03 = new PdfPCell(new Phrase("", headFont));
        hcell03.setBorder(Rectangle.NO_BORDER);
        hcell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table8.addCell(hcell03);
        
        hcell03 = new PdfPCell(new Phrase("", headFont));
        hcell03.setBorder(Rectangle.NO_BORDER);
        hcell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table8.addCell(hcell03);
        
        hcell03 = new PdfPCell(new Phrase("", headFont));
        hcell03.setBorder(Rectangle.NO_BORDER);
        hcell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table8.addCell(hcell03);
        
        hcell03 = new PdfPCell(new Phrase("", headFont));
        hcell03.setBorder(Rectangle.NO_BORDER);
        hcell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table8.addCell(hcell03);
        
        
        hcell03 = new PdfPCell(new Phrase("", headFont));
        hcell03.setBorder(Rectangle.NO_BORDER);
        hcell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table8.addCell(hcell03);
        
        long fee = 0;
        long cashAmt = 0;
        long chqAmt = 0;
        long cardAmt = 0;
        long advAmt=0;
        float totalFeeAmt = 0;
        float totalCashAmt = 0;
        float totalCardAmt = 0;
        float totalChqAmt = 0;
        float totalDueAmt = 0;
        float totalAdvcAmt=0;
        long dueAmt=0;
        long recpAmt=0;
        float totalRecpAmt=0;
        float cashPlusCardDocAmt=0;
        float totalCashPlusCardDocAmt=0;
      
        
        if(!patientRegistration.isEmpty())
        {
        for(PatientRegistration pReg : patientRegistration)
        {
            pId1 = pReg.getRegId();
            //Set<PatientPayment> patientPayments = pReg.getPatientPayment();
            Set<PatientPayment> patientPayments = paymentRepository.findByPatientRegistration(pReg);
            for(PatientPayment pp : patientPayments)
            {
                if(pp.getAmount()!=0)
                {
                if(pp.getTypeOfCharge().equalsIgnoreCase("Doctor Fee"))
                {
                    if(pp.getTypeOfCharge().equalsIgnoreCase("Doctor Fee")&&pp.getModeOfPaymant().equalsIgnoreCase("CASH"))
                    {
                        fee=pp.getAmount();
                        cashAmt=pp.getAmount();
                        chqAmt=0;
                        cardAmt=0;
                        totalFeeAmt+=fee;
                        advAmt=0;
                        cashPlusCardDocAmt=0;
                        totalCashAmt+=cashAmt;
                        recpAmt=pp.getAmount();
                        dueAmt = 0;
                        totalDueAmt+=dueAmt;
                        totalRecpAmt+=recpAmt;
                    }
                    else if(pp.getTypeOfCharge().equalsIgnoreCase("Doctor Fee")&&(pp.getModeOfPaymant().equalsIgnoreCase("CHQ")||pp.getModeOfPaymant().equalsIgnoreCase("CHEQUE")))
                    {
                        fee=pp.getAmount();
                        chqAmt=pp.getAmount();
                        cashAmt=0;
                        cardAmt=0;
                        advAmt=0;
                        totalFeeAmt+=fee;
                        totalChqAmt+=chqAmt;
                        recpAmt=pp.getAmount();
                        dueAmt = recpAmt-chqAmt;
                        totalDueAmt+=dueAmt;
                        totalRecpAmt+=recpAmt;
                    }
                    else if(pp.getTypeOfCharge().equalsIgnoreCase("Doctor Fee")&&pp.getModeOfPaymant().equalsIgnoreCase("ADVANCE"))
                    {
                        fee=pp.getAmount();
                        chqAmt=0;
                        cashAmt=0;
                        cardAmt=0;
                        advAmt=pp.getAmount();
                        totalFeeAmt+=fee;
                        totalChqAmt+=0;
                        totalAdvcAmt+=advAmt;
                        recpAmt=0;
                        dueAmt = recpAmt-chqAmt;
                        totalDueAmt+=dueAmt;
                        totalRecpAmt+=recpAmt;
                    }
                    
                    else if(pp.getTypeOfCharge().equalsIgnoreCase("Doctor Fee")&&(pp.getModeOfPaymant().equalsIgnoreCase("DEBIT CARD") || pp.getModeOfPaymant().equalsIgnoreCase("CREDIT CARD") || pp.getModeOfPaymant().equalsIgnoreCase("CARD")))
                    {
                        fee=pp.getAmount();
                        cardAmt=pp.getAmount();
                        cashAmt=0;
                        chqAmt=0;
                        totalFeeAmt+=fee;
                        advAmt=0;
                        totalCardAmt+=cardAmt;
                        recpAmt=pp.getAmount();
                        dueAmt = recpAmt-cardAmt;
                        totalDueAmt+=dueAmt;
                        totalRecpAmt+=recpAmt;
                        
                    }
                    else if(pp.getTypeOfCharge().equalsIgnoreCase("Doctor Fee")&&pp.getModeOfPaymant().equalsIgnoreCase("Cash+Card"))
                    {
                        fee=pp.getAmount();
                        chqAmt=0;
                        cashAmt=0;
                        cardAmt=0;
                        advAmt=0;
                        cashPlusCardDocAmt=pp.getAmount();
                        totalCashPlusCardDocAmt+=cashPlusCardDocAmt;
                        totalFeeAmt+=fee;
                        totalChqAmt+=0;
                        totalAdvcAmt+=advAmt;
                        recpAmt=fee;
                        dueAmt =0;
                        totalDueAmt+=dueAmt;
                        totalRecpAmt+=recpAmt;
                    }
                    else if(pp.getTypeOfCharge().equalsIgnoreCase("Doctor Fee")&&pp.getModeOfPaymant().equalsIgnoreCase("due"))
                    {
                        fee=0;
                        chqAmt=0;
                        cashAmt=0;
                        cardAmt=0;
                        advAmt=0;
                        cashPlusCardDocAmt=0;
                        totalCashPlusCardDocAmt+=cashPlusCardDocAmt;
                        totalFeeAmt+=fee;
                        totalChqAmt+=0;
                        totalAdvcAmt+=advAmt;
                        recpAmt=fee;
                        dueAmt =pp.getAmount();
                        totalDueAmt+=dueAmt;
                        totalRecpAmt+=recpAmt;
                    }
                    
                    
                    PdfPCell cell111;
    
                    cell111 = new PdfPCell(new Phrase(pReg.getPatientDetails().getUmr(), redFont));
                    cell111.setBorder(Rectangle.NO_BORDER);
                    cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                    table8.addCell(cell111);
    
                    if(pReg.getPatientDetails().getMiddleName()!=null)
                    {
                        cell111 = new PdfPCell(new Phrase(pReg.getPatientDetails().getFirstName()+" "+pReg.getPatientDetails().getMiddleName()+" "+pReg.getPatientDetails().getLastName(), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                        //cell111.setPaddingLeft(-30f);
                        table8.addCell(cell111);
                    }
                    else
                    {
                        cell111 = new PdfPCell(new Phrase(pReg.getPatientDetails().getFirstName()+" "+pReg.getPatientDetails().getLastName(), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                        //cell111.setPaddingLeft(-30f);
                        table8.addCell(cell111);
                    }
    
                    cell111 = new PdfPCell(new Phrase(pReg.getRegId(), redFont));
                    cell111.setBorder(Rectangle.NO_BORDER);
                    cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                    //cell111.setPaddingLeft(-30f);
                    table8.addCell(cell111);
    
                    cell111 = new PdfPCell(new Phrase(pReg.getPatientDetails().getConsultant(), redFont));
                    cell111.setBorder(Rectangle.NO_BORDER);
                    cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                    //cell111.setPaddingLeft(-20f);
                    table8.addCell(cell111);
    
                    cell111 = new PdfPCell(new Phrase(String.valueOf(fee), redFont));
                    cell111.setBorder(Rectangle.NO_BORDER);
                    cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                    //cell111.setPaddingRight(35f);
                    table8.addCell(cell111);
                
                    cell111 = new PdfPCell(new Phrase("0", redFont));
                    cell111.setBorder(Rectangle.NO_BORDER);
                    cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                    //cell111.setPaddingRight(20f);
                    table8.addCell(cell111);
    
                    cell111 = new PdfPCell(new Phrase(String.valueOf(fee), redFont));
                    cell111.setBorder(Rectangle.NO_BORDER);
                    cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                    //cell111.setPaddingRight(15f);
                    table8.addCell(cell111);
                
                    cell111 = new PdfPCell(new Phrase(String.valueOf(advAmt), redFont));
                    cell111.setBorder(Rectangle.NO_BORDER);
                    cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                    //cell111.setPaddingRight(12f);
                    table8.addCell(cell111);
    
                    cell111 = new PdfPCell(new Phrase(String.valueOf(recpAmt), redFont));
                    cell111.setBorder(Rectangle.NO_BORDER);
                    cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                    //cell111.setPaddingRight(10f);
                    table8.addCell(cell111);
                
                    cell111 = new PdfPCell(new Phrase(String.valueOf(cashAmt), redFont));
                    cell111.setBorder(Rectangle.NO_BORDER);
                    cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                    //cell111.setPaddingRight(10f);
                    table8.addCell(cell111);
    
                    cell111 = new PdfPCell(new Phrase(String.valueOf(chqAmt), redFont));
                    cell111.setBorder(Rectangle.NO_BORDER);
                    cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                    table8.addCell(cell111);
                
                    cell111 = new PdfPCell(new Phrase(String.valueOf(cardAmt), redFont));
                    cell111.setBorder(Rectangle.NO_BORDER);
                    cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                    table8.addCell(cell111);
                    
                    
                    cell111 = new PdfPCell(new Phrase(String.valueOf(cashPlusCardDocAmt), redFont));
                    cell111.setBorder(Rectangle.NO_BORDER);
                    cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                    table8.addCell(cell111);
    
                    cell111 = new PdfPCell(new Phrase(String.valueOf(dueAmt), redFont));
                    cell111.setBorder(Rectangle.NO_BORDER);
                    cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                    table8.addCell(cell111);
                }
            }
        }
        }
        cashPlusCardDocAmt=0;
        }
        else
        {
             
            PdfPCell cell111;
            cell111 = new PdfPCell(new Phrase("", redFont));
            cell111.setBorder(Rectangle.NO_BORDER);
            cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
            table8.addCell(cell111);
            
            cell111 = new PdfPCell(new Phrase("", redFont));
            cell111.setBorder(Rectangle.NO_BORDER);
            cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
            // cell111.setPaddingLeft(-30f);
            table8.addCell(cell111);
            cell111 = new PdfPCell(new Phrase("", redFont));
            cell111.setBorder(Rectangle.NO_BORDER);
            cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
            //cell111.setPaddingLeft(-30f);
            table8.addCell(cell111);
            cell111 = new PdfPCell(new Phrase("", redFont));
            cell111.setBorder(Rectangle.NO_BORDER);
            cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
            //cell111.setPaddingLeft(-20f);
            table8.addCell(cell111);
            cell111 = new PdfPCell(new Phrase(String.valueOf(fee), redFont));
            cell111.setBorder(Rectangle.NO_BORDER);
            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell111.setPaddingRight(35f);
            table8.addCell(cell111);
        
            cell111 = new PdfPCell(new Phrase("0", redFont));
            cell111.setBorder(Rectangle.NO_BORDER);
            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell111.setPaddingRight(20f);
            table8.addCell(cell111);
            cell111 = new PdfPCell(new Phrase(String.valueOf(fee), redFont));
            cell111.setBorder(Rectangle.NO_BORDER);
            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell111.setPaddingRight(15f);
            table8.addCell(cell111);
        
            cell111 = new PdfPCell(new Phrase(String.valueOf(advAmt), redFont));
            cell111.setBorder(Rectangle.NO_BORDER);
            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell111.setPaddingRight(12f);
            table8.addCell(cell111);
            cell111 = new PdfPCell(new Phrase(String.valueOf(recpAmt), redFont));
            cell111.setBorder(Rectangle.NO_BORDER);
            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell111.setPaddingRight(10f);
            table8.addCell(cell111);
        
            cell111 = new PdfPCell(new Phrase(String.valueOf(cashAmt), redFont));
            cell111.setBorder(Rectangle.NO_BORDER);
            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell111.setPaddingRight(10f);
            table8.addCell(cell111);
            cell111 = new PdfPCell(new Phrase(String.valueOf(chqAmt), redFont));
            cell111.setBorder(Rectangle.NO_BORDER);
            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table8.addCell(cell111);
        
            cell111 = new PdfPCell(new Phrase(String.valueOf(cardAmt), redFont));
            cell111.setBorder(Rectangle.NO_BORDER);
            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table8.addCell(cell111);
            
            cell111 = new PdfPCell(new Phrase("0", redFont));
            cell111.setBorder(Rectangle.NO_BORDER);
            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table8.addCell(cell111);
            cell111 = new PdfPCell(new Phrase(String.valueOf(dueAmt), redFont));
            cell111.setBorder(Rectangle.NO_BORDER);
            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table8.addCell(cell111);
        }
        cell1.addElement(table8);
        
        PdfPTable table60 = new PdfPTable(14);
        table60.setWidths(new float[] {4f, 6f, 4f, 6f, 4f, 2f, 3f, 3f, 3f, 3f, 3f, 3f,4f,3f});
        table60.setSpacingBefore(10);
        table60.setWidthPercentage(100f);
        
        PdfPCell cell05;
        cell05 = new PdfPCell(new Phrase("", redFont));
        cell05.setBorder(Rectangle.NO_BORDER);
        cell05.setHorizontalAlignment(Element.ALIGN_LEFT);
        table60.addCell(cell05);
        
        cell05 = new PdfPCell(new Phrase("", redFont));
        cell05.setBorder(Rectangle.NO_BORDER);
        cell05.setHorizontalAlignment(Element.ALIGN_LEFT);
        //cell05.setPaddingLeft(-30f);
        table60.addCell(cell05);
        
        cell05 = new PdfPCell(new Phrase("", redFont));
        cell05.setBorder(Rectangle.NO_BORDER);
        cell05.setHorizontalAlignment(Element.ALIGN_LEFT);
        //cell05.setPaddingLeft(-30f);
        table60.addCell(cell05);
        
        cell05 = new PdfPCell(new Phrase("", redFont));
        cell05.setBorder(Rectangle.NO_BORDER);
        cell05.setHorizontalAlignment(Element.ALIGN_LEFT);
        //cell05.setPaddingLeft(-30f);
        table60.addCell(cell05);
        
        cell05 = new PdfPCell(new Phrase(String.valueOf(totalFeeAmt), redFont));
        //cell1111.setBorder(Rectangle.NO_BORDER);
        cell05.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell05.setPaddingTop(5f);
        cell05.setPaddingBottom(5f);
        cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
        //cell05.setPaddingRight(10f);
        table60.addCell(cell05);
    
        cell05 = new PdfPCell(new Phrase("0", redFont));
        //cell1111.setBorder(Rectangle.NO_BORDER);
        cell05.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell05.setPaddingTop(5f);
        cell05.setPaddingBottom(5f);
        cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
       // cell05.setPaddingRight(-15f);
        table60.addCell(cell05);
        
        cell05 = new PdfPCell(new Phrase(String.valueOf(totalFeeAmt), redFont));
        //cell1111.setBorder(Rectangle.NO_BORDER);
        cell05.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell05.setPaddingTop(5f);
        cell05.setPaddingBottom(5f);
        cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
        //cell05.setPaddingRight(-20f);
        table60.addCell(cell05);
    
        cell05 = new PdfPCell(new Phrase(String.valueOf(totalAdvcAmt), redFont));
        //cell1111.setBorder(Rectangle.NO_BORDER);
        cell05.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell05.setPaddingTop(5f);
        cell05.setPaddingBottom(5f);
        cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
        //cell05.setPaddingRight(-10f);
        table60.addCell(cell05);
        
        cell05 = new PdfPCell(new Phrase(String.valueOf(totalRecpAmt), redFont));
        //cell1111.setBorder(Rectangle.NO_BORDER);
        cell05.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell05.setPaddingTop(5f);
        cell05.setPaddingBottom(5f);
        cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
        //cell05.setPaddingRight(-17f);
        table60.addCell(cell05);
    
        cell05 = new PdfPCell(new Phrase(String.valueOf(totalCashAmt), redFont));
        //cell1111.setBorder(Rectangle.NO_BORDER);
        cell05.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell05.setPaddingTop(5f);
        cell05.setPaddingBottom(5f);
        cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
       // cell05.setPaddingRight(-13f);
        table60.addCell(cell05);
        
        cell05 = new PdfPCell(new Phrase(String.valueOf(totalChqAmt), redFont));
        //cell1111.setBorder(Rectangle.NO_BORDER);
        cell05.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell05.setPaddingTop(5f);
        cell05.setPaddingBottom(5f);
        cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
       // cell05.setPaddingRight(-7f);
        table60.addCell(cell05);
    
        cell05 = new PdfPCell(new Phrase(String.valueOf(totalCardAmt), redFont));
        //cell1111.setBorder(Rectangle.NO_BORDER);
        cell05.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell05.setPaddingTop(5f);
        cell05.setPaddingBottom(5f);
        cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
        //cell05.setPaddingRight(-3f);
        table60.addCell(cell05);
        
        cell05 = new PdfPCell(new Phrase(String.valueOf(totalCashPlusCardDocAmt), redFont));
        //cell1111.setBorder(Rectangle.NO_BORDER);
        cell05.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell05.setPaddingTop(5f);
        cell05.setPaddingBottom(5f);
        cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
        //cell05.setPaddingRight(-3f);
        table60.addCell(cell05);
        
        cell05 = new PdfPCell(new Phrase(String.valueOf(totalDueAmt), redFont));
        //cell1111.setBorder(Rectangle.NO_BORDER);
        cell05.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell05.setPaddingTop(5f);
        cell05.setPaddingBottom(5f);
        cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table60.addCell(cell05);
        cell1.addElement(table60);
        
//----------------------------------- REGISTRATIONS ----------------------------------------            
        PdfPTable table02 = new PdfPTable(1);
        table02.setWidths(new float[] {6f});
        table02.setSpacingBefore(10);
        table02.setWidthPercentage(100f);
        
        PdfPCell hcell7;
        
        hcell7 = new PdfPCell(new Phrase("REGISTRATIONS", headFont));
        hcell7.setBorder(Rectangle.NO_BORDER);
        hcell7.setHorizontalAlignment(Element.ALIGN_LEFT);
        hcell7.setPaddingBottom(-10f);
        table02.addCell(hcell7);
        cell1.addElement(table02);
        
        PdfPTable table13 = new PdfPTable(14);
        table13.setWidths(new float[] {4f, 6f, 4f, 6f, 4f, 2f, 3f, 3f, 3f, 3f, 3f, 3f,4f,3f});
        table13.setSpacingBefore(10);
        table13.setWidthPercentage(100f);
        PdfPCell hcell0111;
        
        hcell0111 = new PdfPCell(new Phrase("", headFont));
        hcell0111.setBorder(Rectangle.NO_BORDER);
        hcell0111.setHorizontalAlignment(Element.ALIGN_LEFT);
        table13.addCell(hcell0111);
        
        hcell0111 = new PdfPCell(new Phrase("", headFont));
        hcell0111.setBorder(Rectangle.NO_BORDER);
        hcell0111.setHorizontalAlignment(Element.ALIGN_LEFT);
        table13.addCell(hcell0111);
        
        hcell0111 = new PdfPCell(new Phrase("", headFont));
        hcell0111.setBorder(Rectangle.NO_BORDER);
        hcell0111.setHorizontalAlignment(Element.ALIGN_LEFT);
        table13.addCell(hcell0111);
        
        hcell0111 = new PdfPCell(new Phrase("", headFont));
        hcell0111.setBorder(Rectangle.NO_BORDER);
        hcell0111.setHorizontalAlignment(Element.ALIGN_LEFT);
        table13.addCell(hcell0111);
        
        hcell0111 = new PdfPCell(new Phrase("", headFont));
        hcell0111.setBorder(Rectangle.NO_BORDER);
        hcell0111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table13.addCell(hcell0111);
        
        hcell0111 = new PdfPCell(new Phrase("", headFont));
        hcell0111.setBorder(Rectangle.NO_BORDER);
        hcell0111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table13.addCell(hcell0111);
        
        hcell0111 = new PdfPCell(new Phrase("", headFont));
        hcell0111.setBorder(Rectangle.NO_BORDER);
        hcell0111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table13.addCell(hcell0111);
        
        hcell0111 = new PdfPCell(new Phrase("", headFont));
        hcell0111.setBorder(Rectangle.NO_BORDER);
        hcell0111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table13.addCell(hcell0111);
        
        hcell0111 = new PdfPCell(new Phrase("", headFont));
        hcell0111.setBorder(Rectangle.NO_BORDER);
        hcell0111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table13.addCell(hcell0111);
    
        hcell0111 = new PdfPCell(new Phrase("", headFont));
        hcell0111.setBorder(Rectangle.NO_BORDER);
        hcell0111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table13.addCell(hcell0111);
        
        hcell0111 = new PdfPCell(new Phrase("", headFont));
        hcell0111.setBorder(Rectangle.NO_BORDER);
        hcell0111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table13.addCell(hcell0111);
        
        hcell0111 = new PdfPCell(new Phrase("", headFont));
        hcell0111.setBorder(Rectangle.NO_BORDER);
        hcell0111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table13.addCell(hcell0111);
        
        hcell0111 = new PdfPCell(new Phrase("", headFont));
        hcell0111.setBorder(Rectangle.NO_BORDER);
        hcell0111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table13.addCell(hcell0111);
        
        
        hcell0111 = new PdfPCell(new Phrase("", headFont));
        hcell0111.setBorder(Rectangle.NO_BORDER);
        hcell0111.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table13.addCell(hcell0111);
    
        long feeReg = 0;
        long cashAmtReg = 0;
        long chqAmtReg = 0;
        long cardAmtReg = 0;
        long recpAmtReg = 0;
        long dueAmtReg = 0;
        long advAmtReg = 0;
        float totalDueAmtReg = 0;
        float totalFeeAmtReg = 0;
        float totalCashAmtReg = 0;
        float totalCardAmtReg = 0;
        float totalChqAmtReg = 0;
        float totalRecpAmtReg=0;
        float totalAdvcAmtReg=0;
        float cashPlusCardRegAmt=0;
        float totalCashPlusCardRegAmt=0;
        
        
        if(!patientRegistration.isEmpty()) {
        for (PatientRegistration pReg : patientRegistration) 
        {
            pId1 = pReg.getRegId();
            Set<PatientPayment> patientPayments = paymentRepository.findByPatientRegistration(pReg);
            //Set<PatientPayment> patientPayments = pReg.getPatientPayment();
            for(PatientPayment pp : patientPayments)
            {
                if(pp.getAmount()!=0)
                {
                if(pp.getTypeOfCharge().equalsIgnoreCase("Reg Fees"))
                {
                    if(pp.getTypeOfCharge().equalsIgnoreCase("Reg Fees")&&pp.getModeOfPaymant().equalsIgnoreCase("CASH"))
                    {
                        feeReg=pp.getAmount();
                        cashAmtReg=pp.getAmount();
                        chqAmtReg=0;
                        cardAmtReg=0;
                        advAmtReg = 0;
                        recpAmtReg=pp.getAmount();
                        dueAmtReg=0;
                        totalFeeAmtReg+=feeReg;
                        totalCashAmtReg+=cashAmtReg;
                        totalDueAmtReg+=dueAmtReg;
                        totalRecpAmtReg+=recpAmtReg;
                    }
                    else if(pp.getTypeOfCharge().equalsIgnoreCase("Reg Fees")&&(pp.getModeOfPaymant().equalsIgnoreCase("CHQ")||pp.getModeOfPaymant().equalsIgnoreCase("CHEQUE")))
                    {
                        feeReg=pp.getAmount();
                        chqAmtReg=pp.getAmount();
                        cashAmtReg=0;
                        cardAmtReg=0;
                        advAmtReg = 0;
                        recpAmtReg=pp.getAmount();
                        dueAmtReg=0;
                        totalFeeAmtReg+=feeReg;
                        totalChqAmtReg+=chqAmtReg;
                        totalDueAmtReg+=dueAmtReg;
                        totalRecpAmtReg+=recpAmtReg;
                    }
                    
                    else if(pp.getTypeOfCharge().equalsIgnoreCase("Reg Fees")&&(pp.getModeOfPaymant().equalsIgnoreCase("DEBIT CARD") || pp.getModeOfPaymant().equalsIgnoreCase("CREDIT CARD") || pp.getModeOfPaymant().equalsIgnoreCase("CARD")))
                    {
                        feeReg=pp.getAmount();
                        cardAmtReg=pp.getAmount();
                        cashAmtReg=0;
                        chqAmtReg=0;
                        advAmtReg = 0;
                        recpAmtReg=pp.getAmount();
                        dueAmtReg=0;
                        totalFeeAmtReg+=feeReg;
                        totalCardAmtReg+=cardAmtReg;
                        totalDueAmtReg+=dueAmtReg;
                        totalRecpAmtReg+=recpAmtReg;
                    }
                    else if(pp.getTypeOfCharge().equalsIgnoreCase("Reg Fees")&&pp.getModeOfPaymant().equalsIgnoreCase("ADVANCE"))
                    {
                        feeReg=pp.getAmount();
                        chqAmtReg=0;
                        cashAmtReg=0;
                        cardAmtReg=0;
                        advAmtReg=pp.getAmount();
                        totalFeeAmtReg+=feeReg;
                        totalChqAmtReg+=0;
                       // totalCardAmtReg=0;
                        totalAdvcAmtReg+=advAmtReg;
                        recpAmtReg=0;
                        dueAmtReg =0;
                        totalDueAmtReg+=dueAmtReg;
                        totalRecpAmtReg+=recpAmtReg;
                    }
                    else if(pp.getTypeOfCharge().equalsIgnoreCase("Reg Fees")&&pp.getModeOfPaymant().equalsIgnoreCase("Due"))
                    {
                        feeReg=0;
                        chqAmtReg=0;
                        cashAmtReg=0;
                        cardAmtReg=0;
                        advAmtReg=0;
                        totalFeeAmtReg+=feeReg;
                        totalChqAmtReg+=0;
                        //totalCardAmtReg=0;
                        totalAdvcAmtReg+=advAmtReg;
                        recpAmtReg=0;
                        dueAmtReg =pp.getAmount();
                        totalDueAmtReg+=dueAmtReg;
                        totalRecpAmtReg+=recpAmtReg;
                    }
                    else if(pp.getTypeOfCharge().equalsIgnoreCase("Reg Fees")&&pp.getModeOfPaymant().equalsIgnoreCase("Cash+Card"))
                    {
                        feeReg=pp.getAmount();
                        chqAmtReg=0;
                        cashAmtReg=0;
                        cardAmtReg=0;
                        advAmtReg=0;
                        cashPlusCardRegAmt=feeReg;
                        totalCashPlusCardRegAmt+=cashPlusCardRegAmt;
                        totalFeeAmtReg+=feeReg;
                        totalChqAmtReg+=0;
                        //totalCardAmtReg=0;
                        totalAdvcAmtReg+=advAmtReg;
                        recpAmtReg=feeReg;
                        dueAmtReg =0;
                        totalDueAmtReg+=dueAmtReg;
                        totalRecpAmtReg+=recpAmtReg;
                    }
            
                        PdfPCell cell111;
        
                        cell111 = new PdfPCell(new Phrase(pReg.getPatientDetails().getUmr(), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                        table13.addCell(cell111);
        
                        if(pReg.getPatientDetails().getMiddleName()!=null)
                        {
                            cell111 = new PdfPCell(new Phrase(pReg.getPatientDetails().getFirstName()+" "+pReg.getPatientDetails().getMiddleName()+" "+pReg.getPatientDetails().getLastName(), redFont));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                            //cell111.setPaddingLeft(-30f);
                            table13.addCell(cell111);
                        }
                        else
                        {
                            cell111 = new PdfPCell(new Phrase(pReg.getPatientDetails().getFirstName()+" "+pReg.getPatientDetails().getLastName(), redFont));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                            //cell111.setPaddingLeft(-30f);
                            table13.addCell(cell111);
                        }
        
                        cell111 = new PdfPCell(new Phrase(pReg.getRegId(), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                        //cell111.setPaddingLeft(-30f);
                        table13.addCell(cell111);
        
                        cell111 = new PdfPCell(new Phrase(pReg.getPatientDetails().getConsultant(), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                        //cell111.setPaddingLeft(-25f);
                        table13.addCell(cell111);
        
                        cell111 = new PdfPCell(new Phrase(String.valueOf(feeReg), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                        //cell111.setPaddingRight(45f);
                        table13.addCell(cell111);
                    
                        cell111 = new PdfPCell(new Phrase("0", redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                        //cell111.setPaddingRight(13f);
                        table13.addCell(cell111);
        
                        cell111 = new PdfPCell(new Phrase(String.valueOf(feeReg), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                        table13.addCell(cell111);
                    
                        cell111 = new PdfPCell(new Phrase(String.valueOf(advAmtReg), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                        //cell111.setPaddingRight(7f);
                        table13.addCell(cell111);
        
                        cell111 = new PdfPCell(new Phrase(String.valueOf(recpAmtReg), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                        table13.addCell(cell111);
                    
                        cell111 = new PdfPCell(new Phrase(String.valueOf(cashAmtReg), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                        table13.addCell(cell111);
        
                        cell111 = new PdfPCell(new Phrase(String.valueOf(chqAmtReg), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                        table13.addCell(cell111);
                    
                        cell111 = new PdfPCell(new Phrase(String.valueOf(cardAmtReg), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                        table13.addCell(cell111);
                        
                        cell111 = new PdfPCell(new Phrase(String.valueOf(cashPlusCardRegAmt), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                        table13.addCell(cell111);
                        
                        
        
                        cell111 = new PdfPCell(new Phrase(String.valueOf(dueAmtReg), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                        table13.addCell(cell111);
                }
                }
            }
            cashPlusCardRegAmt=0;
        }
       
        }
        
        else
        {
             PdfPCell cell111;
             
             cell111 = new PdfPCell(new Phrase("", redFont));
             cell111.setBorder(Rectangle.NO_BORDER);
             cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
             table13.addCell(cell111);
            
                 cell111 = new PdfPCell(new Phrase("", redFont));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                 //cell111.setPaddingLeft(-30f);
                 table13.addCell(cell111);
            
             cell111 = new PdfPCell(new Phrase("", redFont));
             cell111.setBorder(Rectangle.NO_BORDER);
             cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
             //cell111.setPaddingLeft(-30f);
             table13.addCell(cell111);
             cell111 = new PdfPCell(new Phrase("", redFont));
             cell111.setBorder(Rectangle.NO_BORDER);
             cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
             //cell111.setPaddingLeft(-25f);
             table13.addCell(cell111);
             cell111 = new PdfPCell(new Phrase("0", redFont));
             cell111.setBorder(Rectangle.NO_BORDER);
             cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
             //cell111.setPaddingRight(45f);
             table13.addCell(cell111);
         
             cell111 = new PdfPCell(new Phrase("0", redFont));
             cell111.setBorder(Rectangle.NO_BORDER);
             cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
             //cell111.setPaddingRight(13f);
             table13.addCell(cell111);
             cell111 = new PdfPCell(new Phrase("0", redFont));
             cell111.setBorder(Rectangle.NO_BORDER);
             cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
             table13.addCell(cell111);
         
             cell111 = new PdfPCell(new Phrase("0", redFont));
             cell111.setBorder(Rectangle.NO_BORDER);
             cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
             //cell111.setPaddingRight(7f);
             table13.addCell(cell111);
             cell111 = new PdfPCell(new Phrase("0", redFont));
             cell111.setBorder(Rectangle.NO_BORDER);
             cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
             table13.addCell(cell111);
         
             cell111 = new PdfPCell(new Phrase("0", redFont));
             cell111.setBorder(Rectangle.NO_BORDER);
             cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
             table13.addCell(cell111);
             cell111 = new PdfPCell(new Phrase("0", redFont));
             cell111.setBorder(Rectangle.NO_BORDER);
             cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
             table13.addCell(cell111);
         
             cell111 = new PdfPCell(new Phrase("0", redFont));
             cell111.setBorder(Rectangle.NO_BORDER);
             cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
             table13.addCell(cell111);
             cell111 = new PdfPCell(new Phrase("0", redFont));
             cell111.setBorder(Rectangle.NO_BORDER);
             cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
             table13.addCell(cell111);
             
             cell111 = new PdfPCell(new Phrase("0", redFont));
             cell111.setBorder(Rectangle.NO_BORDER);
             cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
             table13.addCell(cell111);
        
        }
        
        cell1.addElement(table13);
        
        PdfPTable table601 = new PdfPTable(14);
        table601.setWidths(new float[] {4f, 6f, 4f, 6f, 4f, 2f, 3f, 3f, 3f, 3f, 3f, 3f,4f,3f});
        table601.setSpacingBefore(10);
        table601.setWidthPercentage(100f);
        
        PdfPCell cell03;
        cell03 = new PdfPCell(new Phrase("", redFont));
        cell03.setBorder(Rectangle.NO_BORDER);
        cell03.setHorizontalAlignment(Element.ALIGN_LEFT);
        table601.addCell(cell03);
        cell03 = new PdfPCell(new Phrase("", redFont));
        cell03.setBorder(Rectangle.NO_BORDER);
        cell03.setHorizontalAlignment(Element.ALIGN_LEFT);
        //cell03.setPaddingLeft(-30f);
        table601.addCell(cell03);
        
        cell03 = new PdfPCell(new Phrase("", redFont));
        cell03.setBorder(Rectangle.NO_BORDER);
        cell03.setHorizontalAlignment(Element.ALIGN_LEFT);
        //cell03.setPaddingLeft(-30f);
        table601.addCell(cell03);
        
        cell03 = new PdfPCell(new Phrase("", redFont));
        cell03.setBorder(Rectangle.NO_BORDER);
        cell03.setHorizontalAlignment(Element.ALIGN_LEFT);
        //cell03.setPaddingLeft(-30f);
        table601.addCell(cell03);
        
        cell03 = new PdfPCell(new Phrase(String.valueOf(totalFeeAmtReg), redFont));
        //cell1111.setBorder(Rectangle.NO_BORDER);
        cell03.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell03.setPaddingTop(5f);
        cell03.setPaddingBottom(5f);
        cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
        //cell03.setPaddingRight(10f);
        table601.addCell(cell03);
    
        cell03 = new PdfPCell(new Phrase("0", redFont));
        //cell1111.setBorder(Rectangle.NO_BORDER);
        cell03.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell03.setPaddingTop(5f);
        cell03.setPaddingBottom(5f);
        cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
        //cell03.setPaddingRight(-15f);
        table601.addCell(cell03);
        
        cell03 = new PdfPCell(new Phrase(String.valueOf(totalFeeAmtReg), redFont));
        //cell1111.setBorder(Rectangle.NO_BORDER);
        cell03.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell03.setPaddingTop(5f);
        cell03.setPaddingBottom(5f);
        cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
        //cell03.setPaddingRight(-20f);
        table601.addCell(cell03);
    
        cell03 = new PdfPCell(new Phrase(String.valueOf(totalAdvcAmtReg), redFont));
        //cell1111.setBorder(Rectangle.NO_BORDER);
        cell03.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell03.setPaddingTop(5f);
        cell03.setPaddingBottom(5f);
        cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
        //cell03.setPaddingRight(-10f);
        table601.addCell(cell03);
        
        cell03 = new PdfPCell(new Phrase(String.valueOf(totalRecpAmtReg), redFont));
        //cell1111.setBorder(Rectangle.NO_BORDER);
        cell03.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell03.setPaddingTop(5f);
        cell03.setPaddingBottom(5f);
        cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
        //cell03.setPaddingRight(-17f);
        table601.addCell(cell03);
    
        cell03 = new PdfPCell(new Phrase(String.valueOf(totalCashAmtReg), redFont));
        //cell1111.setBorder(Rectangle.NO_BORDER);
        cell03.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell03.setPaddingTop(5f);
        cell03.setPaddingBottom(5f);
        cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
        //cell03.setPaddingRight(-13f);
        table601.addCell(cell03);
        
        cell03 = new PdfPCell(new Phrase(String.valueOf(totalChqAmtReg), redFont));
        //cell1111.setBorder(Rectangle.NO_BORDER);
        cell03.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell03.setPaddingTop(5f);
        cell03.setPaddingBottom(5f);
        cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell03.setPaddingRight(-4f);
        table601.addCell(cell03);
    
        cell03 = new PdfPCell(new Phrase(String.valueOf(totalCardAmtReg), redFont));
        //cell1111.setBorder(Rectangle.NO_BORDER);
        cell03.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell03.setPaddingTop(5f);
        cell03.setPaddingBottom(5f);
        cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
        //cell03.setPaddingRight(-3f);
        table601.addCell(cell03);
        
        cell03 = new PdfPCell(new Phrase(String.valueOf(totalCashPlusCardRegAmt), redFont));
        //cell1111.setBorder(Rectangle.NO_BORDER);
        cell03.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell03.setPaddingTop(5f);
        cell03.setPaddingBottom(5f);
        cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
        //cell03.setPaddingRight(-3f);
        table601.addCell(cell03);
        
        cell03 = new PdfPCell(new Phrase(String.valueOf(totalDueAmtReg), redFont));
        //cell1111.setBorder(Rectangle.NO_BORDER);
        cell03.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        cell03.setPaddingTop(5f);
        cell03.setPaddingBottom(5f);
        cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table601.addCell(cell03);
        cell1.addElement(table601);
        
//---------------------------------------- IP BILLS ---------------------------------------------            
        
        PdfPTable table14 = new PdfPTable(14);
        table14.setWidths(new float[] { 4f, 6f, 4f, 6f, 4f, 2f, 3f, 3f, 3f, 3f, 3f, 3f,4f,3f });
        table14.setSpacingBefore(10);
        table14.setWidthPercentage(100f);
        PdfPCell hcell09;
        hcell09 = new PdfPCell(new Phrase("IP BILLS", headFont));
        hcell09.setBorder(Rectangle.NO_BORDER);
        hcell09.setHorizontalAlignment(Element.ALIGN_LEFT);
        table14.addCell(hcell09);
        
        hcell09 = new PdfPCell(new Phrase("", headFont));
        hcell09.setBorder(Rectangle.NO_BORDER);
        hcell09.setHorizontalAlignment(Element.ALIGN_LEFT);
        table14.addCell(hcell09);
        
        hcell09 = new PdfPCell(new Phrase("", headFont));
        hcell09.setBorder(Rectangle.NO_BORDER);
        hcell09.setHorizontalAlignment(Element.ALIGN_LEFT);
        table14.addCell(hcell09);
        
        hcell09 = new PdfPCell(new Phrase("", headFont));
        hcell09.setBorder(Rectangle.NO_BORDER);
        hcell09.setHorizontalAlignment(Element.ALIGN_LEFT);
        table14.addCell(hcell09);
        
        hcell09 = new PdfPCell(new Phrase("", headFont));
        hcell09.setBorder(Rectangle.NO_BORDER);
        hcell09.setHorizontalAlignment(Element.ALIGN_RIGHT);
        //hcell09.setPaddingRight(20f);
        table14.addCell(hcell09);
        
        hcell09 = new PdfPCell(new Phrase("", headFont));
        hcell09.setBorder(Rectangle.NO_BORDER);
        hcell09.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table14.addCell(hcell09);
        
        hcell09 = new PdfPCell(new Phrase("", headFont));
        hcell09.setBorder(Rectangle.NO_BORDER);
        hcell09.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table14.addCell(hcell09);
        
        hcell09 = new PdfPCell(new Phrase("", headFont));
        hcell09.setBorder(Rectangle.NO_BORDER);
        hcell09.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table14.addCell(hcell09);
        
        hcell09 = new PdfPCell(new Phrase("", headFont));
        hcell09.setBorder(Rectangle.NO_BORDER);
        hcell09.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table14.addCell(hcell09);
        
        hcell09 = new PdfPCell(new Phrase("", headFont));
        hcell09.setBorder(Rectangle.NO_BORDER);
        hcell09.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table14.addCell(hcell09);
        
        hcell09 = new PdfPCell(new Phrase("", headFont));
        hcell09.setBorder(Rectangle.NO_BORDER);
        hcell09.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table14.addCell(hcell09);
        
        hcell09 = new PdfPCell(new Phrase("", headFont));
        hcell09.setBorder(Rectangle.NO_BORDER);
        hcell09.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table14.addCell(hcell09);
        
        hcell09 = new PdfPCell(new Phrase("", headFont));
        hcell09.setBorder(Rectangle.NO_BORDER);
        hcell09.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table14.addCell(hcell09);
        
        hcell09 = new PdfPCell(new Phrase("", headFont));
        hcell09.setBorder(Rectangle.NO_BORDER);
        hcell09.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table14.addCell(hcell09);
        
        float ipFee = 0;
        float ipFees=0;
        float ipCashAmt1 = 0;
        float ipCashAmt2=0;
        float ipChqAmt2=0;
        float ipChqAmt1 = 0;
        float ipCardAmt1 = 0;
        float ipCardAmt2=0;
        float ipAdvAmt = 0;
        float ipAdvAmt1 = 0;
        float totalIpFeeAmt1 = 0;
        float totalIpFeeAmt2 = 0;
        float totalIpCashAmt1 = 0;
        float totalIpCashAmt2 = 0;
        float totalIpCardAmt1 = 0;
        float totalIpCardAmt2 = 0;
        float totalIpChqAmt1 = 0;
        float totalIpChqAmt2 = 0;
        float totalIpDueAmt1 = 0;
        float totalIpDueAmt2 = 0;
        float ipDueAmt1=0;
        float ipDueAmt2=0;
        float ipRecpAmt1=0;
        float ipRecpAmt2=0;
        float totalIpRecAmt1=0;
        float totalIpRecAmt2=0;
        float totalIpAdvAmt = 0;
        float totalIpAdvAmt1 = 0;
        float ipCashPlusCardAmt=0;
        float ipCashPlusCardAmt1=0;
        float ipTotalCashPlusCardAmt=0;
        float ipTotalCashPlusCardAmt1=0;
                    
        
        
        //------------------for refernce-----
        
        
    
        
        List<Map<String, String>> shows = new ArrayList<>();
        List<String> info1 = new ArrayList<>();
        Map<String, String> displayInfo1 = null; 
    
        
List<LaboratoryRegistration> laboratoryRegistration3=laboratoryRegistrationRepository.findUserWiseIpOpDetailedOtherIp(user.get("fromDate"), user.get("toDate"),uId);
        
        
        
        if(!laboratoryRegistration3.isEmpty())
        {
            for(LaboratoryRegistration pReg : laboratoryRegistration3)
            {
            	PatientRegistration laboratory=pReg.getLaboratoryPatientRegistration();
                pId1=pReg.getLaboratoryPatientRegistration().getRegId();
                
                System.out.println("p id-----------------"+pId1);
                displayInfo9 = new HashMap<>();     
                patientType=pReg.getpType();
          
                umr=laboratory.getPatientDetails().getUmr();
                if(laboratory.getPatientDetails().getMiddleName()!=null)
                {
                    patientName=laboratory.getPatientDetails().getFirstName()+" "+laboratory.getPatientDetails().getMiddleName()+" "+laboratory.getPatientDetails().getLastName();
                }
                else
                {
                    patientName=laboratory.getPatientDetails().getFirstName()+" "+laboratory.getPatientDetails().getLastName();    
                }
                consultant=laboratory.getPatientDetails().getConsultant();
               
                System.out.println("---------------------inside patreg if");
               // List<ChargeBill> chargeBillService=chargeBillRepository.findByPatRegIdsAndServiceId(pRegId);
                
                List<LaboratoryRegistration> laboratoryRegistration=laboratoryRegistrationRepository.findUserWiseIpOpDetailedOtherRegIdIp(user.get("fromDate"), user.get("toDate"),uId,pId1);
                
                if (!info4.contains(pId1)) 
                {
                	System.out.println("---------------------inside info if");
                    if(!laboratoryRegistration.isEmpty())
                    {
                       // List<ChargeBill> charge=chargeBillRepository.findByPatRegIds(pRegId);
                        for(LaboratoryRegistration pp : laboratoryRegistration)
                        {
                        	System.out.println("lab reg id"+pp.getLabRegId());
                                
          
                                if(pp.getNetAmount()!=0)
                                {
                                	System.out.println("----------------------------------labamount ");	
                    
                                            if(pp.getPaymentType().equalsIgnoreCase("CASH"))
                                            {
                                         
                                                    ipFee=pp.getNetAmount();
                                                    ipAdvAmt=0;
                                                    ipCashAmt1=pp.getNetAmount();
                                                    ipChqAmt1=0;
                                                    ipCardAmt1=0;
                                                    ipCashPlusCardAmt=0;
                                                    totalIpFeeAmt1+=ipCashAmt1;
                                                    totalIpCashAmt1+=ipCashAmt1;
                                                    ipRecpAmt1=pp.getNetAmount();
                                                    ipDueAmt1 =0;
                                                    totalIpDueAmt1+=ipDueAmt1;
                                                    totalIpRecAmt1+=ipRecpAmt1;
                                                }
                                                else if(pp.getPaymentType().equalsIgnoreCase("CHQ")||pp.getPaymentType().equalsIgnoreCase("CHEQUE"))
                                                {
                                            
                                                    ipFee=pp.getNetAmount();
                                                    ipChqAmt1=pp.getNetAmount();
                                                    ipCashAmt1=0;
                                                    ipCardAmt1=0;
                                                    ipAdvAmt=0;
                                                    totalIpFeeAmt1+=ipChqAmt1;
                                                    totalIpChqAmt1+=ipChqAmt1;
                                                    ipRecpAmt1=pp.getNetAmount();
                                                    ipDueAmt1 = 0;
                                                    totalIpDueAmt1+=ipDueAmt1;
                                                    totalIpRecAmt1+=ipRecpAmt1;
                                                }
                                                else if(pp.getPaymentType().equalsIgnoreCase("DEBIT CARD") || pp.getPaymentType().equalsIgnoreCase("CREDIT CARD") || pp.getPaymentType().equalsIgnoreCase("CARD"))
                                                {
                                                    
                                                        ipFee=pp.getNetAmount();
                                                        ipCardAmt1=pp.getNetAmount();
                                                        ipChqAmt1=0;
                                                        ipCashAmt1=0;
                                                        ipAdvAmt=0;
                                                        totalIpFeeAmt1+=ipCardAmt1;
                                                        totalIpCardAmt1+=ipCardAmt1;
                                                        ipRecpAmt1=pp.getNetAmount();
                                                        ipDueAmt1 =0;
                                                        totalIpDueAmt1+=ipDueAmt1;
                                                        totalIpRecAmt1+=ipRecpAmt1;
                                                        
                                                
                                                }
                                                else if(pp.getPaymentType().equalsIgnoreCase("ADVANCE"))
                                                {
                                                    
                                                    
                                                    ipFee=pp.getNetAmount();
                                                    ipCashAmt1=0;
                                                    ipCardAmt1=0;
                                                    ipChqAmt1=0;
                                                    ipAdvAmt=pp.getNetAmount();
                                                    totalIpFeeAmt1+=ipAdvAmt;
                                                    ipRecpAmt1=0;
                                                    ipDueAmt1 = 0;
                                                    totalIpAdvAmt+=ipAdvAmt;
                                                    totalIpCardAmt1+=ipCardAmt1;
                                                    totalIpDueAmt1+=ipDueAmt1;
                                                    totalIpRecAmt1+=ipRecpAmt1;
                                                    
                                                }
                     
                                                else if(pp.getPaymentType().equalsIgnoreCase("due"))
                                                {
                                                    
                                                    
                                                    ipFee=0;
                                                    ipCashAmt1=0;
                                                    ipCardAmt1=0;
                                                    ipChqAmt1=0;
                                                    ipAdvAmt=0;
                                                    totalIpFeeAmt1+=ipAdvAmt;
                                                    ipRecpAmt1=0;
                                                    ipDueAmt1 =pp.getNetAmount()    ;
                                                    totalIpAdvAmt+=ipAdvAmt;
                                                    totalIpCardAmt1+=ipCardAmt1;
                                                    totalIpDueAmt1+=ipDueAmt1;
                                                    totalIpRecAmt1+=ipRecpAmt1;
                                                    
                                                }
                                                else if(pp.getPaymentType().equalsIgnoreCase("Cash+Card"))
                                                {
                                                    
                                                    
                                                    ipFee=pp.getNetAmount();
                                                    ipCashAmt1=0;
                                                    ipCardAmt1=0;
                                                    ipChqAmt1=0;
                                                    ipAdvAmt=0;
                                                    ipCashPlusCardAmt=pp.getNetAmount();
                                                    ipTotalCashPlusCardAmt+=ipCashPlusCardAmt;
                                                    totalIpFeeAmt1+=ipAdvAmt;
                                                    ipRecpAmt1=ipCashPlusCardAmt;
                                                    ipDueAmt1 =0;
                                                    totalIpAdvAmt+=ipAdvAmt;
                                                    totalIpCardAmt1+=ipCardAmt1;
                                                    totalIpDueAmt1+=ipDueAmt1;
                                                    totalIpRecAmt1+=ipRecpAmt1;
                                                    
                                                }
                                                
                                                ipFees+=ipFee;
                                                ipCashAmt2+=ipCashAmt1;
                                                ipCardAmt2+=ipCardAmt1;
                                                ipChqAmt2+=ipChqAmt1;
                                                ipAdvAmt1+=ipAdvAmt;
                                                ipRecpAmt2+= ipRecpAmt1;
                                                ipDueAmt2+=ipDueAmt1;
                                                ipCashPlusCardAmt1+=ipCashPlusCardAmt;
                                    }
                                     displayInfo9.put("ipFee", String.valueOf(ipFees));
                                         displayInfo9.put("ipAdvAmt", String.valueOf(ipAdvAmt1));
                                         displayInfo9.put("ipCashAmt1", String.valueOf(ipCashAmt2));
                                         displayInfo9.put("ipCardAmt1", String.valueOf(ipCardAmt2));
                                         displayInfo9.put("ipChqAmt1", String.valueOf(ipChqAmt2));  
                                         displayInfo9.put("ipRecpAmt1", String.valueOf(ipRecpAmt2));
                                         displayInfo9.put("ipDueAmt1", String.valueOf(ipDueAmt2));
                                         displayInfo9.put("ipCashPlusCardAmt1", String.valueOf(ipCashPlusCardAmt));
                                }
                            }
                    }
                    info1.add(pId1);
                    
                    displayInfo9.put("umr", umr);
                     displayInfo9.put("patientName", patientName);
                     displayInfo9.put("pId", pId1);
                     displayInfo9.put("consultant", consultant);
                     shows.add(displayInfo9);    
            
                     ipFees=0;
                     ipCashAmt2=0;
                     ipCardAmt2=0;
                     ipChqAmt2=0;
                     ipAdvAmt1=0;
                     ipRecpAmt2=0;
                     ipDueAmt2=0;
                     ipCashPlusCardAmt1=0;
                         
            
            }
               
                
            
       
        totalIpFeeAmt2+=totalIpFeeAmt1;
        totalIpCashAmt2+=totalIpCashAmt1;
        totalIpCardAmt2+=totalIpCardAmt1;
        totalIpChqAmt2+=totalIpChqAmt1;
        totalIpDueAmt2+=totalIpDueAmt1;
        totalIpRecAmt2+=totalIpRecAmt1;
        totalIpAdvAmt1+=totalIpAdvAmt;
        ipTotalCashPlusCardAmt1+=ipTotalCashPlusCardAmt;
                     
                        PdfPCell cell111;
        
                        for (Map<String, String> show1 : shows) {
                        cell111 = new PdfPCell(new Phrase(String.valueOf( show1.get("umr")), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                        table14.addCell(cell111);
        
                       
                            cell111 = new PdfPCell(new Phrase(String.valueOf(show1.get("patientName")), redFont));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                            //cell111.setPaddingLeft(-30f);
                            table14.addCell(cell111);
                       
        
                        cell111 = new PdfPCell(new Phrase(String.valueOf(show1.get("pId")), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                        //cell111.setPaddingLeft(-30f);
                        table14.addCell(cell111);
        
                        cell111 = new PdfPCell(new Phrase(String.valueOf(show1.get("consultant")), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                        //cell111.setPaddingLeft(-20f);
                        table14.addCell(cell111);
        
                        cell111 = new PdfPCell(new Phrase(String.valueOf(show1.get("ipFee")), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                        //cell111.setPaddingRight(35f);
                        table14.addCell(cell111);
                    
                        cell111 = new PdfPCell(new Phrase("0", redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                        //cell111.setPaddingRight(20f);
                        table14.addCell(cell111);
        
                        cell111 = new PdfPCell(new Phrase(String.valueOf(show1.get("ipFee")), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                        //cell111.setPaddingRight(15f);
                        table14.addCell(cell111);
                    
                        cell111 = new PdfPCell(new Phrase(String.valueOf(show1.get("ipAdvAmt")), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                        //cell111.setPaddingRight(12f);
                        table14.addCell(cell111);
        
                        cell111 = new PdfPCell(new Phrase(String.valueOf(show1.get("ipRecpAmt1")), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                        //cell111.setPaddingRight(10f);
                        table14.addCell(cell111);
                       
                        cell111 = new PdfPCell(new Phrase(String.valueOf(show1.get("ipCashAmt1")), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                        //cell111.setPaddingRight(10f);
                        table14.addCell(cell111);
                        
                        cell111 = new PdfPCell(new Phrase(String.valueOf(show1.get("ipChqAmt1")), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                        table14.addCell(cell111);
                        
                        cell111 = new PdfPCell(new Phrase(String.valueOf(show1.get("ipCardAmt1")), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                        table14.addCell(cell111);
                        
                        cell111 = new PdfPCell(new Phrase(String.valueOf(show1.get("ipCashPlusCardAmt1")), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                        table14.addCell(cell111);
                        
                        cell111 = new PdfPCell(new Phrase(String.valueOf(show1.get("ipDueAmt1")), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                        table14.addCell(cell111);
                        
                        }
                
            
        
       }else {
           
           PdfPCell cell111;
           
           cell111 = new PdfPCell(new Phrase("", redFont));
           cell111.setBorder(Rectangle.NO_BORDER);
           cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
           table14.addCell(cell111);
           
               cell111 = new PdfPCell(new Phrase("", redFont));
               cell111.setBorder(Rectangle.NO_BORDER);
               cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
               //cell111.setPaddingLeft(-30f);
               table14.addCell(cell111);
           
          
           cell111 = new PdfPCell(new Phrase("", redFont));
           cell111.setBorder(Rectangle.NO_BORDER);
           cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
           //cell111.setPaddingLeft(-30f);
           table14.addCell(cell111);
           cell111 = new PdfPCell(new Phrase("", redFont));
           cell111.setBorder(Rectangle.NO_BORDER);
           cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
           //cell111.setPaddingLeft(-20f);
           table14.addCell(cell111);
           cell111 = new PdfPCell(new Phrase(String.valueOf(0), redFont));
           cell111.setBorder(Rectangle.NO_BORDER);
           cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
           //cell111.setPaddingRight(35f);
           table14.addCell(cell111);
       
           cell111 = new PdfPCell(new Phrase("0", redFont));
           cell111.setBorder(Rectangle.NO_BORDER);
           cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
           //cell111.setPaddingRight(20f);
           table14.addCell(cell111);
           cell111 = new PdfPCell(new Phrase(String.valueOf(0), redFont));
           cell111.setBorder(Rectangle.NO_BORDER);
           cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
           //cell111.setPaddingRight(15f);
           table14.addCell(cell111);
       
           cell111 = new PdfPCell(new Phrase(String.valueOf(0), redFont));
           cell111.setBorder(Rectangle.NO_BORDER);
           cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
           //cell111.setPaddingRight(12f);
           table14.addCell(cell111);
           cell111 = new PdfPCell(new Phrase(String.valueOf(0), redFont));
           cell111.setBorder(Rectangle.NO_BORDER);
           cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
           //cell111.setPaddingRight(10f);
           table14.addCell(cell111);
       
           cell111 = new PdfPCell(new Phrase(String.valueOf(0), redFont));
           cell111.setBorder(Rectangle.NO_BORDER);
           cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
           //cell111.setPaddingRight(10f);
           table14.addCell(cell111);
           cell111 = new PdfPCell(new Phrase(String.valueOf(0), redFont));
           cell111.setBorder(Rectangle.NO_BORDER);
           cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
           table14.addCell(cell111);
       
           cell111 = new PdfPCell(new Phrase(String.valueOf(0), redFont));
           cell111.setBorder(Rectangle.NO_BORDER);
           cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
           table14.addCell(cell111);
           
           cell111 = new PdfPCell(new Phrase(String.valueOf(0), redFont));
           cell111.setBorder(Rectangle.NO_BORDER);
           cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
           table14.addCell(cell111);
           cell111 = new PdfPCell(new Phrase(String.valueOf(0), redFont));
           cell111.setBorder(Rectangle.NO_BORDER);
           cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
           table14.addCell(cell111);
           
           
       }
            cell1.addElement(table14);
        
            PdfPTable table01 = new PdfPTable(14);
            table01.setWidths(new float[] {4f, 6f, 4f, 6f, 4f, 2f, 3f, 3f, 3f, 3f, 3f, 3f,4f,3f});
            table01.setSpacingBefore(10);
            table01.setWidthPercentage(100f);
            
            PdfPCell cell01;
            cell01 = new PdfPCell(new Phrase("", redFont));
            cell01.setBorder(Rectangle.NO_BORDER);
            cell01.setHorizontalAlignment(Element.ALIGN_LEFT);
            table01.addCell(cell01);
            cell01 = new PdfPCell(new Phrase("", redFont));
            cell01.setBorder(Rectangle.NO_BORDER);
            cell01.setHorizontalAlignment(Element.ALIGN_LEFT);
            //cell01.setPaddingLeft(-30f);
            table01.addCell(cell01);
            cell01 = new PdfPCell(new Phrase("", redFont));
            cell01.setBorder(Rectangle.NO_BORDER);
            cell01.setHorizontalAlignment(Element.ALIGN_LEFT);
            //cell01.setPaddingLeft(-30f);
            table01.addCell(cell01);
            cell01 = new PdfPCell(new Phrase("", redFont));
            cell01.setBorder(Rectangle.NO_BORDER);
            cell01.setHorizontalAlignment(Element.ALIGN_LEFT);
            //cell01.setPaddingLeft(-30f);
            table01.addCell(cell01);
            cell01 = new PdfPCell(new Phrase(String.valueOf(totalIpRecAmt2), redFont));
            cell01.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell01.setPaddingTop(5f);
            cell01.setPaddingBottom(5f);
            cell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell01.setPaddingRight(10f);
            table01.addCell(cell01);
        
            cell01 = new PdfPCell(new Phrase("0", redFont));
            cell01.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell01.setPaddingTop(5f);
            cell01.setPaddingBottom(5f);
            cell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell01.setPaddingRight(-15f);
            table01.addCell(cell01);
            cell01 = new PdfPCell(new Phrase(String.valueOf(totalIpRecAmt2), redFont));
            cell01.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell01.setPaddingTop(5f);
            cell01.setPaddingBottom(5f);
            cell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell01.setPaddingRight(-20f);
            table01.addCell(cell01);
        
            cell01 = new PdfPCell(new Phrase(String.valueOf(totalIpAdvAmt1), redFont));
            cell01.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell01.setPaddingTop(5f);
            cell01.setPaddingBottom(5f);
            cell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell01.setPaddingRight(-10f);
            table01.addCell(cell01);
            cell01 = new PdfPCell(new Phrase(String.valueOf(totalIpRecAmt2), redFont));
            cell01.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell01.setPaddingTop(5f);
            cell01.setPaddingBottom(5f);
            cell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell01.setPaddingRight(-17f);
            table01.addCell(cell01);
        
            cell01 = new PdfPCell(new Phrase(String.valueOf(totalIpCashAmt2), redFont));
            cell01.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell01.setPaddingTop(5f);
            cell01.setPaddingBottom(5f);
            cell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell01.setPaddingRight(-13f);
            table01.addCell(cell01);
            cell01 = new PdfPCell(new Phrase(String.valueOf(totalIpChqAmt2), redFont));
            cell01.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell01.setPaddingTop(5f);
            cell01.setPaddingBottom(5f);
            cell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell01.setPaddingRight(-7f);
            table01.addCell(cell01);
        
            cell01 = new PdfPCell(new Phrase(String.valueOf(totalIpCardAmt2), redFont));
            cell01.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell01.setPaddingTop(5f);
            cell01.setPaddingBottom(5f);
            cell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell01.setPaddingRight(-3f);
            table01.addCell(cell01);
            
            cell01 = new PdfPCell(new Phrase(String.valueOf(ipTotalCashPlusCardAmt1), redFont));
            cell01.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell01.setPaddingTop(5f);
            cell01.setPaddingBottom(5f);
            cell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell01.setPaddingRight(-3f);
            table01.addCell(cell01);
            cell01 = new PdfPCell(new Phrase(String.valueOf(totalIpDueAmt2), redFont));
            cell01.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell01.setPaddingTop(5f);
            cell01.setPaddingBottom(5f);
            cell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table01.addCell(cell01);
            cell1.addElement(table01);
            
            //----------------------------------IP ADVANCE--------------------------------------------------------
            
            
            
            PdfPTable table081 = new PdfPTable(1);
            table081.setWidths(new float[] {6});
            table081.setSpacingBefore(10);
            table081.setWidthPercentage(100f);
            
            PdfPCell hcell043;
            hcell043 = new PdfPCell(new Phrase("IP ADVANCE BILLS",headFont));
            hcell043.setBorder(Rectangle.NO_BORDER);
            hcell043.setHorizontalAlignment(Element.ALIGN_LEFT);
            hcell043.setPaddingBottom(-10f);
            table081.addCell(hcell043);
            cell1.addElement(table081);
            
            PdfPTable table81 = new PdfPTable(14);
            table81.setWidths(new float[] { 4f, 6f, 4f, 6f, 4f, 2f, 3f, 3f, 3f, 3f, 3f, 3f,4f,3f});
            table81.setSpacingBefore(10);
            table81.setWidthPercentage(100f);
            PdfPCell hcell031;
    
            hcell031 = new PdfPCell(new Phrase("", headFont));
            hcell031.setBorder(Rectangle.NO_BORDER);
            hcell031.setHorizontalAlignment(Element.ALIGN_LEFT);
            table81.addCell(hcell031);
            
            hcell031 = new PdfPCell(new Phrase("", headFont));
            hcell031.setBorder(Rectangle.NO_BORDER);
            hcell031.setHorizontalAlignment(Element.ALIGN_LEFT);
            table81.addCell(hcell031);
            
            hcell031 = new PdfPCell(new Phrase("", headFont));
            hcell031.setBorder(Rectangle.NO_BORDER);
            hcell031.setHorizontalAlignment(Element.ALIGN_LEFT);
            table81.addCell(hcell031);
            
            hcell031 = new PdfPCell(new Phrase("", headFont));
            hcell031.setBorder(Rectangle.NO_BORDER);
            hcell031.setHorizontalAlignment(Element.ALIGN_LEFT);
            table81.addCell(hcell031);
            
            hcell031 = new PdfPCell(new Phrase("", headFont));
            hcell031.setBorder(Rectangle.NO_BORDER);
            hcell031.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table81.addCell(hcell031);
            
            hcell031 = new PdfPCell(new Phrase("", headFont));
            hcell031.setBorder(Rectangle.NO_BORDER);
            hcell031.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table81.addCell(hcell031);
            
            hcell031 = new PdfPCell(new Phrase("", headFont));
            hcell031.setBorder(Rectangle.NO_BORDER);
            hcell031.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table81.addCell(hcell031);
            
            hcell031 = new PdfPCell(new Phrase("", headFont));
            hcell031.setBorder(Rectangle.NO_BORDER);
            hcell031.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table81.addCell(hcell031);
            
            hcell031 = new PdfPCell(new Phrase("", headFont));
            hcell031.setBorder(Rectangle.NO_BORDER);
            hcell031.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table81.addCell(hcell031);
            
            hcell031 = new PdfPCell(new Phrase("", headFont));
            hcell031.setBorder(Rectangle.NO_BORDER);
            hcell031.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table81.addCell(hcell031);
            
            hcell031 = new PdfPCell(new Phrase("", headFont));
            hcell031.setBorder(Rectangle.NO_BORDER);
            hcell031.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table81.addCell(hcell031);
            
            hcell031 = new PdfPCell(new Phrase("", headFont));
            hcell031.setBorder(Rectangle.NO_BORDER);
            hcell031.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table81.addCell(hcell031);
            
            hcell031 = new PdfPCell(new Phrase("", headFont));
            hcell031.setBorder(Rectangle.NO_BORDER);
            hcell031.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table81.addCell(hcell031);
            
            
            hcell031 = new PdfPCell(new Phrase("", headFont));
            hcell031.setBorder(Rectangle.NO_BORDER);
            hcell031.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table81.addCell(hcell031);
            
          
            List<Map<String, String>> show7 = new ArrayList<>();
            List<String> info7 = new ArrayList<>();
            Map<String, String> displayInfo7 = null; 
            
            
            String patientTypeIp=null;
            String patientIpName=null;
            String ipUmr=null;
            String ipConsultant=null;
            long ipAdvFee = 0;
            long ipAdvFee1 = 0;
            long ipAdvCashAmt1 = 0;
            long ipAdvChqAmt1 = 0;
            long ipAdvCardAmt1 = 0;
            long ipAdvAdAmt1=0;
            float totalipAdvFeeAmt1 = 0;
            float totalipAdvCashAmt1 = 0;
            float totalipAdvCardAmt1 = 0;
            float totalipAdvChqAmt1 = 0;
            float totalipAdvDueAmt1 = 0;
            float totalipAdvAdvcAmt1=0;
            long dueipAdvAmt1=0;
            long recpipAdvAmt1=0;
            float totalipAdvRecpAmt1=0;
            float cashPlusCardipAdvAmt1=0;
            float totalCashPlusCardipAdvAmt1=0;
            
            long ipAdvCashAmt = 0;
            long ipAdvChqAmt = 0;
            long ipAdvCardAmt = 0;
            long ipAdvAdAmt=0;
            float totalipAdvFeeAmt = 0;
            float totalipAdvCashAmt = 0;
            float totalipAdvCardAmt = 0;
            float totalipAdvChqAmt = 0;
            float totalipAdvDueAmt = 0;
            float totalipAdvAdvcAmt=0;
            long dueipAdvAmt=0;
            long recpipAdvAmt=0;
            float totalipAdvRecpAmt=0;
            float cashPlusCardipAdvAmt=0;
            float totalCashPlusCardipAdvAmt=0;
            String paymentMode=null;
          
            List<PatientPayment> patientPayments = paymentRepository.findUserWiseIpOpDetailed(user.get("fromDate"), user.get("toDate"),uId);
            System.out.println("-----------------------------Patient Payment size---------------"+patientPayments.size());
            if(!patientPayments.isEmpty())
            {
            for(PatientPayment patientPaymentInfo : patientPayments)
            {
            	 if(patientPaymentInfo.getAmount()!=0)
                 {
                pId1 = patientPaymentInfo.getPatientRegistration().getRegId();
                 displayInfo7 = new HashMap<>();
                patientType= patientPaymentInfo.getPatientRegistration().getpType();
                //Set<PatientPayment> patientPayments = pReg.getPatientPayment();
                
                ipUmr= patientPaymentInfo.getPatientRegistration().getPatientDetails().getUmr();
                if( patientPaymentInfo.getPatientRegistration().getPatientDetails().getMiddleName()!=null)
                {
                    patientIpName= patientPaymentInfo.getPatientRegistration().getPatientDetails().getFirstName()+" "+ patientPaymentInfo.getPatientRegistration().getPatientDetails().getMiddleName()+" "+ patientPaymentInfo.getPatientRegistration().getPatientDetails().getLastName();
                }
                else
                {
                    patientIpName= patientPaymentInfo.getPatientRegistration().getPatientDetails().getFirstName()+" "+ patientPaymentInfo.getPatientRegistration().getPatientDetails().getLastName();    
                }
                ipConsultant= patientPaymentInfo.getPatientRegistration().getPatientDetails().getConsultant();
            
                List<PatientPayment> paymentScroll= paymentRepository.getPaticularPatientForScroll(uId, pId1, user.get("fromDate"),user.get("toDate"));
                System.out.println("-----------------------------Patient scroll Payment size---------------"+paymentScroll.size());
                System.out.println("------empty----"+paymentScroll.size());
                if(!info7.contains(pId1) && !paymentScroll.isEmpty())
                {
                    for(PatientPayment pp : paymentScroll)
                        {
                                patientTypes=pp.getPatientRegistration().getpType();
          
                                if(pp.getAmount()!=0)
                                {
                    
                                    if(pp.getPatientRegistration().getRegId()!=null && patientTypes.equalsIgnoreCase("INPATIENT") && pp.getTypeOfCharge().equalsIgnoreCase("ADVANCE"))
                                    {
                                    
                                                    if(pp.getModeOfPaymant().equalsIgnoreCase("CASH"))
                                                    {
                                                        
                                                        
                                                        ipAdvFee=pp.getAmount();
                                                        ipAdvAdAmt=0;
                                                       ipAdvCashAmt=ipAdvFee;
                                                        ipAdvChqAmt=0;
                                                        ipAdvCardAmt=0;
                                                        cashPlusCardipAdvAmt=0;
                                                        totalipAdvFeeAmt+=ipAdvFee;
                                                        totalipAdvCashAmt+=ipAdvCashAmt;
                                                        recpipAdvAmt=ipAdvCashAmt;
                                                        dueipAdvAmt = 0;
                                                        totalipAdvDueAmt+=dueipAdvAmt;
                                                        totalipAdvRecpAmt+=recpipAdvAmt;
                                                    }
                                                    else if(pp.getModeOfPaymant().equalsIgnoreCase("CHQ")||pp.getModeOfPaymant().equalsIgnoreCase("CHEQUE"))
                                                    {
                                                
                                                        
                                                        ipAdvFee=pp.getAmount();
                                                        ipAdvChqAmt=pp.getAmount();
                                                        ipAdvCashAmt=0;
                                                        ipAdvCardAmt=0;
                                                        ipAdvAdAmt=0;
                                                        cashPlusCardipAdvAmt=0;
                                                        totalipAdvFeeAmt+=ipAdvFee;
                                                        totalipAdvChqAmt+=ipAdvChqAmt;
                                                        recpipAdvAmt=pp.getAmount();
                                                        dueipAdvAmt = 0;
                                                        totalipAdvDueAmt+=dueipAdvAmt;
                                                        totalipAdvRecpAmt+=recpipAdvAmt;
                                                    }
                                                    else if(pp.getModeOfPaymant().equalsIgnoreCase("DEBIT CARD") || pp.getModeOfPaymant().equalsIgnoreCase("CREDIT CARD") || pp.getModeOfPaymant().equalsIgnoreCase("CARD"))
                                                    {
                                                        
                                                        ipAdvFee=pp.getAmount();
                                                        ipAdvCardAmt=pp.getAmount();
                                                        ipAdvChqAmt=0;
                                                        ipAdvCashAmt=0;
                                                        ipAdvAdAmt=0;
                                                        totalipAdvFeeAmt+=ipAdvFee;
                                                        totalipAdvCardAmt+=ipAdvCardAmt;
                                                        recpipAdvAmt=pp.getAmount();
                                                        dueipAdvAmt = 0;
                                                        totalipAdvDueAmt+=dueipAdvAmt;
                                                        totalipAdvRecpAmt+=recpipAdvAmt;
                                                            
                                                    
                                                    }
                                                    else if(pp.getModeOfPaymant().equalsIgnoreCase("ADVANCE"))
                                                    {
                                                        
                                                        
                                                        ipAdvFee=pp.getAmount();
                                                        ipAdvCashAmt=0;
                                                        ipAdvCardAmt=0;
                                                        ipAdvChqAmt=0;
                                                        ipAdvAdAmt=pp.getAmount();
                                                        totalipAdvFeeAmt+=ipAdvFee;
                                                        recpipAdvAmt=0;
                                                        dueipAdvAmt = 0;
                                                        totalipAdvAdvcAmt+=ipAdvAdAmt;
                                                        totalipAdvCardAmt+=ipAdvCardAmt;
                                                        totalipAdvDueAmt+=dueipAdvAmt;
                                                        totalipAdvRecpAmt+=recpipAdvAmt;
                                                        
                                                    }
                         
                                                    else if(pp.getModeOfPaymant().equalsIgnoreCase("due"))
                                                    {
                                                        
                                                        
                                                        ipAdvFee=0;
                                                        ipAdvCashAmt=0;
                                                        ipAdvCardAmt=0;
                                                        ipAdvChqAmt=0;
                                                        ipAdvAdAmt=0;
                                                        cashPlusCardipAdvAmt=0;
                                                        totalipAdvFeeAmt+=ipAdvFee;
                                                        recpipAdvAmt=0;
                                                        dueipAdvAmt =pp.getAmount()    ;
                                                        totalipAdvAdvcAmt+=ipAdvAdAmt;
                                                        totalipAdvCardAmt+=ipAdvCardAmt;
                                                        totalipAdvDueAmt+=dueipAdvAmt;
                                                        totalipAdvRecpAmt+=recpipAdvAmt;
                                                        
                                                    }
                                                    else if(pp.getModeOfPaymant().equalsIgnoreCase("Cash+Card"))
                                                    {
                                                        
                                                        
                                                        ipAdvFee=pp.getAmount(); 
                                                        ipAdvCashAmt=0;
                                                        ipAdvCardAmt=0;
                                                        ipAdvChqAmt=0;
                                                        ipAdvAdAmt=0;
                                                        cashPlusCardipAdvAmt=ipAdvFee; 
                                                        totalCashPlusCardipAdvAmt+=cashPlusCardipAdvAmt; 
                                                        totalipAdvFeeAmt+=ipAdvFee; 
                                                        recpipAdvAmt=ipAdvFee;
                                                        dueipAdvAmt =0;
                                                        totalipAdvAdvcAmt+=ipAdvAdAmt;
                                                        totalIpCardAmt1+=ipCardAmt1;
                                                        totalipAdvDueAmt+=dueipAdvAmt;
                                                        totalipAdvRecpAmt+=recpipAdvAmt;
                                                        
                                                    }
                                                    
                                                    ipAdvFee1+=ipAdvFee; 
                                                    ipAdvCashAmt1+=ipAdvCashAmt; 
                                                    ipAdvCardAmt1+=ipAdvCardAmt;
                                                    ipAdvChqAmt1+=ipAdvChqAmt;
                                                    ipAdvAdAmt1+=ipAdvAdAmt;
                                                    recpipAdvAmt1+= recpipAdvAmt; 
                                                    dueipAdvAmt1+=dueipAdvAmt;
                                                    cashPlusCardipAdvAmt1+=cashPlusCardipAdvAmt; 
                                        
                                                   if(! paymentScroll.isEmpty() && pp.getAmount()!=0)
                                                   {
                                        displayInfo7.put("ipAdvFee", String.valueOf(ipAdvFee1));
                                           displayInfo7.put("ipAdvAdAmt", String.valueOf(ipAdvAdAmt1));
                                           displayInfo7.put("ipAdvCashAmt", String.valueOf(ipAdvCashAmt1));
                                           displayInfo7.put("ipAdvCardAmt", String.valueOf(ipAdvCardAmt1));
                                           displayInfo7.put("ipAdvChqAmt", String.valueOf(ipAdvChqAmt1));  
                                           displayInfo7.put("recpipAdvAmt", String.valueOf(recpipAdvAmt1));
                                           displayInfo7.put("dueipAdvAmt", String.valueOf(dueipAdvAmt1));
                                                   }
                                           if(!paymentScroll.isEmpty())
                                           {
                                         	 if(ipUmr!=null)
                                           {
                                             displayInfo7.put("ipUmr", ipUmr);
                                           }else
                                           {
                                         	  displayInfo7.put("ipUmr",""); 
                                           }
                                           if(!patientIpName.isEmpty())
                                             {
                                         	  displayInfo7.put("patientIpName", patientIpName);
                                             }else
                                             {
                                             	displayInfo7.put("patientIpName", "");
                                             	
                                             }
                                           if(!pId1.isEmpty())
                                              {
                                         	  displayInfo7.put("pId", pId1);
                                              }
                                           else
                                           {
                                         	  displayInfo7.put("pId", "");
                                           }
                                           
                                           if(!ipConsultant.isEmpty())
                                           {
                                              displayInfo7.put("ipConsultant", ipConsultant);
                                           }else
                                           {
                                         	  displayInfo7.put("ipConsultant","");
                                           }
                                           }
                                                   }
                                    
                                
                                           System.out.println("----------------------------------"+pId1);
                                           System.out.println("----------------------------------"+cashPlusCardipAdvAmt);
                                
                                    displayInfo7.put("cashPlusCardipAdvAmt", String.valueOf(cashPlusCardipAdvAmt1));
                                }       
                                
                        //}
                                  
                                  
                                          
                        info7.add(pId1);
                        }
                    
                      ipAdvFee1=0;
                        ipAdvCashAmt1=0;
                        ipAdvCardAmt1=0;
                        ipAdvChqAmt1=0;
                        ipAdvAdAmt1=0;
                        recpipAdvAmt1=0;
                        dueipAdvAmt1=0;
                        cashPlusCardipAdvAmt1=0;
                
                        
                         // info7.add(pId);
                         
                             show7.add(displayInfo7);        
                }  // Not contains condition info7        
                        
                 }      
                    
               
               
                  //cashPlusCardipAdvAmt1=0;
                    }
            
             
             totalipAdvFeeAmt1+=totalipAdvFeeAmt;
             totalipAdvCashAmt1+=totalipAdvCashAmt;
             totalipAdvCardAmt1+=totalipAdvCardAmt;
             totalipAdvChqAmt1+=totalipAdvChqAmt;
             totalipAdvDueAmt1+=totalipAdvDueAmt;
             totalipAdvAdvcAmt1+=totalipAdvAdvcAmt;
             totalipAdvRecpAmt1+=totalipAdvRecpAmt;
             totalCashPlusCardipAdvAmt1+=totalCashPlusCardipAdvAmt;
     
                        
            for (Map<String, String> show71 : show7) 
            {
                       
                            PdfPCell cell111;
        
                        cell111 = new PdfPCell(new Phrase(String.valueOf(show71.get("ipUmr")), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                        table81.addCell(cell111);
        
                   
                        cell111 = new PdfPCell(new Phrase(String.valueOf(show71.get("patientIpName")), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                        //cell111.setPaddingLeft(-30f);
                        table81.addCell(cell111);
                    
        
                        cell111 = new PdfPCell(new Phrase(String.valueOf(show71.get("pId")), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                        //cell111.setPaddingLeft(-30f);
                        table81.addCell(cell111);
        
                        cell111 = new PdfPCell(new Phrase(String.valueOf(show71.get("ipConsultant")), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                        //cell111.setPaddingLeft(-20f);
                        table81.addCell(cell111);
        
                        cell111 = new PdfPCell(new Phrase(String.valueOf(show71.get("ipAdvFee")), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                        //cell111.setPaddingRight(35f);
                        table81.addCell(cell111);
                    
                        cell111 = new PdfPCell(new Phrase("0", redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                        //cell111.setPaddingRight(20f);
                        table81.addCell(cell111);
        
                        cell111 = new PdfPCell(new Phrase(String.valueOf(show71.get("ipAdvFee")), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                        //cell111.setPaddingRight(15f);
                        table81.addCell(cell111);
                    
                        cell111 = new PdfPCell(new Phrase(String.valueOf(show71.get("ipAdvAdAmt")), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                        //cell111.setPaddingRight(12f);
                        table81.addCell(cell111);
        
                        cell111 = new PdfPCell(new Phrase(String.valueOf(show71.get("recpipAdvAmt")), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                        //cell111.setPaddingRight(10f);
                        table81.addCell(cell111);
                    
                        cell111 = new PdfPCell(new Phrase(String.valueOf(show71.get("ipAdvCashAmt")), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                        //cell111.setPaddingRight(10f);
                        table81.addCell(cell111);
        
                        cell111 = new PdfPCell(new Phrase(String.valueOf(show71.get("ipAdvChqAmt")), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                        table81.addCell(cell111);
                    
                        cell111 = new PdfPCell(new Phrase(String.valueOf(show71.get("ipAdvCardAmt")), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                        table81.addCell(cell111);
                        
                        
                        cell111 = new PdfPCell(new Phrase(String.valueOf(show71.get("cashPlusCardipAdvAmt")), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                        table81.addCell(cell111);
        
                        cell111 = new PdfPCell(new Phrase(String.valueOf(show71.get("dueipAdvAmt")), redFont));
                        cell111.setBorder(Rectangle.NO_BORDER);
                        cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                        table81.addCell(cell111);
                    }
       
           
            }
            
            else
            {
                 
                PdfPCell cell111;
                cell111 = new PdfPCell(new Phrase("", redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                table81.addCell(cell111);
                
                cell111 = new PdfPCell(new Phrase("", redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                // cell111.setPaddingLeft(-30f);
                table81.addCell(cell111);
                cell111 = new PdfPCell(new Phrase("", redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                //cell111.setPaddingLeft(-30f);
                table81.addCell(cell111);
                cell111 = new PdfPCell(new Phrase("", redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                //cell111.setPaddingLeft(-20f);
                table81.addCell(cell111);
                cell111 = new PdfPCell(new Phrase("0", redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                //cell111.setPaddingRight(35f);
                table81.addCell(cell111);
            
                cell111 = new PdfPCell(new Phrase("0", redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                //cell111.setPaddingRight(20f);
                table81.addCell(cell111);
                cell111 = new PdfPCell(new Phrase("0", redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                //cell111.setPaddingRight(15f);
                table81.addCell(cell111);
            
                cell111 = new PdfPCell(new Phrase("0", redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                //cell111.setPaddingRight(12f);
                table81.addCell(cell111);
                cell111 = new PdfPCell(new Phrase("", redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                //cell111.setPaddingRight(10f);
                table81.addCell(cell111);
            
                cell111 = new PdfPCell(new Phrase("0", redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                //cell111.setPaddingRight(10f);
                table81.addCell(cell111);
                cell111 = new PdfPCell(new Phrase("0", redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                table81.addCell(cell111);
            
                cell111 = new PdfPCell(new Phrase("0", redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                table81.addCell(cell111);
                
                cell111 = new PdfPCell(new Phrase("0", redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                table81.addCell(cell111);
                cell111 = new PdfPCell(new Phrase("0", redFont));
                cell111.setBorder(Rectangle.NO_BORDER);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                table81.addCell(cell111);
            }
            cell1.addElement(table81);
            
            PdfPTable table6011 = new PdfPTable(14);
            table6011.setWidths(new float[] {4f, 6f, 4f, 6f, 4f, 2f, 3f, 3f, 3f, 3f, 3f, 3f,4f,3f});
            table6011.setSpacingBefore(10);
            table6011.setWidthPercentage(100f);
            
            PdfPCell cell051;
            cell051 = new PdfPCell(new Phrase("", redFont));
            cell051.setBorder(Rectangle.NO_BORDER);
            cell051.setHorizontalAlignment(Element.ALIGN_LEFT);
            table6011.addCell(cell051);
            
            cell051 = new PdfPCell(new Phrase("", redFont));
            cell051.setBorder(Rectangle.NO_BORDER);
            cell051.setHorizontalAlignment(Element.ALIGN_LEFT);
            //cell05.setPaddingLeft(-30f);
            table6011.addCell(cell051);
            
            cell051 = new PdfPCell(new Phrase("", redFont));
            cell051.setBorder(Rectangle.NO_BORDER);
            cell051.setHorizontalAlignment(Element.ALIGN_LEFT);
            //cell05.setPaddingLeft(-30f);
            table6011.addCell(cell051);
            
            cell051 = new PdfPCell(new Phrase("", redFont));
            cell051.setBorder(Rectangle.NO_BORDER);
            cell051.setHorizontalAlignment(Element.ALIGN_LEFT);
            //cell05.setPaddingLeft(-30f);
            table6011.addCell(cell051);
            
            cell051 = new PdfPCell(new Phrase(String.valueOf(totalipAdvFeeAmt1), redFont));
            //cell1111.setBorder(Rectangle.NO_BORDER);
            cell051.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell051.setPaddingTop(5f);
            cell051.setPaddingBottom(5f);
            cell051.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell05.setPaddingRight(10f);
            table6011.addCell(cell051);
        
            cell051 = new PdfPCell(new Phrase("0", redFont));
            //cell1111.setBorder(Rectangle.NO_BORDER);
            cell051.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell051.setPaddingTop(5f);
            cell051.setPaddingBottom(5f);
            cell051.setHorizontalAlignment(Element.ALIGN_RIGHT);
           // cell05.setPaddingRight(-15f);
            table6011.addCell(cell051);
            
            cell051 = new PdfPCell(new Phrase(String.valueOf(totalipAdvFeeAmt1), redFont));
            //cell1111.setBorder(Rectangle.NO_BORDER);
            cell051.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell051.setPaddingTop(5f);
            cell051.setPaddingBottom(5f);
            cell051.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell05.setPaddingRight(-20f);
            table6011.addCell(cell051);
        
            cell051 = new PdfPCell(new Phrase(String.valueOf(totalipAdvAdvcAmt1), redFont));
            //cell1111.setBorder(Rectangle.NO_BORDER);
            cell051.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell051.setPaddingTop(5f);
            cell051.setPaddingBottom(5f);
            cell051.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell05.setPaddingRight(-10f);
            table6011.addCell(cell051);
            
            cell051 = new PdfPCell(new Phrase(String.valueOf(totalipAdvRecpAmt1), redFont));
            //cell1111.setBorder(Rectangle.NO_BORDER);
            cell051.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell051.setPaddingTop(5f);
            cell051.setPaddingBottom(5f);
            cell051.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell05.setPaddingRight(-17f);
            table6011.addCell(cell051);
        
            cell051 = new PdfPCell(new Phrase(String.valueOf(totalipAdvCashAmt1), redFont));
            //cell1111.setBorder(Rectangle.NO_BORDER);
            cell051.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell051.setPaddingTop(5f);
            cell051.setPaddingBottom(5f);
            cell051.setHorizontalAlignment(Element.ALIGN_RIGHT);
           // cell05.setPaddingRight(-13f);
            table6011.addCell(cell051);
            
            cell051 = new PdfPCell(new Phrase(String.valueOf(totalipAdvChqAmt1), redFont));
            //cell1111.setBorder(Rectangle.NO_BORDER);
            cell051.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell051.setPaddingTop(5f);
            cell051.setPaddingBottom(5f);
            cell051.setHorizontalAlignment(Element.ALIGN_RIGHT);
           // cell05.setPaddingRight(-7f);
            table6011.addCell(cell051);
        
            cell051 = new PdfPCell(new Phrase(String.valueOf(totalipAdvCardAmt), redFont));
            //cell1111.setBorder(Rectangle.NO_BORDER);
            cell051.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell051.setPaddingTop(5f);
            cell051.setPaddingBottom(5f);
            cell051.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell05.setPaddingRight(-3f);
            table6011.addCell(cell051);
            
            cell051 = new PdfPCell(new Phrase(String.valueOf(totalCashPlusCardipAdvAmt1), redFont));
            //cell1111.setBorder(Rectangle.NO_BORDER);
            cell051.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell051.setPaddingTop(5f);
            cell051.setPaddingBottom(5f);
            cell051.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell05.setPaddingRight(-3f);
            table6011.addCell(cell051);
            
            cell051 = new PdfPCell(new Phrase(String.valueOf(totalipAdvDueAmt1), redFont));
            //cell1111.setBorder(Rectangle.NO_BORDER);
            cell051.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell051.setPaddingTop(5f);
            cell051.setPaddingBottom(5f);
            cell051.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table6011.addCell(cell051);
            cell1.addElement(table6011);
            
            
            
            
            //----------------------------------LABORATORY BILLS---------------------------------------------------                 
            
            PdfPTable table09 = new PdfPTable(1);
            table09.setWidths(new float[] {6f});
            table09.setSpacingBefore(10);
            table09.setWidthPercentage(100f);
            
            PdfPCell hcell71;
            
            hcell71 = new PdfPCell(new Phrase("LABORATORY BILLS", headFont));
            hcell71.setBorder(Rectangle.NO_BORDER);
            hcell71.setHorizontalAlignment(Element.ALIGN_LEFT);
            hcell71.setPaddingBottom(-10f);
            table09.addCell(hcell71);
            cell1.addElement(table09);
            
  
                          PdfPTable table141 = new PdfPTable(14);
                          table141.setWidths(new float[] { 4f, 6f, 4f, 6f, 4f, 2f, 3f, 3f, 3f, 3f, 3f, 3f,4f,3f });
                          table141.setSpacingBefore(10);
                          table141.setWidthPercentage(100f);
                          PdfPCell hcell091;
                  
                          hcell091 = new PdfPCell(new Phrase("", headFont));
                          hcell091.setBorder(Rectangle.NO_BORDER);
                          hcell091.setHorizontalAlignment(Element.ALIGN_LEFT);
                          table141.addCell(hcell091);
                          
                          hcell091 = new PdfPCell(new Phrase("", headFont));
                          hcell091.setBorder(Rectangle.NO_BORDER);
                          hcell091.setHorizontalAlignment(Element.ALIGN_LEFT);
                          table141.addCell(hcell091);
                          
                          hcell091 = new PdfPCell(new Phrase("", headFont));
                          hcell091.setBorder(Rectangle.NO_BORDER);
                          hcell091.setHorizontalAlignment(Element.ALIGN_LEFT);
                          table141.addCell(hcell091);
                          
                          hcell091 = new PdfPCell(new Phrase("", headFont));
                          hcell091.setBorder(Rectangle.NO_BORDER);
                          hcell091.setHorizontalAlignment(Element.ALIGN_LEFT);
                          table141.addCell(hcell091);
                          
                          hcell091 = new PdfPCell(new Phrase("", headFont));
                          hcell091.setBorder(Rectangle.NO_BORDER);
                          hcell091.setHorizontalAlignment(Element.ALIGN_RIGHT);
                          //hcell09.setPaddingRight(20f);
                          table141.addCell(hcell091);
                          
                          hcell091 = new PdfPCell(new Phrase("", headFont));
                          hcell091.setBorder(Rectangle.NO_BORDER);
                          hcell091.setHorizontalAlignment(Element.ALIGN_RIGHT);
                          table141.addCell(hcell091);
                          
                          hcell091 = new PdfPCell(new Phrase("", headFont));
                          hcell091.setBorder(Rectangle.NO_BORDER);
                          hcell091.setHorizontalAlignment(Element.ALIGN_RIGHT);
                          table141.addCell(hcell091);
                          
                          hcell091 = new PdfPCell(new Phrase("", headFont));
                          hcell091.setBorder(Rectangle.NO_BORDER);
                          hcell091.setHorizontalAlignment(Element.ALIGN_RIGHT);
                          table141.addCell(hcell091);
                          
                          hcell091 = new PdfPCell(new Phrase("", headFont));
                          hcell091.setBorder(Rectangle.NO_BORDER);
                          hcell091.setHorizontalAlignment(Element.ALIGN_RIGHT);
                          table141.addCell(hcell091);
                          
                          hcell091 = new PdfPCell(new Phrase("", headFont));
                          hcell091.setBorder(Rectangle.NO_BORDER);
                          hcell091.setHorizontalAlignment(Element.ALIGN_RIGHT);
                          table141.addCell(hcell091);
                          
                          hcell091 = new PdfPCell(new Phrase("", headFont));
                          hcell091.setBorder(Rectangle.NO_BORDER);
                          hcell091.setHorizontalAlignment(Element.ALIGN_RIGHT);
                          table141.addCell(hcell091);
                          
                          hcell091 = new PdfPCell(new Phrase("", headFont));
                          hcell091.setBorder(Rectangle.NO_BORDER);
                          hcell091.setHorizontalAlignment(Element.ALIGN_RIGHT);
                          table141.addCell(hcell091);
                          
                          hcell091 = new PdfPCell(new Phrase("", headFont));
                          hcell091.setBorder(Rectangle.NO_BORDER);
                          hcell091.setHorizontalAlignment(Element.ALIGN_RIGHT);
                          table141.addCell(hcell091);
                          
                          hcell091 = new PdfPCell(new Phrase("", headFont));
                          hcell091.setBorder(Rectangle.NO_BORDER);
                          hcell091.setHorizontalAlignment(Element.ALIGN_RIGHT);
                          table141.addCell(hcell091);
                          
                         
                              
                          
                          String lRegId=null;
                          String lUmr=null;
                          String lPatientName=null;
                          String lConsultant=null;
                     
                                      
                          List<Map<String, String>> showl = new ArrayList<>();
                          List<String> infol = new ArrayList<>();
                          List<String> info2 = new ArrayList<>();
                          Map<String, String> displayInfol = null; 
                          
    float totalLabFeeAmt2 = 0;
    float totalLabCashAmt2 = 0;
    float totalLabCardAmt2 = 0;
    float totalLabChqAmt2 = 0;
    float totalLabDueAmt2 = 0;
    float totalLabRecAmt1 = 0;
    float totalLabAdvAmt = 0;
    float totalLabFeeAmt1 = 0;
    float totalLabCashAmt1 = 0;
    float totalLabCardAmt1 = 0;
    float totalLabChqAmt1 = 0;
    float totalLabDueAmt1 = 0;
    float totalLabRecAmt2 = 0;
    float totalLabAdvAmt1 = 0;
    float labCashPlusCardAmt = 0;
    float labCashPlusCardAmt1=0;
    float labCashPlusCardAdvAmt=0;
    float labTotalCashPlusCardAmt = 0;
    float labTotalCashPlusCardAmt1 = 0;
    float labFee = 0;
    float labAdvFee = 0;
    float labCashAmt1 = 0;
    float labAdvCashAmt1 = 0;
    float labChqAmt1 = 0;
    float labAdvChqAmt1 = 0;
    float labCardAmt1 = 0;
    float labAdvCardAmt1 = 0;
    float labAdvAmt = 0;
    float labDueAmt2 = 0;
    float labRecpAmt2 = 0;
    float labDueAmt1 = 0;
    float labRecpAmt1 = 0;
    
    float labAdvDueAmt2 = 0;
    float labAdvRecpAmt2 = 0;
    float labAdvDueAmt1 = 0;
    float labAdvRecpAmt1 = 0;
    float labFees = 0;
    float labCashAmt2 = 0;
    float labChqAmt2 = 0;
    float labCardAmt2 = 0;
    float labAdvAmt1 = 0;
        
              
                     
                              List<LaboratoryRegistration> labDetails=laboratoryRegistrationRepository.findUserWiseIpOpDetailedCheck(user.get("fromDate"),user.get("toDate"),uId);
                          Logger.error(String.valueOf(labDetails.size()));
                              
                              //Set<PatientPayment> patientPayments = pReg.getPatientPayment();
                            //  Set<PatientPayment> patientPayments = paymentRepository.findByPatientRegistration(pReg);
                              
                              if(!labDetails.isEmpty())
                              {
                                          for(LaboratoryRegistration lab : labDetails)
                                              {
                                        	  
                                        		  System.out.println(lab.getEnteredDate());
                                              PatientRegistration pReg=lab.getLaboratoryPatientRegistration();
                                              lRegId=pReg.getRegId();
                                              
                                                  displayInfol = new HashMap<>(); 
                                                  
                                  
                                                  lUmr=pReg.getPatientDetails().getUmr();
                                                  if(pReg.getPatientDetails().getMiddleName()!=null)
                                                  {
                                                      lPatientName=pReg.getPatientDetails().getFirstName()+" "+pReg.getPatientDetails().getMiddleName()+" "+pReg.getPatientDetails().getLastName();
                                                  }
                                                  else
                                                  {
                                                      lPatientName=pReg.getPatientDetails().getFirstName()+" "+pReg.getPatientDetails().getLastName();    
                                                  }
                                                  lConsultant=pReg.getPatientDetails().getConsultant();
                              
                                  
                                                  if (!infol.contains(lRegId) && lab.getLabServices().getServiceType().equalsIgnoreCase("Lab")) 
                                                  {    
                                                	  System.out.println("lRegId-------------"+lRegId);
                                                 List<LaboratoryRegistration> labDetail=laboratoryRegistrationRepository.particularPatientRecordScroll(user.get("fromDate"),user.get("toDate"),uId,lRegId);
                                               
                                                  
                                                  for(LaboratoryRegistration labs:labDetail)
                                                  {        
                                                      //lRegId=labs.getReg_id();
                                                          
                                                                      
                                                          if(labs.getNetAmount()!=0 && labs.getLabServices().getServiceType().equalsIgnoreCase("Lab"))
                                                          {
                                      
                                                              if(labs.getPaymentType().equalsIgnoreCase("CASH"))
                                                              {
                                                                  labFee=labs.getNetAmount();
                                                                  labAdvAmt=0;
                                                                  labCashAmt1=labs.getNetAmount();
                                                                  labChqAmt1=0;
                                                                  labCardAmt1=0;
                                                                  labCashPlusCardAmt=0;
                                                                  totalLabFeeAmt1+=labFee;
                                                                  totalLabCashAmt1+=labCashAmt1;
                                                                  labRecpAmt1=labs.getNetAmount();
                                                                  labDueAmt1 =0;
                                                                  totalLabDueAmt1+=labDueAmt1;
                                                                  totalLabRecAmt1+=labRecpAmt1;
                                                              }
                                                              
                                                              else if(labs.getPaymentType().equalsIgnoreCase("CHQ") || labs.getPaymentType().equalsIgnoreCase("CHEQUE"))
                                                              {
                                                          
                                                                   labFee=lab.getNetAmount();
                                                                   labAdvAmt=0;
                                                                   labCashAmt1=0;
                                                                   labChqAmt1=lab.getNetAmount();
                                                                   labCardAmt1=0;
                                                                   totalLabFeeAmt1+=labFee;
                                                                   totalLabChqAmt1+=labChqAmt1;
                                                                   labRecpAmt1=lab.getNetAmount();
                                                                   labDueAmt1 =0;
                                                                   totalLabDueAmt1+=labDueAmt1;
                                                                   totalLabRecAmt1+=labRecpAmt1;
                                                              }
                                                              else if(labs.getPaymentType().equalsIgnoreCase("DEBIT CARD") || labs.getPaymentType().equalsIgnoreCase("CREDIT CARD") || labs.getPaymentType().equalsIgnoreCase("CARD"))
                                                              {
                                                                  
                                                                   labFee=labs.getNetAmount();
                                                                   labAdvAmt=0;
                                                                   labCashAmt1=0;
                                                                   labChqAmt1=0;
                                                                   labCardAmt1=labs.getNetAmount();
                                                                   totalLabFeeAmt1+=labFee;
                                                                   totalLabCardAmt1+=labCardAmt1;
                                                                   labRecpAmt1=labs.getNetAmount();
                                                                   labDueAmt1 =0;
                                                                   totalLabDueAmt1+=labDueAmt1;
                                                                   totalLabRecAmt1+=labRecpAmt1;
                                                                      
                                                              
                                                              }
                                                              else if(labs.getPaymentType().equalsIgnoreCase("ADVANCE"))
                                                              {
                                                                  
                                                                  
                                                                   labAdvFee=0;
                                                                   labAdvAmt=labs.getNetAmount();
                                                                   labAdvCashAmt1=0;
                                                                   labAdvChqAmt1=0;
                                                                   labAdvCardAmt1=0;
                                                                   totalLabFeeAmt1+=labAdvFee;
                                                                   totalLabAdvAmt+=labAdvAmt;
                                                              
                                                                   labAdvRecpAmt1=0;  
                                                                   labAdvDueAmt1 =0;
                                                                   totalLabDueAmt1+=labAdvDueAmt1;
                                                                   totalLabRecAmt1+=labAdvRecpAmt1;
                                                                  
                                                              }  else if(labs.getPaymentType().equalsIgnoreCase("DUE"))
                                                              {
                                                                  
                                                                  
                                                                       labFee=0;
                                                                       labAdvAmt=0;
                                                                       labCashAmt1=0;
                                                                       labChqAmt1=0;
                                                                       labCardAmt1=0;
                                                                       totalLabFeeAmt1+=labFee;
                                                                       totalLabAdvAmt+=labAdvAmt;
                                                                       labRecpAmt1=0;
                                                                       labDueAmt1 =labs.getNetAmount();
                                                                       totalLabDueAmt1+=labDueAmt1;
                                                                       totalLabRecAmt1+=labRecpAmt1;
                                                                      
                                                              }
                                                              else if(labs.getPaymentType().equalsIgnoreCase("Cash+Card"))
                                                              {
                                                                  
                                                                  
                                                                       labFee=labs.getNetAmount();
                                                                       labAdvAmt=0;
                                                                       labCashAmt1=0;
                                                                       labChqAmt1=0;
                                                                       labCardAmt1=0;
                                                                       labCashPlusCardAmt=labs.getNetAmount();
                                                                       labTotalCashPlusCardAmt+=labCashPlusCardAmt;
                                                                       totalLabFeeAmt1+=labFee;
                                                                       totalLabAdvAmt+=labAdvAmt;
                                                                       labRecpAmt1=labs.getNetAmount();
                                                                       labDueAmt1 =0;
                                                                       totalLabDueAmt1+=labDueAmt1;
                                                                       totalLabRecAmt1+=labRecpAmt1;
                                                                      
                                                                  }
                                                                      if(labs.getPaymentType().equalsIgnoreCase("Advance"))
                                                                      {
                                                                          labFees += labAdvFee;
                                                                            labCashAmt2 += labAdvCashAmt1;
                                                                            labCardAmt2 += labAdvCardAmt1;
                                                                            labChqAmt2 += labAdvChqAmt1;
                                                                            labAdvAmt1 += labAdvAmt;
                                                                            labRecpAmt2 += labAdvRecpAmt1;
                                                                            labDueAmt2 += labAdvDueAmt1;
                                                                            labCashPlusCardAmt1+=labCashPlusCardAdvAmt;
                                                                      }
                                                                      else
                                                                      {
                                                                          labFees += labFee;
                                                                            labCashAmt2 += labCashAmt1;
                                                                            labCardAmt2 += labCardAmt1;
                                                                            labChqAmt2 += labChqAmt1;
                                                                            labAdvAmt1 += labAdvAmt;
                                                                            labRecpAmt2 += labRecpAmt1;
                                                                            labDueAmt2 += labDueAmt1;
                                                                            labCashPlusCardAmt1+=labCashPlusCardAmt;
                                                                      }
                                                                                          
                                        
                                                              }
                                                          
                                                      }
                                                  if(labAdvAmt!=0)
                                                  {
                                                      displayInfol.put("labAdvFee", String.valueOf(labFees));
                                                      displayInfol.put("labAdvAmt", String.valueOf(labAdvAmt1));
                                                      displayInfol.put("labAdvCashAmt1", String.valueOf(labCashAmt2));
                                                      displayInfol.put("labAdvCardAmt1", String.valueOf(labCardAmt2));
                                                      displayInfol.put("labAdvChqAmt1", String.valueOf(labChqAmt2));  
                                                      displayInfol.put("labAdvRecpAmt1", String.valueOf(labRecpAmt2));
                                                      displayInfol.put("labAdvDueAmt1", String.valueOf(labDueAmt2));
                                                      displayInfol.put("labCashPlusCardAdvAmt1", String.valueOf(labCashPlusCardAmt1));
                                                  }
                                                  else
                                                  {
                                                      displayInfol.put("labFee", String.valueOf(labFees));
                                                      displayInfol.put("labAdvAmt", String.valueOf(labAdvAmt1));
                                                      displayInfol.put("labCashAmt1", String.valueOf(labCashAmt2));
                                                      displayInfol.put("labCardAmt1", String.valueOf(labCardAmt2));
                                                      displayInfol.put("labChqAmt1", String.valueOf(labChqAmt2));  
                                                      displayInfol.put("labRecpAmt1", String.valueOf(labRecpAmt2));
                                                      displayInfol.put("labDueAmt1", String.valueOf(labDueAmt2));
                                                      displayInfol.put("labCashPlusCardAmt1", String.valueOf(labCashPlusCardAmt1));
                                                     
                                                  }
                                                      
                                                      displayInfol.put("lUmr", lUmr);
                                                     displayInfol.put("lPatientName", lPatientName);
                                                     displayInfol.put("lRegId", lRegId);
                                                     displayInfol.put("lConsultant", lConsultant);
                                                      showl.add(displayInfol);
                                                  }
                                                  
                                                
                                              
                                                
                                                                      labFees = 0;
                                                                    labCashAmt2 = 0;
                                                                    labCardAmt2 = 0;
                                                                    labChqAmt2 = 0;
                                                                    labAdvAmt1 = 0;
                                                                    labRecpAmt2 = 0;
                                                                    labDueAmt2 = 0;
                                                                    labCashPlusCardAmt1=0;
                                            infol.add(lRegId);
                                         
                                   
                                        
                              
                                        	  }
                                         
                              totalLabFeeAmt2+=totalLabFeeAmt1;
                              totalLabCashAmt2+=totalLabCashAmt1;
                              totalLabCardAmt2+=totalLabCardAmt1;
                              totalLabChqAmt2+=totalLabChqAmt1;
                              totalLabDueAmt2+=totalLabDueAmt1;
                              totalLabRecAmt2+=totalLabRecAmt1;
                              totalLabAdvAmt1+=totalLabAdvAmt;
                              labTotalCashPlusCardAmt1+=labTotalCashPlusCardAmt;
                              
                                    
                                          PdfPCell cell111;
                          
                                          for (Map<String, String> show1 : showl) {
                                          cell111 = new PdfPCell(new Phrase(String.valueOf( show1.get("lUmr")), redFont));
                                          cell111.setBorder(Rectangle.NO_BORDER);
                                          cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                                          table141.addCell(cell111);
                          
                                          cell111 = new PdfPCell(new Phrase(String.valueOf( show1.get("lPatientName")), redFont));
                                          cell111.setBorder(Rectangle.NO_BORDER);
                                          cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                                          //cell111.setPaddingLeft(-30f);
                                          table141.addCell(cell111);
                          
                                          cell111 = new PdfPCell(new Phrase(String.valueOf( show1.get("lRegId")), redFont));
                                          cell111.setBorder(Rectangle.NO_BORDER);
                                          cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                                          //cell111.setPaddingLeft(-30f);
                                          table141.addCell(cell111);
                          
                                          cell111 = new PdfPCell(new Phrase(String.valueOf( show1.get("lConsultant")), redFont));
                                          cell111.setBorder(Rectangle.NO_BORDER);
                                          cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                                          //cell111.setPaddingLeft(-20f);
                                          table141.addCell(cell111);
                          
                                          cell111 = new PdfPCell(new Phrase(String.valueOf( show1.get("labFee")), redFont));
                                          cell111.setBorder(Rectangle.NO_BORDER);
                                          cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                          //cell111.setPaddingRight(35f);
                                          table141.addCell(cell111);
                                      
                                          cell111 = new PdfPCell(new Phrase("0", redFont));
                                          cell111.setBorder(Rectangle.NO_BORDER);
                                          cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                          //cell111.setPaddingRight(20f);
                                          table141.addCell(cell111);
                          
                                          cell111 = new PdfPCell(new Phrase(String.valueOf( show1.get("labFee")), redFont));
                                          cell111.setBorder(Rectangle.NO_BORDER);
                                          cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                          //cell111.setPaddingRight(15f);
                                          table141.addCell(cell111);
                                      
                                          cell111 = new PdfPCell(new Phrase(String.valueOf( show1.get("labAdvAmt")), redFont));
                                          cell111.setBorder(Rectangle.NO_BORDER);
                                          cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                          //cell111.setPaddingRight(12f);
                                          table141.addCell(cell111);
                          
                                          cell111 = new PdfPCell(new Phrase(String.valueOf( show1.get("labRecpAmt1")), redFont));
                                          cell111.setBorder(Rectangle.NO_BORDER);
                                          cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                          //cell111.setPaddingRight(10f);
                                          table141.addCell(cell111);
                                      
                                          cell111 = new PdfPCell(new Phrase(String.valueOf( show1.get("labCashAmt1")), redFont));
                                          cell111.setBorder(Rectangle.NO_BORDER);
                                          cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                          //cell111.setPaddingRight(10f);
                                          table141.addCell(cell111);
                          
                                          cell111 = new PdfPCell(new Phrase(String.valueOf( show1.get("labChqAmt1")), redFont));
                                          cell111.setBorder(Rectangle.NO_BORDER);
                                          cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                          table141.addCell(cell111);
                                      
                                          cell111 = new PdfPCell(new Phrase(String.valueOf( show1.get("labCardAmt1")), redFont));
                                          cell111.setBorder(Rectangle.NO_BORDER);
                                          cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                          table141.addCell(cell111);
                                          
                                          cell111 = new PdfPCell(new Phrase(String.valueOf( show1.get("labCashPlusCardAmt1")), redFont));
                                          cell111.setBorder(Rectangle.NO_BORDER);
                                          cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                          table141.addCell(cell111);
                          
                                          cell111 = new PdfPCell(new Phrase(String.valueOf( show1.get("labDueAmt1")), redFont));
                                          cell111.setBorder(Rectangle.NO_BORDER);
                                          cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                          table141.addCell(cell111);
                                  }
                                              
                              }
                              
    
                              else {
                                  PdfPCell cell111;
                                  
                                  cell111 = new PdfPCell(new Phrase("", redFont));
                                  cell111.setBorder(Rectangle.NO_BORDER);
                                  cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                                  table141.addCell(cell111);
                  
                                  cell111 = new PdfPCell(new Phrase("", redFont));
                                  cell111.setBorder(Rectangle.NO_BORDER);
                                  cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                                  //cell111.setPaddingLeft(-30f);
                                  table141.addCell(cell111);
                  
                                  cell111 = new PdfPCell(new Phrase("", redFont));
                                  cell111.setBorder(Rectangle.NO_BORDER);
                                  cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                                  //cell111.setPaddingLeft(-30f);
                                  table141.addCell(cell111);
                  
                                  cell111 = new PdfPCell(new Phrase("", redFont));
                                  cell111.setBorder(Rectangle.NO_BORDER);
                                  cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                                  //cell111.setPaddingLeft(-20f);
                                  table141.addCell(cell111);
                  
                                  cell111 = new PdfPCell(new Phrase(String.valueOf(0), redFont));
                                  cell111.setBorder(Rectangle.NO_BORDER);
                                  cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                  //cell111.setPaddingRight(35f);
                                  table141.addCell(cell111);
                              
                                  cell111 = new PdfPCell(new Phrase("0", redFont));
                                  cell111.setBorder(Rectangle.NO_BORDER);
                                  cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                  //cell111.setPaddingRight(20f);
                                  table141.addCell(cell111);
                  
                                  cell111 = new PdfPCell(new Phrase(String.valueOf(0), redFont));
                                  cell111.setBorder(Rectangle.NO_BORDER);
                                  cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                  //cell111.setPaddingRight(15f);
                                  table141.addCell(cell111);
                              
                                  cell111 = new PdfPCell(new Phrase(String.valueOf(0), redFont));
                                  cell111.setBorder(Rectangle.NO_BORDER);
                                  cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                  //cell111.setPaddingRight(12f);
                                  table141.addCell(cell111);
                  
                                  cell111 = new PdfPCell(new Phrase(String.valueOf(0), redFont));
                                  cell111.setBorder(Rectangle.NO_BORDER);
                                  cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                  //cell111.setPaddingRight(10f);
                                  table141.addCell(cell111);
                              
                                  cell111 = new PdfPCell(new Phrase(String.valueOf(0), redFont));
                                  cell111.setBorder(Rectangle.NO_BORDER);
                                  cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                  //cell111.setPaddingRight(10f);
                                  table141.addCell(cell111);
                  
                                  cell111 = new PdfPCell(new Phrase(String.valueOf(0), redFont));
                                  cell111.setBorder(Rectangle.NO_BORDER);
                                  cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                  table141.addCell(cell111);
                              
                                  cell111 = new PdfPCell(new Phrase(String.valueOf(0), redFont));
                                  cell111.setBorder(Rectangle.NO_BORDER);
                                  cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                  table141.addCell(cell111);
                  
                                  cell111 = new PdfPCell(new Phrase(String.valueOf(0), redFont));
                                  cell111.setBorder(Rectangle.NO_BORDER);
                                  cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                                  table141.addCell(cell111);
                                  
                      
                              }
                           cell1.addElement(table141);
                          
                              PdfPTable table98 = new PdfPTable(14);
                              table98.setWidths(new float[] {4f, 6f, 4f, 6f, 4f, 2f, 3f, 3f, 3f, 3f, 3f, 3f,4f,3f});
                              table98.setSpacingBefore(10);
                              table98.setWidthPercentage(100f);
                              
                              PdfPCell cell54;
                  
                              cell54 = new PdfPCell(new Phrase("", redFont));
                              cell54.setBorder(Rectangle.NO_BORDER);
                              cell54.setHorizontalAlignment(Element.ALIGN_LEFT);
                              table98.addCell(cell54);
                  
                              cell54 = new PdfPCell(new Phrase("", redFont));
                              cell54.setBorder(Rectangle.NO_BORDER);
                              cell54.setHorizontalAlignment(Element.ALIGN_LEFT);
                              //cell01.setPaddingLeft(-30f);
                              table98.addCell(cell54);
                  
                              cell54 = new PdfPCell(new Phrase("", redFont));
                              cell54.setBorder(Rectangle.NO_BORDER);
                              cell54.setHorizontalAlignment(Element.ALIGN_LEFT);
                              //cell01.setPaddingLeft(-30f);
                              table98.addCell(cell54);
                  
                              cell54 = new PdfPCell(new Phrase("", redFont));
                              cell54.setBorder(Rectangle.NO_BORDER);
                              cell54.setHorizontalAlignment(Element.ALIGN_LEFT);
                              //cell01.setPaddingLeft(-30f);
                              table98.addCell(cell54);
                  
                              cell54 = new PdfPCell(new Phrase(String.valueOf(totalLabFeeAmt2), redFont));
                              cell54.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                              cell54.setPaddingTop(5f);
                              cell54.setPaddingBottom(5f);
                              cell54.setHorizontalAlignment(Element.ALIGN_RIGHT);
                              //cell01.setPaddingRight(10f);
                              table98.addCell(cell54);
                          
                              cell54 = new PdfPCell(new Phrase("0", redFont));
                              cell54.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                              cell54.setPaddingTop(5f);
                              cell54.setPaddingBottom(5f);
                              cell54.setHorizontalAlignment(Element.ALIGN_RIGHT);
                              //cell01.setPaddingRight(-15f);
                              table98.addCell(cell54);
                  
                              cell54 = new PdfPCell(new Phrase(String.valueOf(totalLabFeeAmt2), redFont));
                              cell54.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                              cell54.setPaddingTop(5f);
                              cell54.setPaddingBottom(5f);
                              cell54.setHorizontalAlignment(Element.ALIGN_RIGHT);
                              //cell01.setPaddingRight(-20f);
                              table98.addCell(cell54);
                          
                              cell54 = new PdfPCell(new Phrase(String.valueOf(totalLabAdvAmt1), redFont));
                              cell54.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                              cell54.setPaddingTop(5f);
                              cell54.setPaddingBottom(5f);
                              cell54.setHorizontalAlignment(Element.ALIGN_RIGHT);
                              //cell01.setPaddingRight(-10f);
                              table98.addCell(cell54);
                  
                              cell54 = new PdfPCell(new Phrase(String.valueOf(totalLabRecAmt2), redFont));
                              cell54.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                              cell54.setPaddingTop(5f);
                              cell54.setPaddingBottom(5f);
                              cell54.setHorizontalAlignment(Element.ALIGN_RIGHT);
                              //cell01.setPaddingRight(-17f);
                              table98.addCell(cell54);
                          
                              cell54 = new PdfPCell(new Phrase(String.valueOf(totalLabCashAmt2), redFont));
                              cell54.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                              cell54.setPaddingTop(5f);
                              cell54.setPaddingBottom(5f);
                              cell54.setHorizontalAlignment(Element.ALIGN_RIGHT);
                              //cell01.setPaddingRight(-13f);
                              table98.addCell(cell54);
                  
                              cell54 = new PdfPCell(new Phrase(String.valueOf(totalLabChqAmt2), redFont));
                              cell54.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                              cell54.setPaddingTop(5f);
                              cell54.setPaddingBottom(5f);
                              cell54.setHorizontalAlignment(Element.ALIGN_RIGHT);
                              //cell01.setPaddingRight(-7f);
                              table98.addCell(cell54);
                          
                              cell54 = new PdfPCell(new Phrase(String.valueOf(totalLabCardAmt2), redFont));
                              cell54.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                              cell54.setPaddingTop(5f);
                              cell54.setPaddingBottom(5f);
                              cell54.setHorizontalAlignment(Element.ALIGN_RIGHT);
                              //cell01.setPaddingRight(-3f);
                              table98.addCell(cell54);
                              
                             
                              cell54 = new PdfPCell(new Phrase(String.valueOf(labTotalCashPlusCardAmt1), redFont));
                              cell54.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                              cell54.setPaddingTop(5f);
                              cell54.setPaddingBottom(5f);
                              cell54.setHorizontalAlignment(Element.ALIGN_RIGHT);
                              //cell01.setPaddingRight(-3f);
                              table98.addCell(cell54);
                  
                              cell54 = new PdfPCell(new Phrase(String.valueOf(totalLabDueAmt2), redFont));
                              cell54.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                              cell54.setPaddingTop(5f);
                              cell54.setPaddingBottom(5f);
                              cell54.setHorizontalAlignment(Element.ALIGN_RIGHT);
                              table98.addCell(cell54);
                  
                              cell1.addElement(table98);
                  
                          
           
            
            
//--------------------------------- VOUCHERS PAYMENT -------------------------------------------------        
            
            PdfPTable table05 = new PdfPTable(1);
            table05.setWidths(new float[] { 8f});
            table05.setSpacingBefore(10);
            table05.setWidthPercentage(100f);
           
            PdfPCell hcell101;
    
            hcell101 = new PdfPCell(new Phrase("VOUCHER PAYMENTS", headFont));
            hcell101.setBorder(Rectangle.NO_BORDER);
            hcell101.setHorizontalAlignment(Element.ALIGN_LEFT);
            hcell101.setPaddingBottom(-10f);
            table05.addCell(hcell101);
            cell1.addElement(table05);
            
            PdfPTable table15 = new PdfPTable(14);
            table15.setWidths(new float[] { 4f, 6f, 4f, 6f, 4f, 2f, 3f, 3f, 3f, 3f, 3f, 3f,4f,3f });
            table15.setSpacingBefore(10);
            table15.setWidthPercentage(100f);
            PdfPCell hcell10;
    
            hcell10 = new PdfPCell(new Phrase("", headFont));
            hcell10.setBorder(Rectangle.NO_BORDER);
            hcell10.setHorizontalAlignment(Element.ALIGN_LEFT);
            table15.addCell(hcell10);
            
            hcell10 = new PdfPCell(new Phrase("", headFont));
            hcell10.setBorder(Rectangle.NO_BORDER);
            hcell10.setHorizontalAlignment(Element.ALIGN_LEFT);
            table15.addCell(hcell10);
            
            hcell10 = new PdfPCell(new Phrase("", headFont));
            hcell10.setBorder(Rectangle.NO_BORDER);
            hcell10.setHorizontalAlignment(Element.ALIGN_LEFT);
            table15.addCell(hcell10);
            
            hcell10 = new PdfPCell(new Phrase("", headFont));
            hcell10.setBorder(Rectangle.NO_BORDER);
            hcell10.setHorizontalAlignment(Element.ALIGN_LEFT);
            table15.addCell(hcell10);
            
            hcell10 = new PdfPCell(new Phrase("", headFont));
            hcell10.setBorder(Rectangle.NO_BORDER);
            hcell10.setHorizontalAlignment(Element.ALIGN_LEFT);
            //hcell10.setPaddingRight(20f);
            table15.addCell(hcell10);
            
            hcell10 = new PdfPCell(new Phrase("", headFont));
            hcell10.setBorder(Rectangle.NO_BORDER);
            hcell10.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table15.addCell(hcell10);
            
            hcell10 = new PdfPCell(new Phrase("", headFont));
            hcell10.setBorder(Rectangle.NO_BORDER);
            hcell10.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table15.addCell(hcell10);
            
            hcell10 = new PdfPCell(new Phrase("", headFont));
            hcell10.setBorder(Rectangle.NO_BORDER);
            hcell10.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table15.addCell(hcell10);
            
            hcell10 = new PdfPCell(new Phrase("", headFont));
            hcell10.setBorder(Rectangle.NO_BORDER);
            hcell10.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table15.addCell(hcell10);
            
            hcell10 = new PdfPCell(new Phrase("", headFont));
            hcell10.setBorder(Rectangle.NO_BORDER);
            hcell10.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table15.addCell(hcell10);
            
            hcell10 = new PdfPCell(new Phrase("", headFont));
            hcell10.setBorder(Rectangle.NO_BORDER);
            hcell10.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table15.addCell(hcell10);
            
            hcell10 = new PdfPCell(new Phrase("", headFont));
            hcell10.setBorder(Rectangle.NO_BORDER);
            hcell10.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table15.addCell(hcell10);
            
            hcell10 = new PdfPCell(new Phrase("", headFont));
            hcell10.setBorder(Rectangle.NO_BORDER);
            hcell10.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table15.addCell(hcell10);
            
            hcell10 = new PdfPCell(new Phrase("", headFont));
            hcell10.setBorder(Rectangle.NO_BORDER);
            hcell10.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table15.addCell(hcell10);
            
            long vAmt = 0;
            long vCashAmt = 0;
            long vChqAmt = 0;
            long vCardAmt = 0;
            float totalVAmt = 0;
            float totalVCashAmt = 0;
            float totalVCardAmt = 0;
            float totalVChqAmt = 0;
            float totalVDueAmt = 0;
            long vDueAmt=0;
            long vRecpAmt=0;
            float totalVRecpAmt =0;
            String vNo=null;
            String vUserId=null;
            float vCashPlusCardAmt=0;
            float vTotalCashPlusCardAmt=0;
            
            List<Voucher> voucher = (List<Voucher>) voucherRepository.findUserWiseIpOpDetailed(user.get("fromDate"), user.get("toDate"),uId);
           
            
          /*  for(Voucher p:voucher)
            {
                //Set<PatientPayment> patientPayments = paymentRepository.findByPatientRegistration(p);
                
                voucherAmt
            }
            
            if(patientType.equalsIgnoreCase("OUTPATIENT") && !(typeOfCharge.equalsIgnoreCase("Doctor Fee")||typeOfCharge.equalsIgnoreCase("Reg Fees")))
            {*/
            
         if(!voucher.isEmpty())
         {
            for(Voucher v : voucher)
            {
                if(v.getPaymentType().equalsIgnoreCase("CASH"))
                {
                    vAmt = v.getVoucherAmount();
                    vCashAmt = v.getVoucherAmount();
                    vChqAmt = 0;
                    vCardAmt = 0;
                    vRecpAmt = v.getVoucherAmount();
                    vDueAmt = vRecpAmt-vCashAmt;
                    totalVCashAmt+=vCashAmt;
                    totalVAmt+=vAmt;
                    totalVDueAmt+=vDueAmt;
                    totalVRecpAmt+=vRecpAmt;
                    
                }
                else if(v.getPaymentType().equalsIgnoreCase("CHQ")||v.getPaymentType().equalsIgnoreCase("Cheque"))
                {
                    vAmt = v.getVoucherAmount();
                    vChqAmt = v.getVoucherAmount();
                    vCashAmt = 0;
                    vCardAmt = 0;
                    vRecpAmt = v.getVoucherAmount();
                    vDueAmt = vRecpAmt-vChqAmt;
                    totalVChqAmt+=vChqAmt;
                    totalVAmt+=vAmt;
                    totalVDueAmt+=vDueAmt;
                    totalVRecpAmt+=vRecpAmt;
                    
                }
                else if(v.getPaymentType().equalsIgnoreCase("DEBIT CARD") || v.getPaymentType().equalsIgnoreCase("CREDIT CARD") || v.getPaymentType().equalsIgnoreCase("CARD"))
                {
                    vAmt = v.getVoucherAmount();
                    vCardAmt = v.getVoucherAmount();
                    vCashAmt = 0;
                    vChqAmt = 0;
                    vRecpAmt = v.getVoucherAmount();
                    vDueAmt = vRecpAmt-vCardAmt;
                    totalVCardAmt+=vCardAmt;
                    totalVAmt+=vAmt;
                    totalVDueAmt+=vDueAmt;
                    totalVRecpAmt+=vRecpAmt;
                    
                }
                else if(v.getPaymentType().equalsIgnoreCase("DUE"))
                {
                    vAmt = 0;
                    vCashAmt =0;
                    vChqAmt = 0;
                    vCardAmt = 0;
                    vRecpAmt =0;
                    vDueAmt = v.getVoucherAmount();
                    totalVCashAmt+=vCashAmt;
                    totalVAmt+=vAmt;
                    totalVDueAmt+=vDueAmt;
                    totalVRecpAmt+=vRecpAmt;
                    
                }
                else if(v.getPaymentType().equalsIgnoreCase("Cash+Card"))
                {
                    vAmt = v.getVoucherAmount();
                    vCashAmt =0;
                    vChqAmt = 0;
                    vCardAmt = 0;
                    vRecpAmt =vAmt;
                    vDueAmt = 0;
                    vCashPlusCardAmt=v.getVoucherAmount();
                    vTotalCashPlusCardAmt=vCashPlusCardAmt;
                    totalVCashAmt+=vCashAmt;
                    totalVAmt+=vAmt;
                    totalVDueAmt+=vDueAmt;
                    totalVRecpAmt+=vRecpAmt;
                    
                }
                
                            PdfPCell cell111;
            
                            cell111 = new PdfPCell(new Phrase("", redFont1));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                            table15.addCell(cell111);
            
                            cell111 = new PdfPCell(new Phrase("", redFont1));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                            //cell111.setPaddingLeft(-30f);
                            table15.addCell(cell111);
            
                            cell111 = new PdfPCell(new Phrase(v.getPaymentNo(), redFont1));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                            //cell111.setPaddingLeft(-30f);
                            table15.addCell(cell111);
            
                            cell111 = new PdfPCell(new Phrase("", redFont));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                            //cell111.setPaddingLeft(-20f);
                            table15.addCell(cell111);
            
                            cell111 = new PdfPCell(new Phrase("-"+String.valueOf(vAmt), redFont1));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                            //cell111.setPaddingRight(35f);
                            table15.addCell(cell111);
                        
                            cell111 = new PdfPCell(new Phrase("0", redFont));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                            //cell111.setPaddingRight(20f);
                            table15.addCell(cell111);
            
                            cell111 = new PdfPCell(new Phrase("-"+String.valueOf(vAmt), redFont1));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                            //cell111.setPaddingRight(15f);
                            table15.addCell(cell111);
                        
                            cell111 = new PdfPCell(new Phrase("0", redFont));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                            //cell111.setPaddingRight(12f);
                            table15.addCell(cell111);
            
                            cell111 = new PdfPCell(new Phrase("-"+String.valueOf(vRecpAmt), redFont1));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                            //cell111.setPaddingRight(10f);
                            table15.addCell(cell111);
                        
                            cell111 = new PdfPCell(new Phrase("-"+String.valueOf(vCashAmt), redFont1));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                            //cell111.setPaddingRight(10f);
                            table15.addCell(cell111);
            
                            cell111 = new PdfPCell(new Phrase("-"+String.valueOf(vChqAmt), redFont1));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                            table15.addCell(cell111);
                        
                            cell111 = new PdfPCell(new Phrase("-"+String.valueOf(vCardAmt), redFont1));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                            table15.addCell(cell111);
                            
                            cell111 = new PdfPCell(new Phrase("-"+String.valueOf(vCashPlusCardAmt), redFont1));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                            table15.addCell(cell111);
            
                            cell111 = new PdfPCell(new Phrase("-"+String.valueOf(vDueAmt), redFont1));
                            cell111.setBorder(Rectangle.NO_BORDER);
                            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                            table15.addCell(cell111);
                            
                        
                    }
                        vCashPlusCardAmt=0;
            }else
            {
                 PdfPCell cell111;
                 
                 cell111 = new PdfPCell(new Phrase("", redFont1));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                 table15.addCell(cell111);
 
                 cell111 = new PdfPCell(new Phrase("", redFont1));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                 //cell111.setPaddingLeft(-30f);
                 table15.addCell(cell111);
 
                 cell111 = new PdfPCell(new Phrase("", redFont1));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                 //cell111.setPaddingLeft(-30f);
                 table15.addCell(cell111);
 
                 cell111 = new PdfPCell(new Phrase("", redFont));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                 //cell111.setPaddingLeft(-20f);
                 table15.addCell(cell111);
 
                 cell111 = new PdfPCell(new Phrase("0", redFont1));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 //cell111.setPaddingRight(35f);
                 table15.addCell(cell111);
             
                 cell111 = new PdfPCell(new Phrase("0", redFont));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 //cell111.setPaddingRight(20f);
                 table15.addCell(cell111);
 
                 cell111 = new PdfPCell(new Phrase("0", redFont1));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 table15.addCell(cell111);
             
                 cell111 = new PdfPCell(new Phrase("0", redFont));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 //cell111.setPaddingRight(12f);
                 table15.addCell(cell111);
 
                 cell111 = new PdfPCell(new Phrase("0", redFont1));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 //cell111.setPaddingRight(10f);
                 table15.addCell(cell111);
             
                 cell111 = new PdfPCell(new Phrase("0", redFont1));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 //cell111.setPaddingRight(10f);
                 table15.addCell(cell111);
                 
                 cell111 = new PdfPCell(new Phrase("0", redFont1));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 table15.addCell(cell111);
             
                 cell111 = new PdfPCell(new Phrase("0", redFont1));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 table15.addCell(cell111);
                 
                 cell111 = new PdfPCell(new Phrase("0", redFont1));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 table15.addCell(cell111);
 
                 cell111 = new PdfPCell(new Phrase("0", redFont1));
                 cell111.setBorder(Rectangle.NO_BORDER);
                 cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 table15.addCell(cell111);
            }
                
            
                cell1.addElement(table15);
            
                PdfPTable table012 = new PdfPTable(14);
                table012.setWidths(new float[] {4f, 6f, 4f, 6f, 4f, 2f, 3f, 3f, 3f, 3f, 3f, 3f,4f,3f});
                table012.setSpacingBefore(10);
                table012.setWidthPercentage(100f);
                
                PdfPCell cell012;
    
                cell012 = new PdfPCell(new Phrase("", redFont));
                cell012.setBorder(Rectangle.NO_BORDER);
                cell012.setHorizontalAlignment(Element.ALIGN_LEFT);
                table012.addCell(cell012);
    
                cell012 = new PdfPCell(new Phrase("", redFont));
                cell012.setBorder(Rectangle.NO_BORDER);
                cell012.setHorizontalAlignment(Element.ALIGN_LEFT);
                //cell012.setPaddingLeft(-30f);
                table012.addCell(cell012);
    
                cell012 = new PdfPCell(new Phrase("", redFont));
                cell012.setBorder(Rectangle.NO_BORDER);
                cell012.setHorizontalAlignment(Element.ALIGN_LEFT);
                //cell012.setPaddingLeft(-30f);
                table012.addCell(cell012);
    
                cell012 = new PdfPCell(new Phrase("", redFont));
                cell012.setBorder(Rectangle.NO_BORDER);
                cell012.setHorizontalAlignment(Element.ALIGN_LEFT);
                //cell012.setPaddingLeft(-30f);
                table012.addCell(cell012);
    
                cell012 = new PdfPCell(new Phrase(String.valueOf(totalVAmt), redFont));
                cell012.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell012.setPaddingTop(5f);
                cell012.setPaddingBottom(5f);
                cell012.setHorizontalAlignment(Element.ALIGN_RIGHT);
                //cell012.setPaddingRight(10f);
                table012.addCell(cell012);
            
                cell012 = new PdfPCell(new Phrase("0", redFont));
                cell012.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell012.setPaddingTop(5f);
                cell012.setPaddingBottom(5f);
                cell012.setHorizontalAlignment(Element.ALIGN_RIGHT);
                //cell012.setPaddingRight(-15f);
                table012.addCell(cell012);
    
                cell012 = new PdfPCell(new Phrase(String.valueOf(totalVAmt), redFont));
                cell012.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell012.setPaddingTop(5f);
                cell012.setPaddingBottom(5f);
                cell012.setHorizontalAlignment(Element.ALIGN_RIGHT);
                //cell012.setPaddingRight(-20f);
                table012.addCell(cell012);
            
                cell012 = new PdfPCell(new Phrase("0", redFont));
                cell012.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell012.setPaddingTop(5f);
                cell012.setPaddingBottom(5f);
                cell012.setHorizontalAlignment(Element.ALIGN_RIGHT);
                //cell012.setPaddingRight(-10f);
                table012.addCell(cell012);
    
                cell012 = new PdfPCell(new Phrase(String.valueOf(totalVRecpAmt), redFont));
                cell012.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell012.setPaddingTop(5f);
                cell012.setPaddingBottom(5f);
                cell012.setHorizontalAlignment(Element.ALIGN_RIGHT);
                //cell012.setPaddingRight(-17f);
                table012.addCell(cell012);
            
                cell012 = new PdfPCell(new Phrase(String.valueOf(totalVCashAmt), redFont));
                cell012.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell012.setPaddingTop(5f);
                cell012.setPaddingBottom(5f);
                cell012.setHorizontalAlignment(Element.ALIGN_RIGHT);
                //cell012.setPaddingRight(-13f);
                table012.addCell(cell012);
    
                cell012 = new PdfPCell(new Phrase(String.valueOf(totalVChqAmt), redFont));
                cell012.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell012.setPaddingTop(5f);
                cell012.setPaddingBottom(5f);
                cell012.setHorizontalAlignment(Element.ALIGN_RIGHT);
                //cell012.setPaddingRight(-7f);
                table012.addCell(cell012);
            
                cell012 = new PdfPCell(new Phrase(String.valueOf(totalVCardAmt), redFont));
                cell012.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell012.setPaddingTop(5f);
                cell012.setPaddingBottom(5f);
                cell012.setHorizontalAlignment(Element.ALIGN_RIGHT);
                //cell012.setPaddingRight(-3f);
                table012.addCell(cell012);
                
                cell012 = new PdfPCell(new Phrase(String.valueOf(vTotalCashPlusCardAmt), redFont));
                cell012.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell012.setPaddingTop(5f);
                cell012.setPaddingBottom(5f);
                cell012.setHorizontalAlignment(Element.ALIGN_RIGHT);
                //cell012.setPaddingRight(-3f);
                table012.addCell(cell012);
    
                cell012 = new PdfPCell(new Phrase(String.valueOf(totalVDueAmt), redFont));
                cell012.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell012.setPaddingTop(5f);
                cell012.setPaddingBottom(5f);
                cell012.setHorizontalAlignment(Element.ALIGN_RIGHT);
                table012.addCell(cell012);
    
                cell1.addElement(table012);

				 float totalGAmt = ((totalFeeOspAmt1+totalFeeAmt1+totalFeeAmt+totalFeeAmtReg+totalIpRecAmt2+totalipAdvFeeAmt1+totalLabFeeAmt2)-totalVAmt);
               float totalNetAmt =((totalFeeOspAmt1+totalFeeAmt1+totalFeeAmt+totalFeeAmtReg+totalIpRecAmt2+totalipAdvFeeAmt1+totalLabFeeAmt2)-totalVAmt);
               float totalAdvAmt =(totalOspAdvAmt+totalOpAdvAmt+totalAdvcAmt+totalAdvcAmtReg+totalIpAdvAmt1+totalipAdvAdvcAmt1+totalLabAdvAmt1);
               float totalRAmt = ((totalOspRecAmt1+totalRecAmt1 +totalRecpAmt+totalRecpAmtReg+totalIpRecAmt2+totalipAdvRecpAmt1+totalLabRecAmt2)-totalVRecpAmt);
				float totalCAmt =((totalCashOspAmt1+totalCashAmt1+totalCashAmt+totalCashAmtReg+totalIpCashAmt2+totalipAdvCashAmt1+totalLabCashAmt2)-totalVCashAmt);
               float totalChAmt =((totalChqOspAmt1 +totalChqAmt1+totalChqAmt+totalChqAmtReg+totalIpChqAmt2+totalipAdvChqAmt1+totalLabChqAmt2)-totalVChqAmt);
               float totalCrdAmt =( (totalCardOspAmt1+totalCardAmt1+totalCardAmt+totalCardAmtReg+totalIpCardAmt2+totalipAdvCardAmt+totalLabCardAmt2)-totalVCardAmt);
               float  totalGCPCAmt= ((totalcashPlusCardOspAmt1+totalcashPlusCardAmt1+totalCashPlusCardDocAmt+totalCashPlusCardRegAmt+totalIpCardAmt2+totalCashPlusCardipAdvAmt1+labTotalCashPlusCardAmt1)-vTotalCashPlusCardAmt);
               float totalDAmt=((totalDueOspAmt1+totalDueAmt1+totalDueAmt+totalDueAmtReg+totalIpDueAmt2+totalipAdvDueAmt1+totalLabDueAmt2)-totalVDueAmt);
        
            PdfPTable table07 = new PdfPTable(14);
            table07.setWidths(new float[] {4f, 6f, 4f, 6f, 4f, 2f, 3f, 3f, 3f, 3f, 3f, 3f,4f,3f});
            table07.setSpacingBefore(10);
            table07.setWidthPercentage(100f);
            
            PdfPCell cell02;
            cell02 = new PdfPCell(new Phrase("", redFont));
            cell02.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell02.setPaddingTop(5f);
            cell02.setPaddingBottom(5f);
            cell02.setHorizontalAlignment(Element.ALIGN_LEFT);
            table07.addCell(cell02);
            cell02 = new PdfPCell(new Phrase("Total Amount   :", headFont));
            cell02.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell02.setPaddingTop(5f);
            cell02.setPaddingBottom(5f);
            cell02.setHorizontalAlignment(Element.ALIGN_LEFT);
            //cell02.setPaddingLeft(-30f);
            table07.addCell(cell02);
            cell02 = new PdfPCell(new Phrase("", redFont));
            cell02.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell02.setPaddingTop(5f);
            cell02.setPaddingBottom(5f);
            cell02.setHorizontalAlignment(Element.ALIGN_LEFT);
            //cell02.setPaddingLeft(-30f);
            table07.addCell(cell02);
            cell02 = new PdfPCell(new Phrase("", redFont));
            cell02.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell02.setPaddingTop(5f);
            cell02.setPaddingBottom(5f);
            cell02.setHorizontalAlignment(Element.ALIGN_LEFT);
            //cell02.setPaddingLeft(-30f);
            table07.addCell(cell02);
            cell02 = new PdfPCell(new Phrase(String.valueOf(totalGAmt), redFont));
            cell02.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell02.setPaddingTop(5f);
            cell02.setPaddingBottom(5f);
            cell02.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell02.setPaddingRight(3f);
            table07.addCell(cell02);
        
            cell02 = new PdfPCell(new Phrase("0", redFont));
            cell02.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell02.setPaddingTop(5f);
            cell02.setPaddingBottom(5f);
            cell02.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell02.setPaddingRight(-25f);
            table07.addCell(cell02);
            cell02 = new PdfPCell(new Phrase(String.valueOf(totalNetAmt), redFont));
            cell02.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell02.setPaddingTop(5f);
            cell02.setPaddingBottom(5f);
            cell02.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell02.setPaddingRight(-25f);
            table07.addCell(cell02);
        
            cell02 = new PdfPCell(new Phrase(String.valueOf(totalAdvAmt), redFont));
            cell02.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell02.setPaddingTop(5f);
            cell02.setPaddingBottom(5f);
            cell02.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell02.setPaddingRight(-16f);
            table07.addCell(cell02);
            cell02 = new PdfPCell(new Phrase(String.valueOf(totalRAmt), redFont));
            //cell02.setBorder(Rectangle.NO_BORDER);
            cell02.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell02.setPaddingTop(5f);
            cell02.setPaddingBottom(5f);
            cell02.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell02.setPaddingRight(-17f);
            table07.addCell(cell02);
        
            cell02 = new PdfPCell(new Phrase(String.valueOf(totalCAmt), redFont));
            //cell02.setBorder(Rectangle.NO_BORDER);
            cell02.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell02.setPaddingTop(5f);
            cell02.setPaddingBottom(5f);
            cell02.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell02.setPaddingRight(-13f);
            table07.addCell(cell02);
            cell02 = new PdfPCell(new Phrase(String.valueOf(totalChAmt), redFont));
            //cell02.setBorder(Rectangle.NO_BORDER);
            cell02.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell02.setPaddingTop(5f);
            cell02.setPaddingBottom(5f);
            cell02.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell02.setPaddingRight(-7f);
            table07.addCell(cell02);
        
            cell02 = new PdfPCell(new Phrase(String.valueOf(totalCrdAmt), redFont));
            //cell02.setBorder(Rectangle.NO_BORDER);
            cell02.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell02.setPaddingTop(5f);
            cell02.setPaddingBottom(5f);
            cell02.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell02.setPaddingRight(-3f);
            table07.addCell(cell02);
            
            cell02 = new PdfPCell(new Phrase(String.valueOf(totalGCPCAmt), redFont));
            //cell02.setBorder(Rectangle.NO_BORDER);
            cell02.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell02.setPaddingTop(5f);
            cell02.setPaddingBottom(5f);
            cell02.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell02.setPaddingRight(-3f);
            table07.addCell(cell02);
            cell02 = new PdfPCell(new Phrase(String.valueOf(totalDAmt), redFont));
            //cell02.setBorder(Rectangle.NO_BORDER);
            cell02.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell02.setPaddingTop(5f);
            cell02.setPaddingBottom(5f);
            cell02.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table07.addCell(cell02);
            
            cell1.addElement(table07);
            
            PdfPTable table071 = new PdfPTable(14);
            table071.setWidths(new float[] {4f, 6f, 4f, 6f, 4f, 2f, 3f, 3f, 3f, 3f, 3f, 3f,4f,3f});
            table071.setSpacingBefore(10);
            table071.setWidthPercentage(100f);
            
            PdfPCell cell021;
            cell021 = new PdfPCell(new Phrase("", redFont));
            //cell02.setBorder(Rectangle.NO_BORDER);
            cell021.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell021.setPaddingTop(5f);
            cell021.setPaddingBottom(5f);
            cell021.setHorizontalAlignment(Element.ALIGN_LEFT);
            table071.addCell(cell021);
            cell021 = new PdfPCell(new Phrase("Grand Total   :", headFont));
            //cell02.setBorder(Rectangle.NO_BORDER);
            cell021.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell021.setPaddingTop(5f);
            cell021.setPaddingBottom(5f);
            cell021.setHorizontalAlignment(Element.ALIGN_LEFT);
            //cell021.setPaddingLeft(-30f);
            table071.addCell(cell021);
            cell021 = new PdfPCell(new Phrase("", redFont));
            //cell02.setBorder(Rectangle.NO_BORDER);
            cell021.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell021.setPaddingTop(5f);
            cell021.setPaddingBottom(5f);
            cell021.setHorizontalAlignment(Element.ALIGN_LEFT);
            //cell021.setPaddingLeft(-30f);
            table071.addCell(cell021);
            cell021 = new PdfPCell(new Phrase("", redFont));
            //cell02.setBorder(Rectangle.NO_BORDER);
            cell021.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell021.setPaddingTop(5f);
            cell021.setPaddingBottom(5f);
            cell021.setHorizontalAlignment(Element.ALIGN_LEFT);
            //cell021.setPaddingLeft(-30f);
            table071.addCell(cell021);
            cell021 = new PdfPCell(new Phrase(String.valueOf(totalGAmt), redFont));
            //cell02.setBorder(Rectangle.NO_BORDER);
            cell021.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell021.setPaddingTop(5f);
            cell021.setPaddingBottom(5f);
            cell021.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell021.setPaddingRight(3f);
            table071.addCell(cell021);
        
            cell021 = new PdfPCell(new Phrase("0", redFont));
            //cell02.setBorder(Rectangle.NO_BORDER);
            cell021.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell021.setPaddingTop(5f);
            cell021.setPaddingBottom(5f);
            cell021.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell021.setPaddingRight(-25f);
            table071.addCell(cell021);
            cell021 = new PdfPCell(new Phrase(String.valueOf(totalNetAmt), redFont));
            //cell02.setBorder(Rectangle.NO_BORDER);
            cell021.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell021.setPaddingTop(5f);
            cell021.setPaddingBottom(5f);
            cell021.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell021.setPaddingRight(-25f);
            table071.addCell(cell021);
        
            cell021 = new PdfPCell(new Phrase(String.valueOf(totalAdvAmt), redFont));
            //cell02.setBorder(Rectangle.NO_BORDER);
            cell021.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell021.setPaddingTop(5f);
            cell021.setPaddingBottom(5f);
            cell021.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell021.setPaddingRight(-16f);
            table071.addCell(cell021);
            cell021 = new PdfPCell(new Phrase(String.valueOf(totalRAmt), redFont));
            //cell02.setBorder(Rectangle.NO_BORDER);
            cell021.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell021.setPaddingTop(5f);
            cell021.setPaddingBottom(5f);
            cell021.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell021.setPaddingRight(-17f);
            table071.addCell(cell021);
        
            cell021 = new PdfPCell(new Phrase(String.valueOf(totalCAmt), redFont));
            //cell02.setBorder(Rectangle.NO_BORDER);
            cell021.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell021.setPaddingTop(5f);
            cell021.setPaddingBottom(5f);
            cell021.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell021.setPaddingRight(-13f);
            table071.addCell(cell021);
            cell021 = new PdfPCell(new Phrase(String.valueOf(totalChAmt), redFont));
            //cell02.setBorder(Rectangle.NO_BORDER);
            cell021.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell021.setPaddingTop(5f);
            cell021.setPaddingBottom(5f);
            cell021.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell021.setPaddingRight(-7f);
            table071.addCell(cell021);
        
            cell021 = new PdfPCell(new Phrase(String.valueOf(totalCrdAmt), redFont));
            //cell02.setBorder(Rectangle.NO_BORDER);
            cell021.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell021.setPaddingTop(5f);
            cell021.setPaddingBottom(5f);
            cell021.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell021.setPaddingRight(-3f);
            table071.addCell(cell021);
            
            cell021 = new PdfPCell(new Phrase(String.valueOf(totalGCPCAmt), redFont));
            //cell02.setBorder(Rectangle.NO_BORDER);
            cell021.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell021.setPaddingTop(5f);
            cell021.setPaddingBottom(5f);
            cell021.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //cell021.setPaddingRight(-3f);
            table071.addCell(cell021);
            cell021 = new PdfPCell(new Phrase(String.valueOf(totalDAmt), redFont));
            //cell02.setBorder(Rectangle.NO_BORDER);
            cell021.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell021.setPaddingTop(5f);
            cell021.setPaddingBottom(5f);
            cell021.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table071.addCell(cell021);
            
            cell1.addElement(table071);
            
            
            
            //for cash + card calculations--------------------------------------------------------
            
            
            PdfPTable table051 = new PdfPTable(1);
            table051.setWidths(new float[] { 8f});
            table051.setSpacingBefore(10);
            table051.setWidthPercentage(100f);
           
            PdfPCell hcell1011;
    
            hcell1011 = new PdfPCell(new Phrase("CASH PLUS CARD PAYMENTS", headFont));
            hcell1011.setBorder(Rectangle.NO_BORDER);
            
            hcell1011.setHorizontalAlignment(Element.ALIGN_LEFT);
            hcell1011.setPaddingBottom(1f);
            table051.addCell(hcell1011);
            cell1.addElement(table051);
            
            PdfPTable table151 = new PdfPTable(14);
            table151.setWidths(new float[] {4.8f, 6.4f, 6f, 6f, 6f, 4f, 3.3f, 3.4f, 3.3f, 3.6f, 3.4f, 3.6f,4.5f,3.1f});
            table151.setSpacingBefore(10);
            table151.setWidthPercentage(100f);
            PdfPCell hcell176;
    
            hcell176 = new PdfPCell(new Phrase("Umr No", redFont));
            hcell176.setBorder(Rectangle.NO_BORDER);
            hcell176.setBackgroundColor(BaseColor.GRAY);
            hcell176.setPaddingBottom(5f);
            hcell176.setHorizontalAlignment(Element.ALIGN_LEFT);
            table151.addCell(hcell176);
            
            hcell176 = new PdfPCell(new Phrase("Bill No", redFont));
            hcell176.setBorder(Rectangle.NO_BORDER);
            hcell176.setBackgroundColor(BaseColor.GRAY);
            hcell176.setPaddingBottom(5f);
            hcell176.setHorizontalAlignment(Element.ALIGN_LEFT);
            table151.addCell(hcell176);
            
            hcell176 = new PdfPCell(new Phrase("Description", redFont));
            hcell176.setBorder(Rectangle.NO_BORDER);
            hcell176.setBackgroundColor(BaseColor.GRAY);
            hcell176.setPaddingBottom(5f);
            hcell176.setHorizontalAlignment(Element.ALIGN_LEFT);
            //hcell10.setPaddingRight(20f);
            table151.addCell(hcell176);
            
            hcell176 = new PdfPCell(new Phrase("Cash Amount", redFont));
            hcell176.setBorder(Rectangle.NO_BORDER);
            hcell176.setBackgroundColor(BaseColor.GRAY);
            hcell176.setPaddingBottom(5f);
            hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell176.setPaddingRight(10f);
            table151.addCell(hcell176);
            
            hcell176 = new PdfPCell(new Phrase("Card Amount", redFont));
            hcell176.setBorder(Rectangle.NO_BORDER);
            hcell176.setBackgroundColor(BaseColor.GRAY);
            hcell176.setPaddingBottom(5f);
            hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell176.setPaddingRight(10f);
            table151.addCell(hcell176);
            
          
            
            hcell176 = new PdfPCell(new Phrase(" ", redFont));
            hcell176.setBorder(Rectangle.NO_BORDER);
            hcell176.setBackgroundColor(BaseColor.GRAY);
            hcell176.setPaddingBottom(5f);
            hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell176.setPaddingRight(10f);
            table151.addCell(hcell176);
            
            hcell176 = new PdfPCell(new Phrase(" ", redFont));
            hcell176.setBorder(Rectangle.NO_BORDER);
            hcell176.setBackgroundColor(BaseColor.GRAY);
            hcell176.setPaddingBottom(5f);
            hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell176.setPaddingRight(10f);
            table151.addCell(hcell176);
            
            hcell176 = new PdfPCell(new Phrase(" ", redFont));
            hcell176.setBorder(Rectangle.NO_BORDER);
            hcell176.setBackgroundColor(BaseColor.GRAY);
            hcell176.setPaddingBottom(5f);
            hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell176.setPaddingRight(10f);
            table151.addCell(hcell176);
            
            hcell176 = new PdfPCell(new Phrase(" ", redFont));
            hcell176.setBorder(Rectangle.NO_BORDER);
            hcell176.setBackgroundColor(BaseColor.GRAY);
            hcell176.setPaddingBottom(5f);
            hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell176.setPaddingRight(10f);
            table151.addCell(hcell176);
            
            hcell176 = new PdfPCell(new Phrase(" ", redFont));
            hcell176.setBorder(Rectangle.NO_BORDER);
            hcell176.setBackgroundColor(BaseColor.GRAY);
            hcell176.setPaddingBottom(5f);
            hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell176.setPaddingRight(10f);
            table151.addCell(hcell176);
            
            hcell176 = new PdfPCell(new Phrase(" ", redFont));
            hcell176.setBorder(Rectangle.NO_BORDER);
            hcell176.setBackgroundColor(BaseColor.GRAY);
            hcell176.setPaddingBottom(5f);
            hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell176.setPaddingRight(10f);
            table151.addCell(hcell176);
            
            hcell176 = new PdfPCell(new Phrase(" ", redFont));
            hcell176.setBorder(Rectangle.NO_BORDER);
            hcell176.setBackgroundColor(BaseColor.GRAY);
            hcell176.setPaddingBottom(5f);
            hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell176.setPaddingRight(10f);
            table151.addCell(hcell176);
            
            hcell176 = new PdfPCell(new Phrase(" ", redFont));
            hcell176.setBorder(Rectangle.NO_BORDER);
            hcell176.setBackgroundColor(BaseColor.GRAY);
            hcell176.setPaddingBottom(5f);
            hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
            hcell176.setPaddingRight(10f);
            table151.addCell(hcell176);
            
            
            hcell176 = new PdfPCell(new Phrase(" ", redFont));
            hcell176.setBorder(Rectangle.NO_BORDER);
            hcell176.setBackgroundColor(BaseColor.GRAY);
            hcell176.setPaddingBottom(5f);
            hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table151.addCell(hcell176);
            
            
            
            //-----------------------------------------------
            
            String billNo=null;
            float cardAmount=0;
            float cardAmount1=0;
            float cashAmount=0;
            float cashAmount1=0;
            float totalCardAmount=0;
            float totalCardAmount1=0;
            float totalCashAmount=0;
            float totalCashAmount1=0;
           // String umr=null;
            String description=null;
            
            PdfPTable table1511 = new PdfPTable(14);
            table1511.setWidths(new float[] {9.9f, 3.7f, 6f, 6f, 5f, 5f, 3.3f, 3.4f, 3.3f, 3.6f, 3.4f, 3.6f,4.5f,3.1f});
            table1511.setSpacingBefore(10);
            table1511.setWidthPercentage(100f);
            PdfPCell cell111;
            
            
            List<Map<String, String>> show1 = new ArrayList<>();
            List<String> info11 = new ArrayList<>();
            Map<String, String> displayInfo11 = null; 
            
            
            
          
                
           
                                        List<CashPlusCard> cashNCards=cashPlusCardRepository.findByBillNoAndDescriptions(user.get("fromDate"), user.get("toDate"),uId);
                                    if(!cashNCards.isEmpty())
                                    {
                                        
                                        for(CashPlusCard cashNCard:cashNCards)
                                        {
                                            displayInfo11 = new HashMap<>();
                                                    if(cashNCard!=null)
                                                    {
                                                        if(cashNCard.getDescription().equalsIgnoreCase("OspBill"))
                                                        {
                                                        umr="";
                                                        }
                                                        else {
                                                            umr=cashNCard.getPatientRegistrationCashCard().getPatientDetails().getUmr();
                                                        }
                                                        billNo=cashNCard.getBillNo();
                                                        description=cashNCard.getDescription();
                                                        if(!info11.contains(description))
                                                        {
                                                                if(description!=null) 
                                                                {
                                                                        if(cashNCard.getCardAmount()!=0)
                                                                        {
                                                                            cardAmount=cashNCard.getCardAmount();
                                                                            totalCardAmount+=cardAmount;
                                                                            
                                                                        }
                                                                       if(cashNCard.getCashAmount()!=0)
                                                                        {
                                                                           cashAmount=cashNCard.getCashAmount();
                                                                           totalCashAmount+=cashAmount;
                                                                            
                                                                        }
                                                                       // cashAmount1+=cashAmount;
                                                                       // cardAmount1+=cardAmount;
                                                                        displayInfo11.put("cashAmount", String.valueOf(cashAmount));
                                                                          displayInfo11.put("cardAmount", String.valueOf(cardAmount));
                                                                } 
                                                                
                    
                                                            
                                                            info11.add(billNo);
                                                            if(!umr.isEmpty())
                                                            {
                                                                displayInfo11.put("umr", String.valueOf(umr));
                                                            }
                                                            else
                                                            {
                                                                displayInfo11.put("umr","");    
                                                            }
                                                            
                                                            displayInfo11.put("billNo", String.valueOf(billNo));
                                                              displayInfo11.put("description", description);
                                                           
                                                            show1.add(displayInfo11);
                                                          
                                                        }
                      
                                                        
                                                    }
                                                                   
                                    }
                                    
                          
                                    
            
          //  totalCashAmount1+=totalCashAmount;
          //  totalCardAmount1+=totalCardAmount;
            for (Map<String, String> show11 : show1) { 
            
                  PdfPCell cell36;
                    
                  cell36 = new PdfPCell(new Phrase(String.valueOf( show11.get("umr")), redFont));
                  cell36.setBorder(Rectangle.NO_BORDER);
                  cell36.setHorizontalAlignment(Element.ALIGN_LEFT);
                  table151.addCell(cell36);
  
                  cell36 = new PdfPCell(new Phrase(String.valueOf( show11.get("billNo")), redFont));
                  cell36.setBorder(Rectangle.NO_BORDER);
                  cell36.setHorizontalAlignment(Element.ALIGN_LEFT);
                  //cell111.setPaddingLeft(-30f);
                  table151.addCell(cell36);
                  
                  cell36 = new PdfPCell(new Phrase(show11.get("description"), redFont));
                  cell36.setBorder(Rectangle.NO_BORDER);
                  cell36.setHorizontalAlignment(Element.ALIGN_LEFT);
                 // cell36.setPaddingRight(10f);
                  //cell111.setPaddingRight(35f);
                  table151.addCell(cell36);
  
                  cell36 = new PdfPCell(new Phrase(String.valueOf( show11.get("cashAmount")), redFont));
                  cell36.setBorder(Rectangle.NO_BORDER);
                  cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                  cell36.setPaddingRight(10f);
                  //cell111.setPaddingLeft(-30f);
                  table151.addCell(cell36);
  
                  cell36 = new PdfPCell(new Phrase(String.valueOf( show11.get("cardAmount")), redFont));
                  cell36.setBorder(Rectangle.NO_BORDER);
                  cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                  cell36.setPaddingRight(10f);
                  //cell111.setPaddingLeft(-20f);
                  table151.addCell(cell36);
  
                 
                  cell36 = new PdfPCell(new Phrase("", redFont));
                  cell36.setBorder(Rectangle.NO_BORDER);
                  cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                  cell36.setPaddingRight(10f);
                  //cell111.setPaddingRight(20f);
                  table151.addCell(cell36);
  
                  cell36 = new PdfPCell(new Phrase("", redFont));
                  cell36.setBorder(Rectangle.NO_BORDER);
                  cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                  cell36.setPaddingRight(10f);
                  //cell111.setPaddingRight(15f);
                  table151.addCell(cell36);
              
                  cell36 = new PdfPCell(new Phrase("", redFont));
                  cell36.setBorder(Rectangle.NO_BORDER);
                  cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                  cell36.setPaddingRight(10f);
                  //cell111.setPaddingRight(12f);
                  table151.addCell(cell36);
  
                  cell36 = new PdfPCell(new Phrase("", redFont));
                  cell36.setBorder(Rectangle.NO_BORDER);
                  cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                  cell36.setPaddingRight(10f);
                  //cell111.setPaddingRight(10f);
                  table151.addCell(cell36);
              
                  cell36 = new PdfPCell(new Phrase("", redFont));
                  cell36.setBorder(Rectangle.NO_BORDER);
                  cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                  cell36.setPaddingRight(10f);
                  //cell111.setPaddingRight(10f);
                  table151.addCell(cell36);
  
                  cell36 = new PdfPCell(new Phrase("", redFont));
                  cell36.setBorder(Rectangle.NO_BORDER);
                  cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                  cell36.setPaddingRight(10f);
                  table151.addCell(cell36);
              
                  cell36 = new PdfPCell(new Phrase("", redFont));
                  cell36.setBorder(Rectangle.NO_BORDER);
                  cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                  cell36.setPaddingRight(10f);
                  table151.addCell(cell36);
                  
                  cell36 = new PdfPCell(new Phrase("", redFont));
                  cell36.setBorder(Rectangle.NO_BORDER);
                  cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                  cell36.setPaddingRight(10f);
                  table151.addCell(cell36);
  
                  cell36 = new PdfPCell(new Phrase("", redFont));
                  cell36.setBorder(Rectangle.NO_BORDER);
                  cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                  
                  table151.addCell(cell36);
            
            }
            }
            else
            {
                 PdfPCell cell36;
                    
                 cell36 = new PdfPCell(new Phrase(String.valueOf(""), redFont));
                 cell36.setBorder(Rectangle.NO_BORDER);
                 cell36.setHorizontalAlignment(Element.ALIGN_LEFT);
                 table151.addCell(cell36);
 
                 cell36 = new PdfPCell(new Phrase(String.valueOf(""), redFont1));
                 cell36.setBorder(Rectangle.NO_BORDER);
                 cell36.setHorizontalAlignment(Element.ALIGN_LEFT);
                 //cell111.setPaddingLeft(-30f);
                 table151.addCell(cell36);
 
                 cell36 = new PdfPCell(new Phrase(String.valueOf(""), redFont));
                 cell36.setBorder(Rectangle.NO_BORDER);
                 cell36.setHorizontalAlignment(Element.ALIGN_LEFT);
                 //cell111.setPaddingLeft(-30f);
                 table151.addCell(cell36);
 
                 cell36 = new PdfPCell(new Phrase(String.valueOf(""), redFont));
                 cell36.setBorder(Rectangle.NO_BORDER);
                 cell36.setHorizontalAlignment(Element.ALIGN_LEFT);
                 //cell111.setPaddingLeft(-20f);
                 table151.addCell(cell36);
 
                 cell36 = new PdfPCell(new Phrase("", redFont));
                 cell36.setBorder(Rectangle.NO_BORDER);
                 cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 cell36.setPaddingRight(10f);
                 //cell111.setPaddingRight(35f);
                 table151.addCell(cell36);
             
                 cell36 = new PdfPCell(new Phrase("", redFont));
                 cell36.setBorder(Rectangle.NO_BORDER);
                 cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 cell36.setPaddingRight(10f);
                 //cell111.setPaddingRight(20f);
                 table151.addCell(cell36);
 
                 cell36 = new PdfPCell(new Phrase("", redFont));
                 cell36.setBorder(Rectangle.NO_BORDER);
                 cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 cell36.setPaddingRight(10f);
                 //cell111.setPaddingRight(15f);
                 table151.addCell(cell36);
             
                 cell36 = new PdfPCell(new Phrase("", redFont));
                 cell36.setBorder(Rectangle.NO_BORDER);
                 cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 cell36.setPaddingRight(10f);
                 //cell111.setPaddingRight(12f);
                 table151.addCell(cell36);
 
                 cell36 = new PdfPCell(new Phrase("", redFont));
                 cell36.setBorder(Rectangle.NO_BORDER);
                 cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 cell36.setPaddingRight(10f);
                 //cell111.setPaddingRight(10f);
                 table151.addCell(cell36);
             
                 cell36 = new PdfPCell(new Phrase("", redFont));
                 cell36.setBorder(Rectangle.NO_BORDER);
                 cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 cell36.setPaddingRight(10f);
                 //cell111.setPaddingRight(10f);
                 table151.addCell(cell36);
 
                 cell36 = new PdfPCell(new Phrase("", redFont));
                 cell36.setBorder(Rectangle.NO_BORDER);
                 cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 cell36.setPaddingRight(10f);
                 table151.addCell(cell36);
             
                 cell36 = new PdfPCell(new Phrase("", redFont));
                 cell36.setBorder(Rectangle.NO_BORDER);
                 cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 cell36.setPaddingRight(10f);
                 table151.addCell(cell36);
                 
                 cell36 = new PdfPCell(new Phrase("", redFont));
                 cell36.setBorder(Rectangle.NO_BORDER);
                 cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 cell36.setPaddingRight(10f);
                 table151.addCell(cell36);
 
                 cell36 = new PdfPCell(new Phrase("", redFont));
                 cell36.setBorder(Rectangle.NO_BORDER);
                 cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                 
                 table151.addCell(cell36);
            }
            
          
            
            cell111 = new PdfPCell(new Phrase("Total Cash+ Card Amount :", headFont));
            cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell111.setPaddingBottom(3f);
            cell111.setPaddingTop(3f);
            cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
            table1511.addCell(cell111);
            cell111 = new PdfPCell(new Phrase("", redFont));
            cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell111.setPaddingBottom(3f);
            cell111.setPaddingTop(3f);
            cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
            //cell111.setPaddingLeft(-30f);
            table1511.addCell(cell111);
            
            cell111 = new PdfPCell(new Phrase("", redFont));
            cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell111.setPaddingBottom(3f);
            cell111.setPaddingTop(3f);
            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
           // cell111.setPaddingRight(10f);
            //cell111.setPaddingRight(35f);
            table1511.addCell(cell111);
            
            cell111 = new PdfPCell(new Phrase(String.valueOf(totalCashAmount), redFont));
            cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell111.setPaddingBottom(3f);
            cell111.setPaddingTop(3f);
            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell111.setPaddingRight(28f);
            cell111.setPaddingBottom(3f);
            cell111.setPaddingTop(3f);
            //cell111.setPaddingLeft(-30f);
            table1511.addCell(cell111);
            cell111 = new PdfPCell(new Phrase(String.valueOf(totalCardAmount), redFont));
            cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell111.setPaddingBottom(3f);
            cell111.setPaddingTop(3f);
            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell111.setPaddingRight(14f);
            //cell111.setPaddingLeft(-20f);
            table1511.addCell(cell111);
            
        
            cell111 = new PdfPCell(new Phrase("", redFont));
            cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell111.setPaddingBottom(3f);
            cell111.setPaddingTop(3f);
            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell111.setPaddingRight(10f);
            //cell111.setPaddingRight(20f);
            table1511.addCell(cell111);
            cell111 = new PdfPCell(new Phrase("", redFont));
            cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell111.setPaddingBottom(3f);
            cell111.setPaddingTop(3f);
            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell111.setPaddingRight(10f);
            //cell111.setPaddingRight(15f);
            table1511.addCell(cell111);
        
            cell111 = new PdfPCell(new Phrase("", redFont));
            cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell111.setPaddingBottom(3f);
            cell111.setPaddingTop(3f);
            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell111.setPaddingRight(10f);
            //cell111.setPaddingRight(12f);
            table1511.addCell(cell111);
            cell111 = new PdfPCell(new Phrase("", redFont));
            cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell111.setPaddingBottom(3f);
            cell111.setPaddingTop(3f);
            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell111.setPaddingRight(10f);
            //cell111.setPaddingRight(10f);
            table1511.addCell(cell111);
        
            cell111 = new PdfPCell(new Phrase("", redFont));
            cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell111.setPaddingBottom(3f);
            cell111.setPaddingTop(3f);
            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell111.setPaddingRight(10f);
            //cell111.setPaddingRight(10f);
            table1511.addCell(cell111);
            cell111 = new PdfPCell(new Phrase("", redFont));
            cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell111.setPaddingBottom(3f);
            cell111.setPaddingTop(3f);
            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell111.setPaddingRight(10f);
            table1511.addCell(cell111);
        
            cell111 = new PdfPCell(new Phrase("", redFont));
            cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell111.setPaddingBottom(3f);
            cell111.setPaddingTop(3f);
            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell111.setPaddingRight(10f);
            table1511.addCell(cell111);
            
            cell111 = new PdfPCell(new Phrase("", redFont));
            cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell111.setPaddingBottom(3f);
            cell111.setPaddingTop(3f);
            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell111.setPaddingRight(10f);
            table1511.addCell(cell111);
            cell111 = new PdfPCell(new Phrase("", redFont));
            cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
            cell111.setPaddingBottom(3f);
            cell111.setPaddingTop(3f);
            cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            
            table1511.addCell(cell111);
            
           //-----------------------------for total amount calculation------------------------------------------
            
            float totalCashGAmount=0;
            float totalCardGAmount=0;
            float totalChequeGAmount=0;
            float totalDueGAmount=0;
          
            if(totalCashAmount!=0 || totalCAmt!=0)
            {
                totalCashGAmount+=totalCashAmount+totalCAmt;
            }
            if(totalCardAmount!=0 || totalCrdAmt!=0)
            {
                totalCardGAmount+=totalCardAmount+totalCrdAmt;
            }
            if(totalChAmt!=0)    
            {
                totalChequeGAmount+=totalChAmt;
            }
            if(totalDAmt!=0)
            {
                totalDueGAmount+=totalDAmt;
            }
           
            PdfPTable table059 = new PdfPTable(1);
            table059.setWidths(new float[] { 8f});
            table059.setSpacingBefore(10);
            table059.setWidthPercentage(100f);
           
            PdfPCell hcell1059;
    
            hcell1059 = new PdfPCell(new Phrase("GRAND TOTAL AMOUNT :", headFont));
            hcell1059.setBorder(Rectangle.NO_BORDER);
            
            hcell1059.setHorizontalAlignment(Element.ALIGN_LEFT);
            hcell1059.setPaddingBottom(1f);
            table059.addCell(hcell1059);
           // cell1.addElement(table059);
            
            PdfPTable table15111 = new PdfPTable(14);
            table15111.setWidths(new float[] {9.9f, 9.9f, 9.9f, 9.9f, 3f, 3f, 3.3f, 3f, 3f, 3f, 3.4f, 3.6f,4.5f,3.1f});
            table15111.setSpacingBefore(10);
            table15111.setWidthPercentage(100f);
            
            
            PdfPCell cell17;
            
            cell17 = new PdfPCell(new Phrase("Cash Amount", headFont));
            cell17.setBackgroundColor(BaseColor.GRAY);
            cell17.setBorder(Rectangle.NO_BORDER);
            cell17.setPaddingBottom(3f);
            cell17.setPaddingTop(3f);
            cell17.setHorizontalAlignment(Element.ALIGN_LEFT);
            table15111.addCell(cell17);
            cell17 = new PdfPCell(new Phrase("Card Amount", headFont));
            cell17.setBackgroundColor(BaseColor.GRAY);
            cell17.setBorder(Rectangle.NO_BORDER);
            cell17.setPaddingBottom(3f);
            cell17.setPaddingTop(3f);
            cell17.setHorizontalAlignment(Element.ALIGN_LEFT);
            //cell111.setPaddingLeft(-30f);
            table15111.addCell(cell17);
            cell17 = new PdfPCell(new Phrase("Cheque Amount", headFont));
            cell17.setBackgroundColor(BaseColor.GRAY);
            cell17.setBorder(Rectangle.NO_BORDER);
            cell17.setPaddingBottom(3f);
            cell17.setPaddingTop(3f);
            cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell17.setPaddingRight(22f);
            //cell111.setPaddingLeft(-30f);
            table15111.addCell(cell17);
            cell17 = new PdfPCell(new Phrase("Due Amount", headFont));
            cell17.setBackgroundColor(BaseColor.GRAY);
            cell17.setBorder(Rectangle.NO_BORDER);
            cell17.setPaddingBottom(3f);
            cell17.setPaddingTop(3f);
            cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell17.setPaddingRight(19f);
            //cell111.setPaddingLeft(-20f);
            table15111.addCell(cell17);
            cell17 = new PdfPCell(new Phrase("", redFont));
            cell17.setBackgroundColor(BaseColor.GRAY);
            cell17.setBorder(Rectangle.NO_BORDER);
            cell17.setPaddingBottom(3f);
            cell17.setPaddingTop(3f);
            cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell17.setPaddingRight(10f);
            //cell111.setPaddingRight(35f);
            table15111.addCell(cell17);
        
            cell17 = new PdfPCell(new Phrase("", redFont));
            cell17.setBackgroundColor(BaseColor.GRAY);
            cell17.setBorder(Rectangle.NO_BORDER);
            cell17.setPaddingBottom(3f);
            cell17.setPaddingTop(3f);
            cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell17.setPaddingRight(10f);
            //cell111.setPaddingRight(20f);
            table15111.addCell(cell17);
            cell17 = new PdfPCell(new Phrase("", redFont));
            cell17.setBackgroundColor(BaseColor.GRAY);
            cell17.setBorder(Rectangle.NO_BORDER);
            cell17.setPaddingBottom(3f);
            cell17.setPaddingTop(3f);
            cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell17.setPaddingRight(10f);
            //cell111.setPaddingRight(15f);
            table15111.addCell(cell17);
        
            cell17 = new PdfPCell(new Phrase("", redFont));
            cell17.setBackgroundColor(BaseColor.GRAY);
            cell17.setBorder(Rectangle.NO_BORDER);
            cell17.setPaddingBottom(3f);
            cell17.setPaddingTop(3f);
            cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell17.setPaddingRight(10f);
            //cell111.setPaddingRight(12f);
            table15111.addCell(cell17);
            cell17 = new PdfPCell(new Phrase("", redFont));
            cell17.setBackgroundColor(BaseColor.GRAY);
            cell17.setBorder(Rectangle.NO_BORDER);
            cell17.setPaddingBottom(3f);
            cell17.setPaddingTop(3f);
            cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell17.setPaddingRight(10f);
            //cell111.setPaddingRight(10f);
            table15111.addCell(cell17);
        
            cell17 = new PdfPCell(new Phrase("", redFont));
            cell17.setBackgroundColor(BaseColor.GRAY);
            cell17.setBorder(Rectangle.NO_BORDER);
            cell17.setPaddingBottom(3f);
            cell17.setPaddingTop(3f);
            cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell17.setPaddingRight(10f);
            //cell111.setPaddingRight(10f);
            table15111.addCell(cell17);
            cell17 = new PdfPCell(new Phrase("", redFont));
            cell17.setBackgroundColor(BaseColor.GRAY);
            cell17.setBorder(Rectangle.NO_BORDER);
            cell17.setPaddingBottom(3f);
            cell17.setPaddingTop(3f);
            cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell17.setPaddingRight(10f);
            table15111.addCell(cell17);
        
            cell17 = new PdfPCell(new Phrase("", redFont));
            cell17.setBackgroundColor(BaseColor.GRAY);
            cell17.setBorder(Rectangle.NO_BORDER);
            cell17.setPaddingBottom(3f);
            cell17.setPaddingTop(3f);
            cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell17.setPaddingRight(10f);
            table15111.addCell(cell17);
            
            cell17 = new PdfPCell(new Phrase("", redFont));
            cell17.setBackgroundColor(BaseColor.GRAY);
            cell17.setBorder(Rectangle.NO_BORDER);
            cell17.setPaddingBottom(3f);
            cell17.setPaddingTop(3f);
            cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell17.setPaddingRight(10f);
            table15111.addCell(cell17);
            cell17 = new PdfPCell(new Phrase("", redFont));
            cell17.setBackgroundColor(BaseColor.GRAY);
            cell17.setBorder(Rectangle.NO_BORDER);
            cell17.setPaddingBottom(3f);
            cell17.setPaddingTop(3f);
            cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
            
            table15111.addCell(cell17);
            
            
            PdfPCell cell171;
            
            cell171 = new PdfPCell(new Phrase(String.valueOf(totalCashGAmount), redFont));
            cell171.setBorder(Rectangle.NO_BORDER);
            cell171.setPaddingBottom(3f);
            cell171.setPaddingTop(3f);
            cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell171.setPaddingRight(48f);
            table15111.addCell(cell171);
            cell171 = new PdfPCell(new Phrase(String.valueOf(totalCardGAmount), redFont));
            cell171.setBorder(Rectangle.NO_BORDER);
            cell171.setPaddingBottom(3f);
            cell171.setPaddingTop(3f);
            cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell171.setPaddingRight(49f);
            //cell111.setPaddingLeft(-30f);
            table15111.addCell(cell171);
            cell171 = new PdfPCell(new Phrase(String.valueOf(totalChequeGAmount), redFont));
            cell171.setBorder(Rectangle.NO_BORDER);
            cell171.setPaddingBottom(3f);
            cell171.setPaddingTop(3f);
            cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell171.setPaddingRight(22f);
            //cell111.setPaddingLeft(-30f);
            table15111.addCell(cell171);
            cell171 = new PdfPCell(new Phrase(String.valueOf(totalDueGAmount), redFont));
            cell171.setBorder(Rectangle.NO_BORDER);
            cell171.setPaddingBottom(3f);
            cell171.setPaddingTop(3f);
            cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell171.setPaddingRight(19f);
            //cell111.setPaddingLeft(-20f);
            table15111.addCell(cell171);
            cell171 = new PdfPCell(new Phrase("", redFont));
            cell171.setBorder(Rectangle.NO_BORDER);
            cell171.setPaddingBottom(3f);
            cell171.setPaddingTop(3f);
            cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell171.setPaddingRight(10f);
            //cell111.setPaddingRight(35f);
            table15111.addCell(cell171);
        
            cell171 = new PdfPCell(new Phrase("", redFont));
            cell171.setBorder(Rectangle.NO_BORDER);
            cell171.setPaddingBottom(3f);
            cell171.setPaddingTop(3f);
            cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell171.setPaddingRight(10f);
            //cell111.setPaddingRight(20f);
            table15111.addCell(cell171);
            cell171 = new PdfPCell(new Phrase("", redFont));
            cell171.setBorder(Rectangle.NO_BORDER);
            cell171.setPaddingBottom(3f);
            cell171.setPaddingTop(3f);
            cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell171.setPaddingRight(10f);
            //cell111.setPaddingRight(15f);
            table15111.addCell(cell171);
        
            cell171 = new PdfPCell(new Phrase("", redFont));
            cell171.setBorder(Rectangle.NO_BORDER);
            cell171.setPaddingBottom(3f);
            cell171.setPaddingTop(3f);
            cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell171.setPaddingRight(10f);
            //cell111.setPaddingRight(12f);
            table15111.addCell(cell171);
            cell171 = new PdfPCell(new Phrase("", redFont));
            cell171.setBorder(Rectangle.NO_BORDER);
            cell171.setPaddingBottom(3f);
            cell171.setPaddingTop(3f);
            cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell171.setPaddingRight(10f);
            //cell111.setPaddingRight(10f);
            table15111.addCell(cell171);
        
            cell171 = new PdfPCell(new Phrase("", redFont));
            cell171.setBorder(Rectangle.NO_BORDER);
            cell171.setPaddingBottom(3f);
            cell171.setPaddingTop(3f);
            cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell171.setPaddingRight(10f);
            //cell111.setPaddingRight(10f);
            table15111.addCell(cell171);
            cell171 = new PdfPCell(new Phrase("", redFont));
            cell171.setBorder(Rectangle.NO_BORDER);
            cell171.setPaddingBottom(3f);
            cell171.setPaddingTop(3f);
            cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell171.setPaddingRight(10f);
            table15111.addCell(cell171);
        
            cell171 = new PdfPCell(new Phrase("", redFont));
            cell171.setBorder(Rectangle.NO_BORDER);
            cell171.setPaddingBottom(3f);
            cell171.setPaddingTop(3f);
            cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell171.setPaddingRight(10f);
            table15111.addCell(cell171);
            
            cell171 = new PdfPCell(new Phrase("", redFont));
            cell171.setBorder(Rectangle.NO_BORDER);
            cell171.setPaddingBottom(3f);
            cell171.setPaddingTop(3f);
            cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell171.setPaddingRight(10f);
            table15111.addCell(cell171);
            cell171 = new PdfPCell(new Phrase("", redFont));
            cell171.setBorder(Rectangle.NO_BORDER);
            cell171.setPaddingBottom(3f);
            cell171.setPaddingTop(3f);
            cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
            
            table15111.addCell(cell171);
           
            //----------------------------------end of pdf-------------------------------------------
            
            
            cell1.addElement(table151);
            cell1.addElement(table1511);
            cell1.addElement(table059);
            cell1.addElement(table15111);
      
        table.addCell(cell1);
        document.add(table);
        document.close();
    
    System.out.println("finished");
    pdfByte = byteArrayOutputStream.toByteArray();
    String uri = ServletUriComponentsBuilder.fromCurrentContextPath().path("/v1/sales/viewFile/")
            .path(salesPaymentPdfServiceImpl.getNextId()).toUriString();
    salesPaymentPdf = new SalesPaymentPdf();
    salesPaymentPdf.setFileName("User Wise IP/OP Detailed Patient Wise");
    salesPaymentPdf.setFileuri(uri);
    salesPaymentPdf.setPid(salesPaymentPdfServiceImpl.getNextId());
    salesPaymentPdf.setData(pdfByte);
   // System.out.println(salesPaymentPdf);    
    // System.out.println("------------------------End--------------------------------");
    // System.out.println(totalBillAmount);
    //System.out.println(to);
    System.out.println(typeOfCharge);
    System.out.println(patientType);
    System.out.println(cServiceId);
    salesPaymentPdfServiceImpl.save(salesPaymentPdf);
} catch (Exception e) {
    //Logger.error(e.getMessage());
    e.printStackTrace();
}
return salesPaymentPdf;
}


@RequestMapping(value="getprevious")
public List<Object> getPreviousDaySales() {

	
	return salesServiceImpl.getPreviousDaySales();
}



@RequestMapping(value="getprevious/salereport",method=RequestMethod.POST)
public SalesPaymentPdf getSingleReportForSales(Principal principal) {
	
	
	
	/*
	 * String fromDate=map.get("fromDate"); String toDate=map.get("toDate");
	 */		
	//List<Sales> sales=salesRepository.findTheUserWiseDetails(fromDate, toDate);
	
	List<Sales> sales=salesRepository.getPreviousDaySales();
	float totalDisc=0;
	float fee = 0;
	float cashAmt = 0;
	float chqAmt = 0;
	float cardAmt = 0;
	float recpAmt = 0;
	float dueAmt = 0;
	float advAmt=0;
	float totalFeeAmt = 0;
	float totalCashAmt = 0;
	float totalCardAmt = 0;
	float totalChqAmt=0;
	float totalRecpAmt=0;
	float totalAdvcAmt=0;
	float totalDueAmt = 0;
	float cashPlusCardDocAmt=0;
    float totalCashPlusCardDocAmt=0;

	
	
	


	SalesPaymentPdf salesPaymentPdf = null;

	//CreatedBy (Security)
	User userSecurity=userServiceImpl.findByUserName(principal.getName());
	String createdBy=userSecurity.getFirstName()+" "+userSecurity.getMiddleName()+" "+userSecurity.getLastName();
	
	try {

		byte[] pdfByte = null;
		ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();

		Document document = new Document(PageSize.A4.rotate());

		Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 10, Font.NORMAL);

		Font headFont = new Font(Font.FontFamily.TIMES_ROMAN, 10, Font.BOLD);
		Font headFont1 = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD);
		PdfWriter writer = PdfWriter.getInstance(document, byteArrayOutputStream);
		HeaderFooterPageEvent event = new HeaderFooterPageEvent();
		 writer.setPageEvent(event);
		Resource fileResourcee = resourceLoader.getResource("classpath:udbhava.png");
		document.open();
		PdfPTable table = new PdfPTable(2);

		Image img = Image.getInstance(fileResourcee.getFile().getAbsolutePath());
		img.scaleAbsolute(75, 95);
		table.setWidthPercentage(105f);

		Phrase pq = new Phrase(new Chunk(img, 5, -80));

		//shantharam addr
		pq.add(new Chunk( " ",
				redFont));
		PdfPCell cellp = new PdfPCell(pq);
		PdfPCell cell1 = new PdfPCell();

		// for header Bold
		PdfPTable table96 = new PdfPTable(1);
		table96.setWidths(new float[] { 5f });
		table96.setSpacingBefore(10);

		PdfPCell hcell96;
		hcell96 = new PdfPCell(new Phrase("UDBHAVA PHARMACY", headFont1));
		hcell96.setBorder(Rectangle.NO_BORDER);
		hcell96.setHorizontalAlignment(Element.ALIGN_CENTER);
		hcell96.setPaddingLeft(25f);

		table96.addCell(hcell96);
		cell1.addElement(table96);
		
		PdfPTable table961 = new PdfPTable(1);
		table961.setWidths(new float[] { 5f });
		table961.setSpacingBefore(10);

		
		PdfPCell hcell71;
		hcell71 = new PdfPCell(new Phrase(ConstantValues.HOSPITAL_NAME, headFont1));
		hcell71.setBorder(Rectangle.NO_BORDER);
		hcell71.setHorizontalAlignment(Element.ALIGN_CENTER);
		hcell71.setPaddingLeft(25f);

		table961.addCell(hcell71);
		cell1.addElement(table961);

		// for header end
		cell1.setFixedHeight(120f);
		cell1.addElement(pq);
		cell1.setHorizontalAlignment(Element.ALIGN_CENTER);
		cell1.setColspan(2);
		table.addCell(cell1);

		PdfPCell cell19 = new PdfPCell();

		PdfPTable table21 = new PdfPTable(1);
		table21.setWidths(new float[] { 4f });
		table21.setSpacingBefore(10);

		PdfPCell hcell19;
		hcell19 = new PdfPCell(new Phrase("Sales Wise Medicine Details", headFont1));
		hcell19.setBorder(Rectangle.NO_BORDER);
		hcell19.setHorizontalAlignment(Element.ALIGN_CENTER);
		// hcell19.setPaddingLeft(-70f);
		table21.addCell(hcell19);

		// calender format date

		/*
		 * String from = map.get("fromDate").toString(); Timestamp timestamp =
		 * Timestamp.valueOf(from); DateFormat dateFormat = new
		 * SimpleDateFormat("dd-MMM-yyyy hh.mm aa "); Calendar calendar =
		 * Calendar.getInstance(); calendar.setTimeInMillis(timestamp.getTime()); String
		 * from1 = dateFormat.format(calendar.getTime());
		 * 
		 * String to = map.get("toDate").toString(); Timestamp timestamp1 =
		 * Timestamp.valueOf(to); DateFormat dateFormat1 = new
		 * SimpleDateFormat("dd-MMM-yyyy hh.mm aa "); Calendar calendar1 =
		 * Calendar.getInstance(); calendar1.setTimeInMillis(timestamp1.getTime());
		 * String to1 = dateFormat1.format(calendar1.getTime());
		 */

		Date date = Calendar.getInstance().getTime();

		// Display a date in day, month, year format
		DateFormat formatter = new SimpleDateFormat("dd-MMM-yyyy hh.mm aa");
		String today = formatter.format(date).toString();
		
		

		/*
		 * PdfPCell hcell20; hcell20 = new PdfPCell(new Phrase("From Dt  : " + from1 +
		 * "           " + "Till Dt  : " + to1, redFont));
		 * hcell20.setBorder(Rectangle.NO_BORDER);
		 * hcell20.setHorizontalAlignment(Element.ALIGN_CENTER);
		 * table21.addCell(hcell20);
		 * 
		 */			PdfPTable table3 = new PdfPTable(2);
		table3.setWidths(new float[] { 5f, 4f });
		table3.setSpacingBefore(10);

		PdfPCell hcell111;
		hcell111 = new PdfPCell(new Phrase("Printed By          :  " + createdBy , redFont));
		hcell111.setBorder(Rectangle.NO_BORDER);
		hcell111.setPaddingLeft(-70f);

		table3.addCell(hcell111);

		hcell111 = new PdfPCell(new Phrase("Printed Date & Time    :  " + today, redFont));
		hcell111.setBorder(Rectangle.NO_BORDER);
		hcell111.setPaddingRight(-70f);
		hcell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
		table3.addCell(hcell111);

		cell19.setFixedHeight(60f);
		cell19.setColspan(2);
		cell19.addElement(table21);
		cell19.addElement(table3);
		table.addCell(cell19);

//Start of Sales Return
		
		
		PdfPCell cell112 = new PdfPCell();
		
		Font h1 = new Font(Font.FontFamily.TIMES_ROMAN, 10, Font.BOLD,BaseColor.BLUE);

		Font h3 = new Font(Font.FontFamily.TIMES_ROMAN, 10, Font.NORMAL,BaseColor.RED);
		//PdfPCell cell11 = new PdfPCell();
		/*
		Paragraph p10 = new Paragraph("User Name:"+docName[0],h3);
		cell112.addElement(p10);
		//document.add(cell11);
		
		Paragraph p1 = new Paragraph("RETURN",h1);
		cell112.addElement(p1);
		//document.add(cell11);
		*/
		
		/*
		 * PdfPTable table01 = new PdfPTable(8); table01.setWidths(new float[] { 2f, 2f,
		 * 2f, 3.5f, 3.5f, 1f, 2f, 2.5f}); table01.setSpacingBefore(10);
		 */	
		
		
		PdfPTable table01 = new PdfPTable(16);
		table01.setWidths(new float[] { 1.7f, 1.7f, 1.9f, 2.5f, 2.5f, 1f, 1f, 2f, 1.5f, 1.5f, 1.5f, 1.5f,1.5f, 1.5f, 1.5f, 1.6f });
		table01.setSpacingBefore(10);
		
		PdfPCell hcell01;
		hcell01 = new PdfPCell(new Phrase("S.No", redFont));
		hcell01.setBorder(Rectangle.NO_BORDER);
		hcell01.setBackgroundColor(BaseColor.GRAY);
		hcell01.setHorizontalAlignment(Element.ALIGN_LEFT);
		table01.addCell(hcell01);
		
		hcell01 = new PdfPCell(new Phrase("Bill No", redFont));
		hcell01.setBorder(Rectangle.NO_BORDER);
		hcell01.setBackgroundColor(BaseColor.GRAY);
		hcell01.setHorizontalAlignment(Element.ALIGN_LEFT);
		table01.addCell(hcell01);
		
		hcell01 = new PdfPCell(new Phrase("RegNo", redFont));
		hcell01.setBorder(Rectangle.NO_BORDER);
		hcell01.setBackgroundColor(BaseColor.GRAY);
		hcell01.setHorizontalAlignment(Element.ALIGN_LEFT);
		table01.addCell(hcell01);
		
		hcell01 = new PdfPCell(new Phrase("Patient Name", redFont));
		hcell01.setBorder(Rectangle.NO_BORDER);
		hcell01.setBackgroundColor(BaseColor.GRAY);
		hcell01.setHorizontalAlignment(Element.ALIGN_LEFT);
		table01.addCell(hcell01);
		
		hcell01 = new PdfPCell(new Phrase("Medicine Name", redFont));
		hcell01.setBorder(Rectangle.NO_BORDER);
		hcell01.setBackgroundColor(BaseColor.GRAY);
		hcell01.setHorizontalAlignment(Element.ALIGN_LEFT);
		table01.addCell(hcell01);
		
		hcell01 = new PdfPCell(new Phrase("count", redFont));
		hcell01.setBorder(Rectangle.NO_BORDER);
		hcell01.setBackgroundColor(BaseColor.GRAY);
		hcell01.setHorizontalAlignment(Element.ALIGN_LEFT);
		table01.addCell(hcell01);
		
		hcell01 = new PdfPCell(new Phrase("MRP", redFont));
		hcell01.setBorder(Rectangle.NO_BORDER);
		hcell01.setBackgroundColor(BaseColor.GRAY);
		hcell01.setHorizontalAlignment(Element.ALIGN_LEFT);
		table01.addCell(hcell01);
		
		hcell01 = new PdfPCell(new Phrase("PaymentType", redFont));
		hcell01.setBorder(Rectangle.NO_BORDER);
		hcell01.setBackgroundColor(BaseColor.GRAY);
		hcell01.setHorizontalAlignment(Element.ALIGN_LEFT);
		table01.addCell(hcell01);
		
		hcell01 = new PdfPCell(new Phrase("Bill Amt", redFont));
		hcell01.setBorder(Rectangle.NO_BORDER);
		hcell01.setBackgroundColor(BaseColor.GRAY);
		hcell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
		table01.addCell(hcell01);
		
		hcell01 = new PdfPCell(new Phrase("Discount", redFont));
		hcell01.setBorder(Rectangle.NO_BORDER);
		hcell01.setBackgroundColor(BaseColor.GRAY);
		hcell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
		table01.addCell(hcell01);
		
		hcell01 = new PdfPCell(new Phrase("Due Amt", redFont));
		hcell01.setBorder(Rectangle.NO_BORDER);
		hcell01.setBackgroundColor(BaseColor.GRAY);
		hcell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
		table01.addCell(hcell01);
		
		hcell01 = new PdfPCell(new Phrase("Cash Amt", redFont));
		hcell01.setBorder(Rectangle.NO_BORDER);
		hcell01.setBackgroundColor(BaseColor.GRAY);
		hcell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
		table01.addCell(hcell01);
		
		hcell01 = new PdfPCell(new Phrase("Cheque Amt", redFont));
		hcell01.setBorder(Rectangle.NO_BORDER);
		hcell01.setBackgroundColor(BaseColor.GRAY);
		hcell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
		table01.addCell(hcell01);
		
		hcell01 = new PdfPCell(new Phrase("Card Amt", redFont));
		hcell01.setBorder(Rectangle.NO_BORDER);
		hcell01.setBackgroundColor(BaseColor.GRAY);
		hcell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
		table01.addCell(hcell01);
		
		hcell01 = new PdfPCell(new Phrase("Adv Amt", redFont));
		hcell01.setBorder(Rectangle.NO_BORDER);
		hcell01.setBackgroundColor(BaseColor.GRAY);
		hcell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
		table01.addCell(hcell01);
		
		hcell01 = new PdfPCell(new Phrase("Cash+Card Amt", redFont));
		hcell01.setBorder(Rectangle.NO_BORDER);
		hcell01.setBackgroundColor(BaseColor.GRAY);
		hcell01.setHorizontalAlignment(Element.ALIGN_RIGHT);
		table01.addCell(hcell01);
		
		
		cell112.setColspan(2);
		table01.setWidthPercentage(100f);
		cell112.addElement(table01);
		table.addCell(cell112);
		
		
		PdfPCell cell113=new PdfPCell();
		PdfPTable table011 = new PdfPTable(16);
		table011.setWidths(new float[] {  1.7f, 1.7f, 1.9f, 2.5f, 2.5f, 1f, 1f, 1.7f, 1.5f, 1.5f, 1.5f, 1.5f,1.5f, 1.5f, 1.5f, 1.5f});
		table011.setSpacingBefore(10);

		
	for(Sales salesList:sales) {
		
		totalDisc+=salesList.getDiscount();
		
		if(salesList.getPaymentType().equalsIgnoreCase("CASH")) {
			
			
			fee=salesList.getAmount();
            cashAmt=salesList.getAmount();
            chqAmt=0;
            cardAmt=0;
            totalFeeAmt+=fee;
            advAmt=0;
            totalCashAmt+=cashAmt;
            recpAmt=salesList.getAmount();
            dueAmt = recpAmt-cashAmt;
            totalDueAmt+=dueAmt;
            totalRecpAmt+=recpAmt;
            cashPlusCardDocAmt=0;
		}else if(salesList.getPaymentType().equalsIgnoreCase("CHEQUE")) {
			fee=salesList.getAmount();
            chqAmt=salesList.getAmount();
            cashAmt=0;
            cardAmt=0;
            advAmt=0;
            totalFeeAmt+=fee;
            totalChqAmt+=chqAmt;
            recpAmt=salesList.getAmount();
            dueAmt = recpAmt-chqAmt;
            totalDueAmt+=dueAmt;
            totalRecpAmt+=recpAmt;
            cashPlusCardDocAmt=0;
			
			
		}else if(salesList.getPaymentType().equalsIgnoreCase("ADVANCE")) {
			
			
            fee=salesList.getAmount();
            chqAmt=0;
            cashAmt=0;
            cardAmt=0;
            advAmt=salesList.getAmount();
            totalFeeAmt+=fee;
            totalChqAmt+=0;
            totalAdvcAmt+=advAmt;
            recpAmt=0;
            dueAmt = recpAmt-chqAmt;
            totalDueAmt+=dueAmt;
            totalRecpAmt+=recpAmt;
            totalAdvcAmt+=advAmt;
            cashPlusCardDocAmt=0;
		}else if(salesList.getPaymentType().equalsIgnoreCase("CARD")) {
			
			
            fee=salesList.getAmount();
            cardAmt=salesList.getAmount();
            cashAmt=0;
            chqAmt=0;
            totalFeeAmt+=fee;
            advAmt=0;
            totalCardAmt+=cardAmt;
            recpAmt=salesList.getAmount();
            dueAmt = recpAmt-cardAmt;
            totalDueAmt+=dueAmt;
            totalRecpAmt+=recpAmt;
            cashPlusCardDocAmt=0;
		}else if(salesList.getPaymentType().equalsIgnoreCase("DUE")) {
			
			
			fee=salesList.getAmount();
            chqAmt=0;
            cashAmt=0;
            cardAmt=0;
            advAmt=0;
            totalFeeAmt+=fee;
            totalChqAmt+=0;
            totalAdvcAmt+=advAmt;
            recpAmt=0;
            dueAmt =salesList.getAmount();
            totalDueAmt+=dueAmt;
            totalRecpAmt+=recpAmt;
            cashPlusCardDocAmt=0;
		}else if(salesList.getPaymentType().equalsIgnoreCase("Cash+Card")) {
			 fee=salesList.getAmount();
             chqAmt=0;
             cashAmt=0;
             cardAmt=0;
             advAmt=0;
             cashPlusCardDocAmt=salesList.getAmount();
             totalCashPlusCardDocAmt+=cashPlusCardDocAmt;
             totalFeeAmt+=fee;
             totalChqAmt+=0;
             totalAdvcAmt+=advAmt;
             recpAmt=fee;
             dueAmt =0;
             totalDueAmt+=dueAmt;
             totalRecpAmt+=recpAmt;

			
			
		}
		
		
		

					
		PdfPCell hcell011;
		
		hcell011 = new PdfPCell(new Phrase(salesList.getSaleNo(), redFont));
		hcell011.setBorder(Rectangle.NO_BORDER);
		hcell011.setHorizontalAlignment(Element.ALIGN_LEFT);
		table011.addCell(hcell011);
		
		hcell011 = new PdfPCell(new Phrase(salesList.getBillNo(), redFont));
		hcell011.setBorder(Rectangle.NO_BORDER);
		hcell011.setHorizontalAlignment(Element.ALIGN_LEFT);
		table011.addCell(hcell011);
		
		hcell011 = new PdfPCell(new Phrase(salesList.getPatientRegistration().getRegId(), redFont));
		hcell011.setBorder(Rectangle.NO_BORDER);
		hcell011.setHorizontalAlignment(Element.ALIGN_LEFT);
		table011.addCell(hcell011);
		
		hcell011 = new PdfPCell(new Phrase(salesList.getName(), redFont));
		hcell011.setBorder(Rectangle.NO_BORDER);
		hcell011.setHorizontalAlignment(Element.ALIGN_LEFT);
		table011.addCell(hcell011);
		
		hcell011 = new PdfPCell(new Phrase(salesList.getMedicineName(), redFont));
		hcell011.setBorder(Rectangle.NO_BORDER);
		hcell011.setHorizontalAlignment(Element.ALIGN_LEFT);
		table011.addCell(hcell011);
		
		hcell011 = new PdfPCell(new Phrase(String.valueOf(salesList.getQuantity()), redFont));
		hcell011.setBorder(Rectangle.NO_BORDER);
		hcell011.setHorizontalAlignment(Element.ALIGN_LEFT);
		table011.addCell(hcell011);
		
		hcell011 = new PdfPCell(new Phrase(String.valueOf(salesList.getMrp()), redFont));
		hcell011.setBorder(Rectangle.NO_BORDER);
		hcell011.setHorizontalAlignment(Element.ALIGN_LEFT);
		table011.addCell(hcell011);
		
		hcell011 = new PdfPCell(new Phrase(salesList.getPaymentType(), redFont));
		hcell011.setBorder(Rectangle.NO_BORDER);
		hcell011.setHorizontalAlignment(Element.ALIGN_LEFT);
		table011.addCell(hcell011);


		hcell011 = new PdfPCell(new Phrase(String.valueOf(salesList.getAmount()), redFont));
		hcell011.setBorder(Rectangle.NO_BORDER);
		hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
		table011.addCell(hcell011);
		
		hcell011 = new PdfPCell(new Phrase(String.valueOf(salesList.getDiscount()), redFont));
		hcell011.setBorder(Rectangle.NO_BORDER);
		hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
		table011.addCell(hcell011);
		
		hcell011 = new PdfPCell(new Phrase(String.valueOf(dueAmt), redFont));
		hcell011.setBorder(Rectangle.NO_BORDER);
		hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
		table011.addCell(hcell011);
		
		hcell011 = new PdfPCell(new Phrase(String.valueOf(cashAmt), redFont));
		hcell011.setBorder(Rectangle.NO_BORDER);
		hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
		table011.addCell(hcell011);
		
		hcell011 = new PdfPCell(new Phrase(String.valueOf(chqAmt), redFont));
		hcell011.setBorder(Rectangle.NO_BORDER);
		hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
		table011.addCell(hcell011);
		
		hcell011 = new PdfPCell(new Phrase(String.valueOf(cardAmt), redFont));
		hcell011.setBorder(Rectangle.NO_BORDER);
		hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
		table011.addCell(hcell011);
		
		hcell011 = new PdfPCell(new Phrase(String.valueOf(advAmt), redFont));
		hcell011.setBorder(Rectangle.NO_BORDER);
		hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
		table011.addCell(hcell011);
		
		hcell011 = new PdfPCell(new Phrase(String.valueOf(cashPlusCardDocAmt), redFont));
		hcell011.setBorder(Rectangle.NO_BORDER);
		hcell011.setHorizontalAlignment(Element.ALIGN_RIGHT);
		table011.addCell(hcell011);

	
	}
	cell113.setColspan(2);
	table011.setWidthPercentage(100f);
	cell113.addElement(table011);
	table.addCell(cell113);


	PdfPCell cell1131=new PdfPCell();
	PdfPTable table0111 = new PdfPTable(16);
	table0111.setWidths(new float[] {  1.7f, 1.7f, 1.9f, 2.5f, 2.5f, 1f, 1f, 1.7f, 1.5f, 1.5f, 1.5f, 1.5f,1.5f, 1.5f, 1.5f, 1.5f});
	table0111.setSpacingBefore(10);


	
PdfPCell hcell0111;

hcell0111 = new PdfPCell(new Phrase("Total", redFont));
hcell0111.setBorder(Rectangle.NO_BORDER);
hcell0111.setHorizontalAlignment(Element.ALIGN_LEFT);
table0111.addCell(hcell0111);

hcell0111 = new PdfPCell(new Phrase("", redFont));
hcell0111.setBorder(Rectangle.NO_BORDER);
hcell0111.setHorizontalAlignment(Element.ALIGN_LEFT);
table0111.addCell(hcell0111);

hcell0111 = new PdfPCell(new Phrase("", redFont));
hcell0111.setBorder(Rectangle.NO_BORDER);
hcell0111.setHorizontalAlignment(Element.ALIGN_LEFT);
table0111.addCell(hcell0111);

hcell0111 = new PdfPCell(new Phrase("", redFont));
hcell0111.setBorder(Rectangle.NO_BORDER);
hcell0111.setHorizontalAlignment(Element.ALIGN_LEFT);
table0111.addCell(hcell0111);

hcell0111 = new PdfPCell(new Phrase("", redFont));
hcell0111.setBorder(Rectangle.NO_BORDER);
hcell0111.setHorizontalAlignment(Element.ALIGN_LEFT);
table0111.addCell(hcell0111);

hcell0111 = new PdfPCell(new Phrase(String.valueOf(""), redFont));
hcell0111.setBorder(Rectangle.NO_BORDER);
hcell0111.setHorizontalAlignment(Element.ALIGN_LEFT);
table0111.addCell(hcell0111);

hcell0111 = new PdfPCell(new Phrase(String.valueOf(""), redFont));
hcell0111.setBorder(Rectangle.NO_BORDER);
hcell0111.setHorizontalAlignment(Element.ALIGN_LEFT);
table0111.addCell(hcell0111);

hcell0111 = new PdfPCell(new Phrase("", redFont));
hcell0111.setBorder(Rectangle.NO_BORDER);
hcell0111.setHorizontalAlignment(Element.ALIGN_LEFT);
table0111.addCell(hcell0111);


hcell0111 = new PdfPCell(new Phrase(String.valueOf(totalFeeAmt), redFont));
hcell0111.setBorder(Rectangle.NO_BORDER);
hcell0111.setHorizontalAlignment(Element.ALIGN_RIGHT);
table0111.addCell(hcell0111);

hcell0111 = new PdfPCell(new Phrase(String.valueOf(totalDisc), redFont));
hcell0111.setBorder(Rectangle.NO_BORDER);
hcell0111.setHorizontalAlignment(Element.ALIGN_RIGHT);
table0111.addCell(hcell0111);

hcell0111 = new PdfPCell(new Phrase(String.valueOf(totalDueAmt), redFont));
hcell0111.setBorder(Rectangle.NO_BORDER);
hcell0111.setHorizontalAlignment(Element.ALIGN_RIGHT);
table0111.addCell(hcell0111);

hcell0111 = new PdfPCell(new Phrase(String.valueOf(totalCashAmt), redFont));
hcell0111.setBorder(Rectangle.NO_BORDER);
hcell0111.setHorizontalAlignment(Element.ALIGN_RIGHT);
table0111.addCell(hcell0111);

hcell0111 = new PdfPCell(new Phrase(String.valueOf(totalChqAmt), redFont));
hcell0111.setBorder(Rectangle.NO_BORDER);
hcell0111.setHorizontalAlignment(Element.ALIGN_RIGHT);
table0111.addCell(hcell0111);

hcell0111 = new PdfPCell(new Phrase(String.valueOf(totalCardAmt), redFont));
hcell0111.setBorder(Rectangle.NO_BORDER);
hcell0111.setHorizontalAlignment(Element.ALIGN_RIGHT);
table0111.addCell(hcell0111);

hcell0111 = new PdfPCell(new Phrase(String.valueOf(totalAdvcAmt), redFont));
hcell0111.setBorder(Rectangle.NO_BORDER);
hcell0111.setHorizontalAlignment(Element.ALIGN_RIGHT);
table0111.addCell(hcell0111);

hcell0111 = new PdfPCell(new Phrase(String.valueOf(totalCashPlusCardDocAmt), redFont));
hcell0111.setBorder(Rectangle.NO_BORDER);
hcell0111.setHorizontalAlignment(Element.ALIGN_RIGHT);
table0111.addCell(hcell0111);

cell1131.setColspan(2);
table0111.setWidthPercentage(100f);
cell1131.addElement(table0111);
table.addCell(cell1131);

	
			
	
			document.add(table);

	document.close();

	System.out.println("finished");
	pdfByte = byteArrayOutputStream.toByteArray();
	String uri = ServletUriComponentsBuilder.fromCurrentContextPath().path("/v1/sales/viewFile/")
			.path(salesPaymentPdfServiceImpl.getNextId()).toUriString();

	salesPaymentPdf = new SalesPaymentPdf();
	salesPaymentPdf.setFileName("Sales wise medicine details");
	salesPaymentPdf.setFileuri(uri);
	salesPaymentPdf.setPid(salesPaymentPdfServiceImpl.getNextId());
	salesPaymentPdf.setData(pdfByte);

	salesPaymentPdfServiceImpl.save(salesPaymentPdf);

} catch (Exception e) {
	Logger.error(e.getMessage());
}		return salesPaymentPdf;
}




@RequestMapping(value = "/userWiseIpOpAllUsers", method = RequestMethod.POST)
 public SalesPaymentPdf getUserWiseIpOpAllUsers(@RequestBody Map<String, Object> userShift,Principal principal) {
        
        Map<String, Object> user = userShift;
        
        String name = (String) user.get("soldBy");
      /*  String[] a=name.split(" ");
        String firstName=a[0];
        String lastName=a[1];*/
        
        String[] docName=name.split("-");
        
        List<User> user1 = userServiceImpl.findByRoleId();
        
        float gGAmt=0;
        float gConcAmt=0;
        float gNetAmt=0;
        float gAdvAmt=0;
        float gRecAmt=0;
        float gCashAmt=0;
        float gCardAmt=0;
        float gchqAmt=0;
        float gCashPlusCardAmt=0;
        float gDueAmt=0;
        
        
        SalesPaymentPdf salesPaymentPdf = null;
        //CreatedBy (Security)
        User userSecurity=userServiceImpl.findByUserName(principal.getName());
        String createdBy=userSecurity.getFirstName()+" "+userSecurity.getLastName();
        
     
    
        try {
            byte[] pdfByte = null;
            ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
            Document document = new Document(PageSize.A4.rotate());
            Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 10, Font.NORMAL);
            Font redFont1 = new Font(Font.FontFamily.TIMES_ROMAN, 10, Font.NORMAL,BaseColor.RED);
            Font headFont = new Font(Font.FontFamily.TIMES_ROMAN, 10, Font.BOLD);
            Font headFont1 = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD);
            PdfWriter writer = PdfWriter.getInstance(document, byteArrayOutputStream);
            HeaderFooterPageEvent event = new HeaderFooterPageEvent();
            writer.setPageEvent(event);
            Resource fileResourcee = resourceLoader.getResource("classpath:udbhava.png");
            document.open();
            PdfPTable table = new PdfPTable(2);
            Image img = Image.getInstance(fileResourcee.getFile().getAbsolutePath());
            img.scaleAbsolute(75, 95);
            table.setWidthPercentage(105f);
            Phrase pq = new Phrase(new Chunk(img, 5, -80));
        	//shantharam addr
            pq.add(new Chunk(
                    "      ",
                    redFont));
            
            
            PdfPTable table212 = new PdfPTable(1);
            table212.setWidths(new float[] { 4f });
            table212.setSpacingBefore(10);
            PdfPCell hcell192;
            hcell192 = new PdfPCell(new Phrase(ConstantValues.HOSPITAL_NAME, headFont1));
            hcell192.setBorder(Rectangle.NO_BORDER);
            hcell192.setHorizontalAlignment(Element.ALIGN_CENTER);
            table212.addCell(hcell192);
            
            PdfPCell cellp = new PdfPCell(pq);
            
            cellp.setPaddingBottom(-10f);
            PdfPCell cell1 = new PdfPCell();
            
            //cell1.setBorder(Rectangle.NO_BORDER);
            //cell1.setHorizontalAlignment(Element.ALIGN_CENTER);
            //cell1.setColspan(2);
            cell1.addElement(table212);
            cell1.addElement(pq);
            cell1.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell1.setColspan(2);
            PdfPTable table21 = new PdfPTable(1);
            table21.setWidths(new float[] { 4f });
            table21.setSpacingBefore(10);
            PdfPCell hcell19;
            hcell19 = new PdfPCell(new Phrase("User Wise IP and OP Detailed Collection Report", headFont1));
            hcell19.setBorder(Rectangle.NO_BORDER);
            hcell19.setHorizontalAlignment(Element.ALIGN_CENTER);
            table21.addCell(hcell19);
            
            // calender format date
            String from = user.get("fromDate").toString();
            Timestamp timestamp = Timestamp.valueOf(from);
            DateFormat dateFormat = new SimpleDateFormat("dd-MMM-yyyy hh.mm aa ");
            Calendar calendar = Calendar.getInstance();
            calendar.setTimeInMillis(timestamp.getTime());
            String from1 = dateFormat.format(calendar.getTime());
            String to = user.get("toDate").toString();
            
            Timestamp timestamp1 = Timestamp.valueOf(to);
            DateFormat dateFormat1 = new SimpleDateFormat("dd-MMM-yyyy hh.mm aa ");
            Calendar calendar1 = Calendar.getInstance();
            calendar1.setTimeInMillis(timestamp1.getTime());
            String to1 = dateFormat1.format(calendar1.getTime());
            
            // Display a date in day, month, year format
            Date date = Calendar.getInstance().getTime();
            DateFormat formatter = new SimpleDateFormat("dd-MMM-yyyy hh.mm aa");
            String today = formatter.format(date).toString();
            
            PdfPCell hcell20;
            hcell20 = new PdfPCell(new Phrase("From Dt  : " + from1 + "           " + "Till Dt  : " + to1, redFont));
            hcell20.setBorder(Rectangle.NO_BORDER);
            hcell20.setHorizontalAlignment(Element.ALIGN_CENTER);
            table21.addCell(hcell20);
            
            PdfPTable table3 = new PdfPTable(2);
            table3.setWidths(new float[] { 5f, 4f });
            table3.setSpacingBefore(10);
            
            PdfPCell hcell111;
            
            hcell111 = new PdfPCell(new Phrase("Printed By          :  " + createdBy , redFont));
            hcell111.setBorder(Rectangle.NO_BORDER);
            hcell111.setPaddingLeft(-70f);
            table3.addCell(hcell111);
            hcell111 = new PdfPCell(new Phrase("Printed Date & Time    :  " + today, redFont));
            hcell111.setBorder(Rectangle.NO_BORDER);
            hcell111.setPaddingRight(-70f);
            
            hcell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table3.addCell(hcell111);
            cell1.addElement(table21);
            cell1.addElement(table3);
            
          /*  PdfPTable table111 = new PdfPTable(1);
            table111.setWidths(new float[] { 7});
            
            PdfPCell hcell12;
            hcell12 = new PdfPCell(new Phrase("\n UserName  :"+docName[0], headFont));
            hcell12.setBorder(Rectangle.NO_BORDER);
            hcell12.setHorizontalAlignment(Element.ALIGN_LEFT);
            hcell12.setPaddingLeft(-70f);*\
            table111.addCell(hcell12);
            cell1.addElement(table111);
            */
            PdfPTable table1 = new PdfPTable(11);
			table1.setWidths(new float[] {  6.6f, 4.5f, 2.7f, 4f, 4f, 4f, 4f, 3.5f, 4f,4.5f,3f });
			
			PdfPCell hcell;
			hcell = new PdfPCell(new Phrase("Scroll Type", redFont1));
			hcell.setBorder(Rectangle.NO_BORDER);
			hcell.setBackgroundColor(BaseColor.CYAN);
			hcell.setHorizontalAlignment(Element.ALIGN_LEFT);
			table1.addCell(hcell);


			hcell = new PdfPCell(new Phrase("G.Amt", redFont1));
			hcell.setBorder(Rectangle.NO_BORDER);
			hcell.setBackgroundColor(BaseColor.CYAN);
			hcell.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell.setPaddingRight(36f);
			table1.addCell(hcell);

			hcell = new PdfPCell(new Phrase("Conc.", redFont1));
			hcell.setBorder(Rectangle.NO_BORDER);
			hcell.setBackgroundColor(BaseColor.CYAN);
			hcell.setHorizontalAlignment(Element.ALIGN_LEFT);
			hcell.setPaddingRight(18f);
			table1.addCell(hcell);

			hcell = new PdfPCell(new Phrase("Net Amt", redFont1));
			hcell.setBorder(Rectangle.NO_BORDER);
			hcell.setBackgroundColor(BaseColor.CYAN);
			hcell.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell.setPaddingRight(19f);
			table1.addCell(hcell);

			hcell = new PdfPCell(new Phrase("Adv. Amt", redFont1));
			hcell.setBorder(Rectangle.NO_BORDER);
			hcell.setBackgroundColor(BaseColor.CYAN);
			hcell.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell.setPaddingRight(18f);
			table1.addCell(hcell);

			hcell = new PdfPCell(new Phrase("Rec.Amt", redFont1));
			hcell.setBorder(Rectangle.NO_BORDER);
			hcell.setBackgroundColor(BaseColor.CYAN);
			hcell.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell.setPaddingRight(19f);
			table1.addCell(hcell);

			hcell = new PdfPCell(new Phrase("Cash Amt", redFont1));
			hcell.setBorder(Rectangle.NO_BORDER);
			hcell.setBackgroundColor(BaseColor.CYAN);
			hcell.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell.setPaddingRight(17f);
			table1.addCell(hcell);

			hcell = new PdfPCell(new Phrase("Chq.Amt", redFont1));
			hcell.setBorder(Rectangle.NO_BORDER);
			hcell.setBackgroundColor(BaseColor.CYAN);
			hcell.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell.setPaddingRight(21f);
			table1.addCell(hcell);

			hcell = new PdfPCell(new Phrase("Card Amt", redFont1));
			hcell.setBorder(Rectangle.NO_BORDER);
			hcell.setBackgroundColor(BaseColor.CYAN);
			hcell.setHorizontalAlignment(Element.ALIGN_RIGHT);
			hcell.setPaddingRight(13f);
			table1.addCell(hcell);
			
			hcell = new PdfPCell(new Phrase("Cash+Card Amt", redFont1));
			hcell.setBorder(Rectangle.NO_BORDER);
			hcell.setBackgroundColor(BaseColor.CYAN);
			hcell.setHorizontalAlignment(Element.ALIGN_RIGHT);
			table1.addCell(hcell);
			
			hcell = new PdfPCell(new Phrase("Due Amt", redFont1));
			hcell.setBorder(Rectangle.NO_BORDER);
			hcell.setBackgroundColor(BaseColor.CYAN);
			hcell.setHorizontalAlignment(Element.ALIGN_RIGHT);
			table1.addCell(hcell);
			
			table1.setWidthPercentage(100f);
			cell1.addElement(table1);

			for(User uid:user1)
		     {
		        List<PatientRegistration> patientRegistration = patientRegistrationRepository.findUserWiseIpOpDetailed(user.get("fromDate"), user.get("toDate"),uid.getUserId());
		        System.out.println("----------------------------patient"+patientRegistration);
		        
		        
            
            PdfPTable table111 = new PdfPTable(1);
            table111.setWidths(new float[] { 7});
            
            PdfPCell hcell12;
            hcell12 = new PdfPCell(new Phrase("\n UserName  :"+uid.getFirstName()+" "+uid.getLastName(), headFont));
            hcell12.setBorder(Rectangle.NO_BORDER);
            hcell12.setHorizontalAlignment(Element.ALIGN_LEFT);
            hcell12.setPaddingLeft(-70f);
            table111.addCell(hcell12);
            cell1.addElement(table111);
            
            
            PdfPTable table12 = new PdfPTable(11);
			table12.setWidths(new float[] {  7.5f, 4f, 1.5f, 4f, 4f, 4f, 4f, 3f, 4f,4.5f,3f });
			table12.setSpacingBefore(10);
			table12.setWidthPercentage(100f);
			
			//--------------------------OSP BILLS------------------------------
			
			float otherOspFee = 0;
            float otherOspFees=0;
            float cashOspAmt1 = 0;
            float cashOspAmt2=0;
            float chqOspAmt1 = 0;
            float chqOspAmt2=0;
            float cardOspAmt1 = 0;
            float cardOspAmt2=0;
            float opAdvOspAmt=0;
            float opAdvOspAmt1=0;
            float totalFeeOspAmt1 = 0;
            float totalFeeOspAmt2=0;
            float totalCashOspAmt1 = 0;
            float totalCashOspAmt2=0;
            float totalCardOspAmt1 = 0;
            float totalCardOspAmt2=0;
            float totalChqOspAmt1 = 0;
            float totalChqOspAmt2=0;
            float totalDueOspAmt1 = 0;
            float totalDueOspAmt2=0;
            float dueOspAmt1=0;
            float dueOspAmt2=0;
            float recpOspAmt1=0;
            float recpOspAmt2=0;
            float totalOspRecAmt1=0;
            float totalOspRecAmt2=0;
            float totalOspAdvAmt=0;
            float totalOspAdvAmt1=0;
            String umr=null;
            String typeOfCharge=null;
            String patientType=null;
            String patientTypes=null;
            String pId = null;
            String pRegId=null;
            String cServiceId=null;
            String patientName=null;
            String consultant=null;
            
            String ospId=null;
            float totalcashPlusCardOspAmt1=0;
            float cashPlusCardOspAmt=0;
            float cashPlusCardOspAmt2=0;
            float totalcashPlusCardOspAmt=0;
                     
            
            
            String s=null;
            
        	
        	List<OspService> ospService=ospServiceRepository.findByUserDetails(user.get("fromDate"), user.get("toDate"),uid.getUserId());
        	
        	
					            if(!ospService.isEmpty())
					            {
					            	for(OspService osp : ospService)
					            	{
					            		ospId=osp.getOspServiceId();
					            		
					            		
					            		patientName=osp.getPatientName();
					            		
					            		User userOsp=userServiceImpl.findOneByUserId(osp.getRefferedById());	            		
					            		consultant=userOsp.getFirstName()+" "+userOsp.getLastName();
					            		List<OspService> ospServices=ospServiceRepository.findServices(ospId);
				            			
					            			
							            		
							            			
							                					if(osp.getNetAmount()!=0)
							                					{
							                		
							                						if(osp.getOspServiceId()!=null)
							                						{
                							
                    	
								                								if(osp.getPaymentType().equalsIgnoreCase("CASH"))
								                								{
								                									
								                									otherOspFee=osp.getNetAmount();
								                									cashOspAmt1=osp.getNetAmount();
								                									chqOspAmt1=0;
								                									cardOspAmt1=0;
								                									totalFeeOspAmt1+=otherOspFee;
								                									totalCashOspAmt1+=cashOspAmt1;
								                									cashPlusCardOspAmt=0;
								                									recpOspAmt1=otherOspFee;
								                									dueOspAmt1 = 0;
								                									totalDueOspAmt1+=dueOspAmt1;
								                									totalOspRecAmt1+=recpOspAmt1;
								                                
								                               
									                    		
								                								}
								                								else if(osp.getPaymentType().equalsIgnoreCase("CHQ")||osp.getPaymentType().equalsIgnoreCase("CHEQUE"))
								                								{
																		              otherOspFee=osp.getNetAmount();
																		              chqOspAmt1=osp.getNetAmount();
																		              cashOspAmt1=0;
																		              cardOspAmt1=0;
																		              cashPlusCardOspAmt=0;
																		              totalFeeOspAmt1+=otherOspFee;
																		              totalChqOspAmt1+=chqOspAmt1;
																		              recpOspAmt1=otherOspFee;
																		              dueOspAmt1 =0;
																		              totalDueOspAmt1+=dueOspAmt1;
																		              totalOspRecAmt1+=recpOspAmt1;
								                               
								                								}
													                            else if(osp.getPaymentType().equalsIgnoreCase("DEBIT CARD") || osp.getPaymentType().equalsIgnoreCase("CREDIT CARD") || osp.getPaymentType().equalsIgnoreCase("CARD"))
													                            {
													                            	otherOspFee=osp.getNetAmount();
													                                cardOspAmt1=osp.getNetAmount();
													                                cashOspAmt1=0;
													                                chqOspAmt1=0;
													                                cashPlusCardOspAmt=0;
													                                totalFeeOspAmt1+=otherOspFee;
													                                totalCardOspAmt1+=cardOspAmt1;
													                                recpOspAmt1=otherOspFee;
													                                dueOspAmt1 =0;
													                                totalDueOspAmt1+=dueOspAmt1;
													                                totalOspRecAmt1+=recpOspAmt1;
													                               
													                            
													                            }
													                            else if(osp.getPaymentType().equalsIgnoreCase("ADVANCE"))
													                            {
													                                
													                                
													                            	otherOspFee=osp.getNetAmount();
													                            	cashOspAmt1=0;
													                                cardOspAmt1=0;
													                                chqOspAmt1=0;
													                                opAdvOspAmt=otherOspFee;
													                                cashPlusCardOspAmt=0;
													                                totalFeeOspAmt1+=opAdvOspAmt;
													                                recpOspAmt1=0;
													                                dueOspAmt1 = 0;
													                                totalOspAdvAmt+=opAdvOspAmt;
													                                totalCardOspAmt1=0;
													                                totalDueOspAmt1+=dueOspAmt1;
													                                totalOspRecAmt1+=recpOspAmt1;
													                            } 
													                            else if(osp.getPaymentType().equalsIgnoreCase("DUE"))
													                            {
													                                
													                                
													                            	otherOspFee=0;
													                            	cashOspAmt1=0;
													                                cardOspAmt1=0;
													                                chqOspAmt1=0;
													                                cashPlusCardOspAmt=0;
													                                opAdvOspAmt=otherOspFee;
													                                totalFeeOspAmt1+=otherOspFee;
													                                recpOspAmt1=0;
													                                dueOspAmt1 =osp.getNetAmount();
													                                totalOspAdvAmt+=opAdvOspAmt;
													                                totalCardOspAmt1=0;
													                                totalDueOspAmt1+=dueOspAmt1;
													                                totalOspRecAmt1+=recpOspAmt1;
													                                
													                            }
													                            else if(osp.getPaymentType().equalsIgnoreCase("CASH+CARD"))
													                            {
													                                
													                                
													                            	otherOspFee=osp.getNetAmount();
													                            	cashOspAmt1=0;
													                                cardOspAmt1=0;
													                                chqOspAmt1=0;
													                                opAdvOspAmt=0;
													                                totalFeeOspAmt1+=otherOspFee;
													                                recpOspAmt1=otherOspFee;
													                                dueOspAmt1 =0;
													                                cashPlusCardOspAmt=osp.getNetAmount();
													                                totalOspAdvAmt+=opAdvOspAmt;
													                                totalcashPlusCardOspAmt+=cashPlusCardOspAmt;
													                                totalCardOspAmt1=0;
													                                totalDueOspAmt1+=dueOspAmt1;
													                                totalOspRecAmt1+=recpOspAmt1;
													                                
													                            
                          
                								
    	                						
                						}   
    	                					
							                					}
							                				
                						}
            		 
                					
                						
                					
                				
	    		     	              
    		     	               
					            	}
					            		
					                					
					            		
						            			
                
            	}
            
                

			PdfPCell cell03;
			cell03 = new PdfPCell(new Phrase("OSP BILLS", headFont));
			cell03.setBorder(Rectangle.NO_BORDER);
			cell03.setHorizontalAlignment(Element.ALIGN_LEFT);
			table12.addCell(cell03);

			cell03 = new PdfPCell(new Phrase(String.valueOf(totalFeeOspAmt1), redFont));
			cell03.setBorder(Rectangle.NO_BORDER);
			cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
			cell03.setPaddingRight(42f);
			table12.addCell(cell03);
		
			cell03 = new PdfPCell(new Phrase("0", redFont));
			cell03.setBorder(Rectangle.NO_BORDER);
			cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
			cell03.setPaddingRight(12f);
			table12.addCell(cell03);

			cell03 = new PdfPCell(new Phrase(String.valueOf(totalFeeOspAmt1), redFont));
			cell03.setBorder(Rectangle.NO_BORDER);
			cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
			cell03.setPaddingRight(20f);
			table12.addCell(cell03);
		
			cell03 = new PdfPCell(new Phrase(String.valueOf(totalOspAdvAmt), redFont));
			cell03.setBorder(Rectangle.NO_BORDER);
			cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
			cell03.setPaddingRight(21f);
			table12.addCell(cell03);

			cell03 = new PdfPCell(new Phrase(String.valueOf(totalOspRecAmt1), redFont));
			cell03.setBorder(Rectangle.NO_BORDER);
			cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
			cell03.setPaddingRight(20f);
			table12.addCell(cell03);
		
			cell03 = new PdfPCell(new Phrase(String.valueOf(totalCashOspAmt1), redFont));
			cell03.setBorder(Rectangle.NO_BORDER);
			cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
			cell03.setPaddingRight(19f);
			table12.addCell(cell03);

			cell03 = new PdfPCell(new Phrase(String.valueOf(totalChqOspAmt1), redFont));
			cell03.setBorder(Rectangle.NO_BORDER);
			cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
			cell03.setPaddingRight(21f);
			table12.addCell(cell03);
		
			cell03 = new PdfPCell(new Phrase(String.valueOf(totalCardOspAmt1), redFont));
			cell03.setBorder(Rectangle.NO_BORDER);
			cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
			cell03.setPaddingRight(13f);
			table12.addCell(cell03);
			
			cell03 = new PdfPCell(new Phrase(String.valueOf(totalcashPlusCardOspAmt), redFont));
			cell03.setBorder(Rectangle.NO_BORDER);
			cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
			table12.addCell(cell03);

			cell03 = new PdfPCell(new Phrase(String.valueOf(totalDueOspAmt1), redFont));
			cell03.setBorder(Rectangle.NO_BORDER);
			cell03.setHorizontalAlignment(Element.ALIGN_RIGHT);
			table12.addCell(cell03);

			cell1.addElement(table12);
            
            
            
            
//-------------------- OP BILLS ----------------------------------------            
          
            PdfPTable table121 = new PdfPTable(11);
			table121.setWidths(new float[] {  7.5f, 4f, 1.5f, 4f, 4f, 4f, 4f, 3f, 4f,4.5f,3f });
			table121.setSpacingBefore(10);
			table121.setWidthPercentage(100f);
			
			float otherFee = 0;
			float cashAmt1 = 0;
			float chqAmt1 = 0;
			float cardAmt1 = 0;
			float totalFeeAmt1 = 0;
			float totalCashAmt1 = 0;
			float totalCardAmt1 = 0;
			float totalChqAmt1 = 0;
			float totalDueAmt1 = 0;
			float dueAmt1=0;
			float recpAmt1=0;
			float totalRecAmt1=0;
			float opAdvAmt=0;
			float totalOpAdvAmt=0;
			float cashPlusCardAmt=0;
	        float totalcashPlusCardAmt=0;
			/*String patientType=null;
			String typeOfCharge=null;
			String pId = null;*/
			
			if(!patientRegistration.isEmpty())
            {
            for(PatientRegistration pReg : patientRegistration)
            {
                patientType=pReg.getpType();
                pId = pReg.getRegId();
                //Set<PatientPayment> patientPayments = pReg.getPatientPayment();
                
                 
                Set<PatientPayment> patientPayments = paymentRepository.findByPatientRegistration(pReg);
               
                List<ChargeBill> charge=chargeBillRepository.findByPatRegId(pReg);
                for(ChargeBill pp : charge)
                {
                	
                	if(pp.getAmount()!=0)
                	{
               
                    if(patientType.equalsIgnoreCase("OUTPATIENT"))
                    {
                    	if(pp.getServiceId()!=null)
                    	{
                       
                            if(pp.getPaymentType().equalsIgnoreCase("CASH"))
                            {
                                
                                otherFee=pp.getNetAmount();
                                cashAmt1=pp.getNetAmount();
                                chqAmt1=0;
                                cardAmt1=0;
                                cashPlusCardAmt=0;
                                totalFeeAmt1+=otherFee;
                                totalCashAmt1+=cashAmt1;
                                recpAmt1=pp.getNetAmount();
                                dueAmt1 = recpAmt1-cashAmt1;
                                totalDueAmt1+=dueAmt1;
                                totalRecAmt1+=recpAmt1;
                            }
                            else if(pp.getPaymentType().equalsIgnoreCase("CHQ")||pp.getPaymentType().equalsIgnoreCase("CHEQUE"))
                            {
                                otherFee=pp.getNetAmount();
                                chqAmt1=pp.getNetAmount();
                                cashAmt1=0;
                                cardAmt1=0;
                                cashPlusCardAmt=0;
                                totalFeeAmt1+=otherFee;
                                totalChqAmt1+=chqAmt1;
                                recpAmt1=pp.getNetAmount();
                                dueAmt1 = recpAmt1-chqAmt1;
                                totalDueAmt1+=dueAmt1;
                                totalRecAmt1+=recpAmt1;
                            }
                            else if(pp.getPaymentType().equalsIgnoreCase("DEBIT CARD") || pp.getPaymentType().equalsIgnoreCase("CREDIT CARD") || pp.getPaymentType().equalsIgnoreCase("CARD"))
                            {
                                otherFee=pp.getNetAmount();
                                cardAmt1=pp.getNetAmount();
                                cashAmt1=0;
                                chqAmt1=0;
                                cashPlusCardAmt=0;
                                totalFeeAmt1+=otherFee;
                                totalCardAmt1+=cardAmt1;
                                recpAmt1=pp.getNetAmount();
                                dueAmt1 = recpAmt1-cardAmt1;
                                totalDueAmt1+=dueAmt1;
                                totalRecAmt1+=recpAmt1;
                            
                            }else if(pp.getPaymentType().equalsIgnoreCase("ADVANCE"))
                            {
                                
                                
                            	otherFee=pp.getNetAmount();
                            	cashAmt1=0;
                                cardAmt1=0;
                                chqAmt1=0;
                                opAdvAmt=otherFee;
                                totalFeeAmt1+=opAdvAmt;
                                recpAmt1=0;
                                dueAmt1 = 0;
                                cashPlusCardAmt=0;
                                totalOpAdvAmt+=opAdvAmt;
                                totalCardAmt1+=0;
                                totalDueAmt1+=dueAmt1;
                                totalRecAmt1+=recpAmt1;
                                
                            }
                            else if(pp.getPaymentType().equalsIgnoreCase("DUE"))
                            {
                                
                                
                            	otherFee=0;
                            	cashAmt1=0;
                                cardAmt1=0;
                                chqAmt1=0;
                                opAdvAmt=0;
                                totalFeeAmt1+=otherFee;
                                recpAmt1=0;
                                cashPlusCardAmt=0;
                                dueAmt1 =pp.getNetAmount();
                                totalOpAdvAmt+=opAdvAmt;
                                totalCardAmt1+=0;
                                totalDueAmt1+=dueAmt1;
                                totalRecAmt1+=recpAmt1;
                                
                            }
                            else if(pp.getPaymentType().equalsIgnoreCase("CASH+CARD"))
                            {
                                
                                
                            	otherFee=pp.getNetAmount();
                            	cashAmt1=0;
                                cardAmt1=0;
                                chqAmt1=0;
                                opAdvAmt=0;
                                totalFeeAmt1+=otherFee;
                                recpAmt1=otherFee;
                                dueAmt1 =0;
                                cashPlusCardAmt=pp.getNetAmount();
                                totalOpAdvAmt+=opAdvAmt;
                                totalcashPlusCardAmt+=cashPlusCardAmt;
                                totalCardAmt1+=0;
                                totalDueAmt1+=dueAmt1;
                                totalRecAmt1+=recpAmt1;
                            }   
                        }
                    }
                 }
              }
          }
      }

			
			PdfPCell cell031;
			cell031 = new PdfPCell(new Phrase("OP BILLS", headFont));
			cell031.setBorder(Rectangle.NO_BORDER);
			cell031.setHorizontalAlignment(Element.ALIGN_LEFT);
			table121.addCell(cell031);

			cell031 = new PdfPCell(new Phrase(String.valueOf(totalFeeAmt1), redFont));
			cell031.setBorder(Rectangle.NO_BORDER);
			cell031.setHorizontalAlignment(Element.ALIGN_RIGHT);
			cell031.setPaddingRight(42f);
			table121.addCell(cell031);
		
			cell031 = new PdfPCell(new Phrase("0", redFont));
			cell031.setBorder(Rectangle.NO_BORDER);
			cell031.setHorizontalAlignment(Element.ALIGN_RIGHT);
			cell031.setPaddingRight(12f);
			table121.addCell(cell031);

			cell031 = new PdfPCell(new Phrase(String.valueOf(totalFeeAmt1), redFont));
			cell031.setBorder(Rectangle.NO_BORDER);
			cell031.setHorizontalAlignment(Element.ALIGN_RIGHT);
			cell031.setPaddingRight(20f);
			table121.addCell(cell031);
		
			cell031 = new PdfPCell(new Phrase(String.valueOf(opAdvAmt), redFont));
			cell031.setBorder(Rectangle.NO_BORDER);
			cell031.setHorizontalAlignment(Element.ALIGN_RIGHT);
			cell031.setPaddingRight(21f);
			table121.addCell(cell031);

			cell031 = new PdfPCell(new Phrase(String.valueOf(totalRecAmt1), redFont));
			cell031.setBorder(Rectangle.NO_BORDER);
			cell031.setHorizontalAlignment(Element.ALIGN_RIGHT);
			cell031.setPaddingRight(20f);
			table121.addCell(cell031);
		
			cell031 = new PdfPCell(new Phrase(String.valueOf(totalCashAmt1), redFont));
			cell031.setBorder(Rectangle.NO_BORDER);
			cell031.setHorizontalAlignment(Element.ALIGN_RIGHT);
			cell031.setPaddingRight(19f);
			table121.addCell(cell031);

			cell031 = new PdfPCell(new Phrase(String.valueOf(totalChqAmt1), redFont));
			cell031.setBorder(Rectangle.NO_BORDER);
			cell031.setHorizontalAlignment(Element.ALIGN_RIGHT);
			cell031.setPaddingRight(21f);
			table121.addCell(cell031);
		
			cell031 = new PdfPCell(new Phrase(String.valueOf(totalCardAmt1), redFont));
			cell031.setBorder(Rectangle.NO_BORDER);
			cell031.setHorizontalAlignment(Element.ALIGN_RIGHT);
			cell031.setPaddingRight(13f);
			table121.addCell(cell031);
			
			cell031 = new PdfPCell(new Phrase(String.valueOf(totalcashPlusCardAmt), redFont));
			cell031.setBorder(Rectangle.NO_BORDER);
			cell031.setHorizontalAlignment(Element.ALIGN_RIGHT);
			table121.addCell(cell031);

			cell031 = new PdfPCell(new Phrase(String.valueOf(totalDueAmt1), redFont));
			cell031.setBorder(Rectangle.NO_BORDER);
			cell031.setHorizontalAlignment(Element.ALIGN_RIGHT);
			table121.addCell(cell031);

			cell1.addElement(table121);
            
//-------------------------------------------- CONSULTATIONS ----------------------------------------------------------
                PdfPTable table10 = new PdfPTable(11);
    			table10.setWidths(new float[] { 7.5f, 4f, 1.5f, 4f, 4f, 4f, 4f, 3f, 4f,4.5f,3f });
    			table10.setSpacingBefore(10);
    			table10.setWidthPercentage(100f);
    			
    			long fee = 0;
    			long cashAmt = 0;
    			long chqAmt = 0;
    			long cardAmt = 0;
    			long recpAmt = 0;
    			long dueAmt = 0;
    			long advAmt=0;
    			float totalFeeAmt = 0;
    			float totalCashAmt = 0;
    			float totalCardAmt = 0;
    			float totalChqAmt=0;
    			float totalRecpAmt=0;
    			float totalAdvcAmt=0;
    			float totalDueAmt = 0;
    			float cashPlusCardDocAmt=0;
    	        float totalCashPlusCardDocAmt=0;
    	        
    			
    	        if(!patientRegistration.isEmpty())
                {
                for(PatientRegistration pReg : patientRegistration)
                {
                	pId = pReg.getRegId();
                    //Set<PatientPayment> patientPayments = pReg.getPatientPayment();
                    Set<PatientPayment> patientPayments = paymentRepository.findByPatientRegistration(pReg);
                    for(PatientPayment pp : patientPayments)
                    {
                    	if(pp.getAmount()!=0)
                    	{
                        if(pp.getTypeOfCharge().equalsIgnoreCase("Doctor Fee"))
                        {
                            if(pp.getTypeOfCharge().equalsIgnoreCase("Doctor Fee")&&pp.getModeOfPaymant().equalsIgnoreCase("CASH"))
                            {
                                fee=pp.getAmount();
                                cashAmt=pp.getAmount();
                                chqAmt=0;
                                cardAmt=0;
                                totalFeeAmt+=fee;
                                advAmt=0;
                                totalCashAmt+=cashAmt;
                                recpAmt=pp.getAmount();
                                dueAmt = recpAmt-cashAmt;
                                totalDueAmt+=dueAmt;
                                totalRecpAmt+=recpAmt;
                            }
                            else if(pp.getTypeOfCharge().equalsIgnoreCase("Doctor Fee")&&(pp.getModeOfPaymant().equalsIgnoreCase("CHQ")||pp.getModeOfPaymant().equalsIgnoreCase("CHEQUE")))
                            {
                                fee=pp.getAmount();
                                chqAmt=pp.getAmount();
                                cashAmt=0;
                                cardAmt=0;
                                advAmt=0;
                                totalFeeAmt+=fee;
                                totalChqAmt+=chqAmt;
                                recpAmt=pp.getAmount();
                                dueAmt = recpAmt-chqAmt;
                                totalDueAmt+=dueAmt;
                                totalRecpAmt+=recpAmt;
                            }
                            else if(pp.getTypeOfCharge().equalsIgnoreCase("Doctor Fee")&&pp.getModeOfPaymant().equalsIgnoreCase("ADVANCE"))
                            {
                                fee=pp.getAmount();
                                chqAmt=0;
                                cashAmt=0;
                                cardAmt=0;
                                advAmt=pp.getAmount();
                                totalFeeAmt+=fee;
                                totalChqAmt+=0;
                                totalAdvcAmt+=advAmt;
                                recpAmt=0;
                                dueAmt = recpAmt-chqAmt;
                                totalDueAmt+=dueAmt;
                                totalRecpAmt+=recpAmt;
                            }
                            
                            else if(pp.getTypeOfCharge().equalsIgnoreCase("Doctor Fee")&&(pp.getModeOfPaymant().equalsIgnoreCase("DEBIT CARD") || pp.getModeOfPaymant().equalsIgnoreCase("CREDIT CARD") || pp.getModeOfPaymant().equalsIgnoreCase("CARD")))
                            {
                                fee=pp.getAmount();
                                cardAmt=pp.getAmount();
                                cashAmt=0;
                                chqAmt=0;
                                totalFeeAmt+=fee;
                                advAmt=0;
                                totalCardAmt+=cardAmt;
                                recpAmt=pp.getAmount();
                                dueAmt = recpAmt-cardAmt;
                                totalDueAmt+=dueAmt;
                                totalRecpAmt+=recpAmt;
                                
                            }
                            else if(pp.getTypeOfCharge().equalsIgnoreCase("Doctor Fee")&&pp.getModeOfPaymant().equalsIgnoreCase("DUE"))
                            {
                                fee=0;
                                chqAmt=0;
                                cashAmt=0;
                                cardAmt=0;
                                advAmt=0;
                                totalFeeAmt+=fee;
                                totalChqAmt+=0;
                                totalAdvcAmt+=advAmt;
                                recpAmt=0;
                                dueAmt =pp.getAmount();
                                totalDueAmt+=dueAmt;
                                totalRecpAmt+=recpAmt;
                            }
                            
                            else if(pp.getTypeOfCharge().equalsIgnoreCase("Doctor Fee")&&pp.getModeOfPaymant().equalsIgnoreCase("Cash+Card"))
                            {
                                fee=pp.getAmount();
                                chqAmt=0;
                                cashAmt=0;
                                cardAmt=0;
                                advAmt=0;
                                cashPlusCardDocAmt=pp.getAmount();
                                totalCashPlusCardDocAmt+=cashPlusCardDocAmt;
                                totalFeeAmt+=fee;
                                totalChqAmt+=0;
                                totalAdvcAmt+=advAmt;
                                recpAmt=fee;
                                dueAmt =0;
                                totalDueAmt+=dueAmt;
                                totalRecpAmt+=recpAmt;
                            }
    						}
    						}
    						}
    						}
    						}	
                      
    			
    			PdfPCell cell13;
    			
    			cell13 = new PdfPCell(new Phrase("CONSULTATIONS", headFont));
    			cell13.setBorder(Rectangle.NO_BORDER);
    			cell13.setHorizontalAlignment(Element.ALIGN_LEFT);
    			table10.addCell(cell13);

    			cell13 = new PdfPCell(new Phrase(String.valueOf(totalFeeAmt), redFont));
    			cell13.setBorder(Rectangle.NO_BORDER);
    			cell13.setHorizontalAlignment(Element.ALIGN_RIGHT);
    			cell13.setPaddingRight(42f);
    			table10.addCell(cell13);
    		
    			cell13 = new PdfPCell(new Phrase("0", redFont));
    			cell13.setBorder(Rectangle.NO_BORDER);
    			cell13.setHorizontalAlignment(Element.ALIGN_RIGHT);
    			cell13.setPaddingRight(12f);
    			table10.addCell(cell13);

    			cell13 = new PdfPCell(new Phrase(String.valueOf(totalFeeAmt), redFont));
    			cell13.setBorder(Rectangle.NO_BORDER);
    			cell13.setHorizontalAlignment(Element.ALIGN_RIGHT);
    			cell13.setPaddingRight(20f);
    			table10.addCell(cell13);
    		
    			cell13 = new PdfPCell(new Phrase(String.valueOf(totalAdvcAmt), redFont));
    			cell13.setBorder(Rectangle.NO_BORDER);
    			cell13.setHorizontalAlignment(Element.ALIGN_RIGHT);
    			cell13.setPaddingRight(21f);
    			table10.addCell(cell13);

    			cell13 = new PdfPCell(new Phrase(String.valueOf(totalRecpAmt), redFont));
    			cell13.setBorder(Rectangle.NO_BORDER);
    			cell13.setHorizontalAlignment(Element.ALIGN_RIGHT);
    			cell13.setPaddingRight(20f);
    			table10.addCell(cell13);
    		
    			cell13 = new PdfPCell(new Phrase(String.valueOf(totalCashAmt), redFont));
    			cell13.setBorder(Rectangle.NO_BORDER);
    			cell13.setHorizontalAlignment(Element.ALIGN_RIGHT);
    			cell13.setPaddingRight(19f);
    			table10.addCell(cell13);

    			cell13 = new PdfPCell(new Phrase(String.valueOf(totalChqAmt), redFont));
    			cell13.setBorder(Rectangle.NO_BORDER);
    			cell13.setHorizontalAlignment(Element.ALIGN_RIGHT);
    			cell13.setPaddingRight(21f);
    			table10.addCell(cell13);
    		
    			cell13 = new PdfPCell(new Phrase(String.valueOf(totalCardAmt), redFont));
    			cell13.setBorder(Rectangle.NO_BORDER);
    			cell13.setHorizontalAlignment(Element.ALIGN_RIGHT);
    			cell13.setPaddingRight(13f);
    			table10.addCell(cell13);
    			
    			cell13 = new PdfPCell(new Phrase(String.valueOf(totalCashPlusCardDocAmt), redFont));
    			cell13.setBorder(Rectangle.NO_BORDER);
    			cell13.setHorizontalAlignment(Element.ALIGN_RIGHT);
    			
    			table10.addCell(cell13);

    			cell13 = new PdfPCell(new Phrase(String.valueOf(totalDueAmt), redFont));
    			cell13.setBorder(Rectangle.NO_BORDER);
    			cell13.setHorizontalAlignment(Element.ALIGN_RIGHT);
    			table10.addCell(cell13);
    			
    			cell1.addElement(table10);
    			
    			
//----------------------------------- REGISTRATIONS ----------------------------------------            
    			PdfPTable table101 = new PdfPTable(11);
    			table101.setWidths(new float[] {  7.5f, 4f, 1.5f, 4f, 4f, 4f, 4f, 3f, 4f,4.5f,3f});
    			table101.setSpacingBefore(10);
    			table101.setWidthPercentage(100f);
    			
    			long regFee = 0;
    			long cashAmtReg = 0;
    			long chqAmtReg = 0;
    			long cardAmtReg = 0;
    			long recpAmtReg = 0;
    			long dueAmtReg = 0;
    			float advAmtReg=0;
    			float totalFeeAmtReg = 0;
    			float totalCashAmtReg = 0;
    			float totalCardAmtReg = 0;
    			float totalChqAmtReg=0;
    			float totalRecpAmtReg=0;
    			float totalDueAmtReg = 0;
    			float totalAdvcAmtReg=0;
    			float cashPlusCardRegAmt=0;
                float totalCashPlusCardRegAmt=0;
    			
               
                    for (PatientRegistration pReg : patientRegistration) 
                    {
                    	pId = pReg.getRegId();
                    	Set<PatientPayment> patientPayments = paymentRepository.findByPatientRegistration(pReg);
                        //Set<PatientPayment> patientPayments = pReg.getPatientPayment();
                        for(PatientPayment pp : patientPayments)
                        {
                        	if(pp.getAmount()!=0)
                        	{
                            if(pp.getTypeOfCharge().equalsIgnoreCase("Reg Fees"))
                            {
                                if(pp.getTypeOfCharge().equalsIgnoreCase("Reg Fees")&&pp.getModeOfPaymant().equalsIgnoreCase("CASH"))
                                {
                                	regFee=pp.getAmount();
                                    cashAmtReg=pp.getAmount();
                                    chqAmtReg=0;
                                    cardAmtReg=0;
                                    advAmtReg = 0;
                                    recpAmtReg=pp.getAmount();
                                    dueAmtReg=recpAmtReg-cashAmtReg;
                                    totalFeeAmtReg+=regFee;
                                    totalCashAmtReg+=cashAmtReg;
                                    totalDueAmtReg+=dueAmtReg;
                                    totalRecpAmtReg+=recpAmtReg;
                                }
                                else if(pp.getTypeOfCharge().equalsIgnoreCase("Reg Fees")&&(pp.getModeOfPaymant().equalsIgnoreCase("CHQ")||pp.getModeOfPaymant().equalsIgnoreCase("CHEQUE")))
                                {
                                	regFee=pp.getAmount();
                                    chqAmtReg=pp.getAmount();
                                    cashAmtReg=0;
                                    cardAmtReg=0;
                                    advAmtReg = 0;
                                    recpAmtReg=pp.getAmount();
                                    dueAmtReg=recpAmtReg-chqAmtReg;
                                    totalFeeAmtReg+=regFee;
                                    totalChqAmtReg+=chqAmtReg;
                                    totalDueAmtReg+=dueAmtReg;
                                    totalRecpAmtReg+=recpAmtReg;
                                }
                                
                                else if(pp.getTypeOfCharge().equalsIgnoreCase("Reg Fees")&&(pp.getModeOfPaymant().equalsIgnoreCase("DEBIT CARD") || pp.getModeOfPaymant().equalsIgnoreCase("CREDIT CARD") || pp.getModeOfPaymant().equalsIgnoreCase("CARD")))
                                {
                                	regFee=pp.getAmount();
                                    cardAmtReg=pp.getAmount();
                                    cashAmtReg=0;
                                    chqAmtReg=0;
                                    advAmtReg = 0;
                                    recpAmtReg=pp.getAmount();
                                    dueAmtReg=recpAmtReg-chqAmtReg;
                                    totalFeeAmtReg+=regFee;
                                    totalCardAmtReg+=cardAmt;
                                    totalDueAmtReg+=dueAmtReg;
                                    totalRecpAmtReg+=recpAmtReg;
                                }
                                else if(pp.getTypeOfCharge().equalsIgnoreCase("Reg Fees")&&pp.getModeOfPaymant().equalsIgnoreCase("ADVANCE"))
                                {
                                	regFee=pp.getAmount();
                                	chqAmtReg=0;
                                    cashAmtReg=0;
                                    cardAmtReg=0;
                                    advAmtReg=pp.getAmount();
                                    totalFeeAmtReg+=regFee;
                                    totalChqAmtReg+=0;
                                    totalCardAmtReg=0;
                                    totalAdvcAmtReg+=advAmtReg;
                                    recpAmtReg=0;
                                    dueAmtReg =0;
                                    totalDueAmtReg+=dueAmtReg;
                                    totalRecpAmtReg+=recpAmtReg;
                                }
                        
                                else if(pp.getTypeOfCharge().equalsIgnoreCase("Reg Fees")&&pp.getModeOfPaymant().equalsIgnoreCase("DUE"))
                                {
                                	regFee=0;
                                	chqAmtReg=0;
                                    cashAmtReg=0;
                                    cardAmtReg=0;
                                    advAmtReg=0;
                                    totalFeeAmtReg+=regFee;
                                    totalChqAmtReg+=0;
                                    totalCardAmtReg=0;
                                    totalAdvcAmtReg+=advAmtReg;
                                    recpAmtReg=0;
                                    dueAmtReg =pp.getAmount();
                                    totalDueAmtReg+=dueAmtReg;
                                    totalRecpAmtReg+=recpAmtReg;
                                }
                                else if(pp.getTypeOfCharge().equalsIgnoreCase("Reg Fees")&&pp.getModeOfPaymant().equalsIgnoreCase("Cash+Card"))
                                {
                                	regFee=pp.getAmount();
                                	chqAmtReg=0;
                                    cashAmtReg=0;
                                    cardAmtReg=0;
                                    advAmtReg=0;
                                    cashPlusCardRegAmt=regFee;
                                    totalCashPlusCardRegAmt+=cashPlusCardRegAmt;
                                    totalFeeAmtReg+=regFee;
                                    totalChqAmtReg+=0;
                                    totalCardAmtReg=0;
                                    totalAdvcAmtReg+=advAmtReg;
                                    recpAmtReg=regFee;
                                    dueAmtReg =0;
                                    totalDueAmtReg+=dueAmtReg;
                                    totalRecpAmtReg+=recpAmtReg;
                                }
        }
        }
        }
        }
        
    			
    			PdfPCell cell04;
    			
    			cell04 = new PdfPCell(new Phrase("REGISTRATIONS", headFont));
    			cell04.setBorder(Rectangle.NO_BORDER);
    			cell04.setHorizontalAlignment(Element.ALIGN_LEFT);
    			table101.addCell(cell04);

    			cell04 = new PdfPCell(new Phrase(String.valueOf(totalFeeAmtReg), redFont));
    			cell04.setBorder(Rectangle.NO_BORDER);
    			cell04.setHorizontalAlignment(Element.ALIGN_RIGHT);
    			cell04.setPaddingRight(42f);
    			table101.addCell(cell04);
    		
    			cell04 = new PdfPCell(new Phrase("0", redFont));
    			cell04.setBorder(Rectangle.NO_BORDER);
    			cell04.setHorizontalAlignment(Element.ALIGN_RIGHT);
    			cell04.setPaddingRight(12f);
    			table101.addCell(cell04);

    			cell04 = new PdfPCell(new Phrase(String.valueOf(totalFeeAmtReg), redFont));
    			cell04.setBorder(Rectangle.NO_BORDER);
    			cell04.setHorizontalAlignment(Element.ALIGN_RIGHT);
    			cell04.setPaddingRight(20f);
    			table101.addCell(cell04);
    		
    			cell04 = new PdfPCell(new Phrase(String.valueOf(totalAdvcAmtReg), redFont));
    			cell04.setBorder(Rectangle.NO_BORDER);
    			cell04.setHorizontalAlignment(Element.ALIGN_RIGHT);
    			cell04.setPaddingRight(21f);
    			table101.addCell(cell04);

    			cell04 = new PdfPCell(new Phrase(String.valueOf(totalRecpAmtReg), redFont));
    			cell04.setBorder(Rectangle.NO_BORDER);
    			cell04.setHorizontalAlignment(Element.ALIGN_RIGHT);
    			cell04.setPaddingRight(20f);
    			table101.addCell(cell04);
    		
    			cell04 = new PdfPCell(new Phrase(String.valueOf(totalCashAmtReg), redFont));
    			cell04.setBorder(Rectangle.NO_BORDER);
    			cell04.setHorizontalAlignment(Element.ALIGN_RIGHT);
    			cell04.setPaddingRight(19f);
    			table101.addCell(cell04);

    			cell04 = new PdfPCell(new Phrase(String.valueOf(totalChqAmtReg), redFont));
    			cell04.setBorder(Rectangle.NO_BORDER);
    			cell04.setHorizontalAlignment(Element.ALIGN_RIGHT);
    			cell04.setPaddingRight(21f);
    			table101.addCell(cell04);
    		
    			cell04 = new PdfPCell(new Phrase(String.valueOf(totalCardAmtReg), redFont));
    			cell04.setBorder(Rectangle.NO_BORDER);
    			cell04.setHorizontalAlignment(Element.ALIGN_RIGHT);
    			cell04.setPaddingRight(13f);
    			table101.addCell(cell04);
    			
    			cell04 = new PdfPCell(new Phrase(String.valueOf(totalCashPlusCardRegAmt), redFont));
    			cell04.setBorder(Rectangle.NO_BORDER);
    			cell04.setHorizontalAlignment(Element.ALIGN_RIGHT);
    			table101.addCell(cell04);

    			cell04 = new PdfPCell(new Phrase(String.valueOf(totalDueAmtReg), redFont));
    			cell04.setBorder(Rectangle.NO_BORDER);
    			cell04.setHorizontalAlignment(Element.ALIGN_RIGHT);
    			table101.addCell(cell04);

    			cell1.addElement(table101);
    	
            
//---------------------------------------- IP BILLS ---------------------------------------------            
            
    			PdfPTable table14 = new PdfPTable(11);
    			table14.setWidths(new float[] {  7.5f, 4f, 1.5f, 4f, 4f, 4f, 4f, 3f, 4f,4.5f,3f});
    			table14.setSpacingBefore(10);
    			table14.setWidthPercentage(100f);

    			float ipFee = 0;
    			float ipCashAmt1 = 0;
    			float ipChqAmt1 = 0;
    			float ipCardAmt1 = 0;
    			float ipAdvAmt = 0;
    			float totalIpFeeAmt1 = 0;
    			float totalIpCashAmt1 = 0;
    			float totalIpCardAmt1 = 0;
    			float totalIpChqAmt1 = 0;
    			float totalIpDueAmt1 = 0;
    			float ipDueAmt1=0;
    			float ipRecpAmt1=0;
    			float totalIpRecAmt1=0;
    			float totalIpAdvAmt = 0;
    			float ipCashPlusCardAmt=0;
                float ipTotalCashPlusCardAmt=0;
    						
                if(!patientRegistration.isEmpty())
                {
                for(PatientRegistration pReg : patientRegistration)
                {
                    patientType=pReg.getpType();
                    pId = pReg.getRegId();
                    //Set<PatientPayment> patientPayments = pReg.getPatientPayment();
                    
                     
                    Set<PatientPayment> patientPayments = paymentRepository.findByPatientRegistration(pReg);
                    List<ChargeBill> charge=chargeBillRepository.findByPatRegId(pReg);
                    for(ChargeBill pp : charge)
                    {
                    	/*if(pp.getServiceId()!=null)
                    	{
                    	cServiceId=pp.getServiceId().getServiceId();
                    	serviceType=pp.getServiceId().getServiceType();
                    	*/

                    	//cServiceId=pp.getServiceId().getServiceId();
                    	/*LabServices lab=labServicesRepository.findByServiceId(cServiceId);
                    	lServiceId=lab.getServiceId();
                    	*/
                    	if(pp.getAmount()!=0)
                    	{
                   
                        if(patientType.equalsIgnoreCase("INPATIENT"))
                        {
                        	if(pp.getServiceId()!=null)
                        	{
        
                                if(pp.getPaymentType().equalsIgnoreCase("CASH"))
                                {
                                     
                                    ipFee=pp.getNetAmount();
                                    ipAdvAmt=pp.getNetAmount();
                                    ipCashAmt1=pp.getNetAmount();
                                    ipChqAmt1=0;
                                    ipCardAmt1=0;
                                    totalIpFeeAmt1+=ipFee;
                                    totalIpCashAmt1+=ipCashAmt1;
                                    ipRecpAmt1=pp.getNetAmount();
                                    ipDueAmt1 = ipRecpAmt1-ipCashAmt1;
                                    totalIpDueAmt1+=ipDueAmt1;
                                    totalIpRecAmt1+=ipRecpAmt1;
                                }
                                else if(pp.getPaymentType().equalsIgnoreCase("CHQ")||pp.getPaymentType().equalsIgnoreCase("CHEQUE"))
                                {
                            
                                    ipFee=pp.getNetAmount();
                                    ipChqAmt1=pp.getNetAmount();
                                    ipCashAmt1=0;
                                    ipCardAmt1=0;
                                    ipAdvAmt=0;
                                    totalIpFeeAmt1+=ipFee;
                                    totalIpChqAmt1+=ipChqAmt1;
                                    ipRecpAmt1=pp.getNetAmount();
                                    ipDueAmt1 = ipRecpAmt1-ipChqAmt1;
                                    totalIpDueAmt1+=ipDueAmt1;
                                    totalIpRecAmt1+=ipRecpAmt1;
                                }
                                else if(pp.getPaymentType().equalsIgnoreCase("DEBIT CARD") || pp.getPaymentType().equalsIgnoreCase("CREDIT CARD") || pp.getPaymentType().equalsIgnoreCase("CARD"))
                                {
                                    
                                        ipFee=pp.getNetAmount();
                                        ipCardAmt1=pp.getNetAmount();
                                        ipChqAmt1=0;
                                        ipCashAmt1=0;
                                        ipAdvAmt=0;
                                        totalIpFeeAmt1+=ipFee;
                                        totalIpCardAmt1+=ipCardAmt1;
                                        ipRecpAmt1=pp.getNetAmount();
                                        ipDueAmt1 = ipRecpAmt1-ipCardAmt1;
                                        totalIpDueAmt1+=ipDueAmt1;
                                        totalIpRecAmt1+=ipRecpAmt1;
                                        
                                
                                }
                                else if(pp.getPaymentType().equalsIgnoreCase("ADVANCE"))
                                {
                                    
                                    
                                    ipFee=pp.getNetAmount();
                                    ipCashAmt1=0;
                                    ipCardAmt1=0;
                                    ipChqAmt1=0;
                                    ipAdvAmt=pp.getNetAmount();
                                    totalIpFeeAmt1+=ipAdvAmt;
                                    ipRecpAmt1=0;
                                    ipDueAmt1 = 0;
                                    totalIpAdvAmt+=ipAdvAmt;
                                    totalIpCardAmt1+=ipCardAmt1;
                                    totalIpDueAmt1+=ipDueAmt1;
                                    totalIpRecAmt1+=ipRecpAmt1;
                                    
                                } else if(pp.getPaymentType().equalsIgnoreCase("DUE"))
                                {
                                    
                                    
                                    ipFee=0;
                                    ipCashAmt1=0;
                                    ipCardAmt1=0;
                                    ipChqAmt1=0;
                                    ipAdvAmt=0;
                                    totalIpFeeAmt1+=ipAdvAmt;
                                    ipRecpAmt1=0;
                                    ipDueAmt1 =pp.getNetAmount();
                                    totalIpAdvAmt+=ipAdvAmt;
                                    totalIpCardAmt1+=ipCardAmt1;
                                    totalIpDueAmt1+=ipDueAmt1;
                                    totalIpRecAmt1+=ipRecpAmt1;
                                    
                                }
                                else if(pp.getPaymentType().equalsIgnoreCase("Cash+Card"))
                                {
                                    
                                    
                                    ipFee=pp.getNetAmount();
                                    ipCashAmt1=0;
                                    ipCardAmt1=0;
                                    ipChqAmt1=0;
                                    ipAdvAmt=0;
                                    ipCashPlusCardAmt=ipFee;
                                    ipTotalCashPlusCardAmt+=ipCashPlusCardAmt;
                                    totalIpFeeAmt1+=ipAdvAmt;
                                    ipRecpAmt1=0;
                                    ipDueAmt1 =0;
                                    totalIpAdvAmt+=ipAdvAmt;
                                    totalIpCardAmt1+=ipCardAmt1;
                                    totalIpDueAmt1+=ipDueAmt1;
                                    totalIpRecAmt1+=ipRecpAmt1;
                                    
                                }
    }
    }
    }
    }
    }
    }
    				
    			
    				
    				
    				PdfPCell cell041;
    				

    				cell041 = new PdfPCell(new Phrase("IP BILLS", headFont));
    				cell041.setBorder(Rectangle.NO_BORDER);
    				cell041.setHorizontalAlignment(Element.ALIGN_LEFT);
    				//cell041.setPaddingTop(10f);
    				table14.addCell(cell041);

    				cell041 = new PdfPCell(new Phrase(String.valueOf(totalIpFeeAmt1), redFont));
    				cell041.setBorder(Rectangle.NO_BORDER);
    				cell041.setHorizontalAlignment(Element.ALIGN_RIGHT);
    				//cell041.setPaddingTop(10f);
    				cell041.setPaddingRight(42f);
    				table14.addCell(cell041);
    			
    				cell041 = new PdfPCell(new Phrase("0", redFont));
    				cell041.setBorder(Rectangle.NO_BORDER);
    				cell041.setHorizontalAlignment(Element.ALIGN_RIGHT);
    				cell041.setPaddingRight(12f);
    				//cell041.setPaddingTop(10f);
    				table14.addCell(cell041);

    				cell041 = new PdfPCell(new Phrase(String.valueOf(totalIpFeeAmt1), redFont));
    				cell041.setBorder(Rectangle.NO_BORDER);
    				cell041.setHorizontalAlignment(Element.ALIGN_RIGHT);
    				//cell041.setPaddingTop(10f);
    				cell041.setPaddingRight(20f);
    				table14.addCell(cell041);
    			
    				cell041 = new PdfPCell(new Phrase(String.valueOf(totalIpAdvAmt), redFont));
    				cell041.setBorder(Rectangle.NO_BORDER);
    				cell041.setHorizontalAlignment(Element.ALIGN_RIGHT);
    				cell041.setPaddingRight(21f);
    				//cell041.setPaddingTop(10f);
    				table14.addCell(cell041);

    				cell041 = new PdfPCell(new Phrase(String.valueOf(totalIpRecAmt1), redFont));
    				cell041.setBorder(Rectangle.NO_BORDER);
    				cell041.setHorizontalAlignment(Element.ALIGN_RIGHT);
    				//cell041.setPaddingTop(10f);
    				cell041.setPaddingRight(20f);
    				table14.addCell(cell041);
    			
    				cell041 = new PdfPCell(new Phrase(String.valueOf(totalIpCashAmt1), redFont));
    				cell041.setBorder(Rectangle.NO_BORDER);
    				cell041.setHorizontalAlignment(Element.ALIGN_RIGHT);
    				cell041.setPaddingRight(19f);
    				//cell041.setPaddingTop(10f);
    				table14.addCell(cell041);

    				cell041 = new PdfPCell(new Phrase(String.valueOf(totalIpChqAmt1), redFont));
    				cell041.setBorder(Rectangle.NO_BORDER);
    				cell041.setHorizontalAlignment(Element.ALIGN_RIGHT);
    				cell041.setPaddingRight(21f);
    				//cell041.setPaddingTop(10f);
    				table14.addCell(cell041);
    			
    				cell041 = new PdfPCell(new Phrase(String.valueOf(totalIpCardAmt1), redFont));
    				cell041.setBorder(Rectangle.NO_BORDER);
    				cell041.setHorizontalAlignment(Element.ALIGN_RIGHT);
    				cell041.setPaddingRight(13f);
    				//cell041.setPaddingTop(10f);
    				table14.addCell(cell041);
    				
    				cell041 = new PdfPCell(new Phrase(String.valueOf(ipTotalCashPlusCardAmt), redFont));
    				cell041.setBorder(Rectangle.NO_BORDER);
    				cell041.setHorizontalAlignment(Element.ALIGN_RIGHT);
    				//cell041.setPaddingTop(10f);
    				table14.addCell(cell041);

    				cell041 = new PdfPCell(new Phrase(String.valueOf(totalIpDueAmt1), redFont));
    				cell041.setBorder(Rectangle.NO_BORDER);
    				cell041.setHorizontalAlignment(Element.ALIGN_RIGHT);
    				//cell041.setPaddingTop(10f);
    				table14.addCell(cell041);
    	
    				cell1.addElement(table14);
    							
    				
    		//--------------------------------------IP ADVANCE-------------------------------------
    				
    				 String patientTypeIp=null;
 		            String patientIpName=null;
 		            String ipUmr=null;
 		            String ipConsultant=null;
 		            long ipAdvFee = 0;
 		            long ipAdvFee1 = 0;
 		            long ipAdvCashAmt1 = 0;
 		            long ipAdvChqAmt1 = 0;
 		            long ipAdvCardAmt1 = 0;
 		            long ipAdvAdAmt1=0;
 		            float totalipAdvFeeAmt1 = 0;
 		            float totalipAdvCashAmt1 = 0;
 		            float totalipAdvCardAmt1 = 0;
 		            float totalipAdvChqAmt1 = 0;
 		            float totalipAdvDueAmt1 = 0;
 		            float totalipAdvAdvcAmt1=0;
 		            long dueipAdvAmt1=0;
 		            long recpipAdvAmt1=0;
 		            float totalipAdvRecpAmt1=0;
 		            float cashPlusCardipAdvAmt1=0;
 		            float totalCashPlusCardipAdvAmt1=0;
 		            
 		            long ipAdvCashAmt = 0;
 		            long ipAdvChqAmt = 0;
 		            long ipAdvCardAmt = 0;
 		            long ipAdvAdAmt=0;
 		            float totalipAdvFeeAmt = 0;
 		            float totalipAdvCashAmt = 0;
 		            float totalipAdvCardAmt = 0;
 		            float totalipAdvChqAmt = 0;
 		            float totalipAdvDueAmt = 0;
 		            float totalipAdvAdvcAmt=0;
 		            long dueipAdvAmt=0;
 		            long recpipAdvAmt=0;
 		            float totalipAdvRecpAmt=0;
 		            float cashPlusCardipAdvAmt=0;
 		            float totalCashPlusCardipAdvAmt=0;
 		            String paymentMode=null;
 		          
 		           PdfPTable table141 = new PdfPTable(11);
   				table141.setWidths(new float[] { 7.5f, 4f, 1.5f, 4f, 4f, 4f, 4f, 3f, 4f,4.5f,3f});
   				table141.setSpacingBefore(10);
   				table141.setWidthPercentage(100f);
 		            
 		            
 		            if(!patientRegistration.isEmpty())
 		            {
 		            for(PatientRegistration pReg : patientRegistration)
 		            {
 		            	
 		            	pId = pReg.getRegId();
 		         		
 		                patientType=pReg.getpType();
 		                //Set<PatientPayment> patientPayments = pReg.getPatientPayment();

 		                
 		                ipUmr=pReg.getPatientDetails().getUmr();
 	            		if(pReg.getPatientDetails().getMiddleName()!=null)
 	            		{
 	            			patientIpName=pReg.getPatientDetails().getFirstName()+" "+pReg.getPatientDetails().getMiddleName()+" "+pReg.getPatientDetails().getLastName();
 	            		}
 	            		else
 	            		{
 	            			patientIpName=pReg.getPatientDetails().getFirstName()+" "+pReg.getPatientDetails().getLastName();	
 	            		}
 	            		ipConsultant=pReg.getPatientDetails().getConsultant();
 	            	
 	            		Set<PatientPayment> patientPayments = paymentRepository.findByPatientRegistration(pReg);
 	            	
 	                			for(PatientPayment pp : patientPayments)
 	                			{
 	                					patientTypes=pp.getPatientRegistration().getpType();
 	              
 	                					if(pp.getAmount()!=0)
 	                					{
 	                		
 	                						if(pp.getPatientRegistration().getRegId()!=null && patientTypes.equalsIgnoreCase("INPATIENT"))
 	                						{
 	                						
 	                							if(pp.getTypeOfCharge().equalsIgnoreCase("ADVANCE"))
 	                							{
 			                								if(pp.getModeOfPaymant().equalsIgnoreCase("CASH"))
 			                								{
 			                									
 			                									
 								                                ipAdvFee=pp.getAmount();
 								                                ipAdvAdAmt=0;
 								                               ipAdvCashAmt=ipAdvFee;
 								                                ipAdvChqAmt=0;
 								                                ipAdvCardAmt=0;
 								                                totalipAdvFeeAmt+=ipAdvFee;
 								                                totalipAdvCashAmt+=ipAdvCashAmt;
 								                                recpipAdvAmt=ipAdvCashAmt;
 								                                dueipAdvAmt = 0;
 								                                totalipAdvDueAmt+=dueipAdvAmt;
 								                                totalipAdvRecpAmt+=recpipAdvAmt;
 			                								}
 								                            else if(pp.getModeOfPaymant().equalsIgnoreCase("CHQ")||pp.getModeOfPaymant().equalsIgnoreCase("CHEQUE"))
 								                            {
 								                        
 								                            	
 								                                ipAdvFee=pp.getAmount();
 								                                ipAdvChqAmt=pp.getAmount();
 								                                ipAdvCashAmt=0;
 								                                ipAdvCardAmt=0;
 								                                ipAdvAdAmt=0;
 								                                totalipAdvFeeAmt+=ipAdvFee;
 								                                totalipAdvChqAmt+=ipAdvChqAmt;
 								                                recpipAdvAmt=pp.getAmount();
 								                                dueipAdvAmt = 0;
 								                                totalipAdvDueAmt+=dueipAdvAmt;
 								                                totalipAdvRecpAmt+=recpipAdvAmt;
 								                            }
 								                            else if(pp.getModeOfPaymant().equalsIgnoreCase("DEBIT CARD") || pp.getModeOfPaymant().equalsIgnoreCase("CREDIT CARD") || pp.getModeOfPaymant().equalsIgnoreCase("CARD"))
 								                            {
 								                                
 								                            	ipAdvFee=pp.getAmount();
 								                            	ipAdvCardAmt=pp.getAmount();
 								                            	ipAdvChqAmt=0;
 							                                    ipAdvCashAmt=0;
 							                                    ipAdvAdAmt=0;
 							                                    totalipAdvFeeAmt+=ipAdvFee;
 							                                    totalipAdvCardAmt+=ipAdvCardAmt;
 							                                    recpipAdvAmt=pp.getAmount();
 							                                    dueipAdvAmt = 0;
 							                                    totalipAdvDueAmt+=dueipAdvAmt;
 							                                    totalipAdvRecpAmt+=recpipAdvAmt;
 								                                    
 								                            
 								                            }
 								                            else if(pp.getModeOfPaymant().equalsIgnoreCase("ADVANCE"))
 								                            {
 								                                
 								                                
 								                            	ipAdvFee=pp.getAmount();
 								                            	ipAdvCashAmt=0;
 								                            	ipAdvCardAmt=0;
 								                            	ipAdvChqAmt=0;
 								                            	ipAdvAdAmt=pp.getAmount();
 								                                totalipAdvFeeAmt+=ipAdvAdAmt;
 								                                recpipAdvAmt=0;
 								                                dueipAdvAmt = 0;
 								                                totalipAdvAdvcAmt+=ipAdvAdAmt;
 								                                totalipAdvCardAmt+=ipAdvCardAmt;
 								                                totalipAdvDueAmt+=dueipAdvAmt;
 								                                totalipAdvRecpAmt+=recpipAdvAmt;
 								                                
 								                            }
 		                         
 								                            else if(pp.getModeOfPaymant().equalsIgnoreCase("due"))
 								                            {
 								                                
 								                                
 								                            	ipAdvFee=0;
 								                            	ipAdvCashAmt=0;
 								                            	ipAdvCardAmt=0;
 								                            	ipAdvChqAmt=0;
 								                            	ipAdvAdAmt=0;
 								                            	totalipAdvFeeAmt+=ipAdvFee;
 								                            	recpipAdvAmt=0;
 								                            	dueipAdvAmt =pp.getAmount()	;
 								                            	totalipAdvAdvcAmt+=ipAdvAdAmt;
 								                            	totalipAdvCardAmt+=ipAdvCardAmt;
 								                            	totalipAdvDueAmt+=dueipAdvAmt;
 								                            	totalipAdvRecpAmt+=recpipAdvAmt;
 								                                
 								                            }
 								                            else if(pp.getModeOfPaymant().equalsIgnoreCase("Cash+Card"))
 								                            {
 								                                
 								                                
 								                            	ipAdvFee=pp.getAmount(); 
 								                            	ipAdvCashAmt=0;
 								                            	ipAdvCardAmt=0;
 								                            	ipAdvChqAmt=0;
 								                            	ipAdvAdAmt=0;
 								                            	cashPlusCardipAdvAmt=ipAdvFee; 
 								                                totalCashPlusCardipAdvAmt+=cashPlusCardipAdvAmt; 
 								                                totalipAdvFeeAmt+=ipAdvFee; 
 								                                recpipAdvAmt=ipAdvFee;
 								                                dueipAdvAmt =0;
 								                                totalipAdvAdvcAmt+=ipAdvAdAmt;
 								                                totalIpCardAmt1+=ipCardAmt1;
 								                                totalipAdvDueAmt+=dueipAdvAmt;
 								                                totalipAdvRecpAmt+=recpipAdvAmt;
 								                                
 								                            }
 			                								
 			                							
 	                							}
 	                							
 	              		     	            
 	                						}
 	                					

 	                					}
 	                					    
 	                					
 	                			//}
 	 	                		
 	                			}
 	                			
 	                		
   		     	                
 	            			}
 		               
 	                    	}
 		            
 		             
 		       	PdfPCell cell0411;
				
				cell0411 = new PdfPCell(new Phrase("IP ADVANCE BILLS", headFont));
				cell0411.setBorder(Rectangle.NO_BORDER);
				cell0411.setHorizontalAlignment(Element.ALIGN_LEFT);
				//cell0411.setPaddingTop(10f);
				table141.addCell(cell0411);

				cell0411 = new PdfPCell(new Phrase(String.valueOf(totalipAdvFeeAmt), redFont));
				cell0411.setBorder(Rectangle.NO_BORDER);
				cell0411.setHorizontalAlignment(Element.ALIGN_RIGHT);
				cell0411.setPaddingRight(42f);
				//cell0411.setPaddingTop(10f);
				//cell0411.setPaddingRight(20f);
				table141.addCell(cell0411);
			
				cell0411 = new PdfPCell(new Phrase("0", redFont));
				cell0411.setBorder(Rectangle.NO_BORDER);
				cell0411.setHorizontalAlignment(Element.ALIGN_RIGHT);
				cell0411.setPaddingRight(12f);
				//cell0411.setPaddingTop(10f);
				table141.addCell(cell0411);

				cell0411 = new PdfPCell(new Phrase(String.valueOf(totalipAdvFeeAmt), redFont));
				cell0411.setBorder(Rectangle.NO_BORDER);
				cell0411.setHorizontalAlignment(Element.ALIGN_RIGHT);
				//cell0411.setPaddingTop(10f);
				cell0411.setPaddingRight(20f);
				table141.addCell(cell0411);
			
				cell0411 = new PdfPCell(new Phrase(String.valueOf(totalipAdvAdvcAmt), redFont));
				cell0411.setBorder(Rectangle.NO_BORDER);
				cell0411.setHorizontalAlignment(Element.ALIGN_RIGHT);
				cell0411.setPaddingRight(21f);
				//cell0411.setPaddingTop(10f);
				table141.addCell(cell0411);

				cell0411 = new PdfPCell(new Phrase(String.valueOf(totalipAdvRecpAmt), redFont));
				cell0411.setBorder(Rectangle.NO_BORDER);
				cell0411.setHorizontalAlignment(Element.ALIGN_RIGHT);
				//cell0411.setPaddingTop(10f);
				cell0411.setPaddingRight(20f);
				table141.addCell(cell0411);
			
				cell0411 = new PdfPCell(new Phrase(String.valueOf(totalipAdvCashAmt), redFont));
				cell0411.setBorder(Rectangle.NO_BORDER);
				cell0411.setHorizontalAlignment(Element.ALIGN_RIGHT);
				cell0411.setPaddingRight(19f);
				//cell0411.setPaddingTop(10f);
				table141.addCell(cell0411);

				cell0411 = new PdfPCell(new Phrase(String.valueOf(totalipAdvChqAmt), redFont));
				cell0411.setBorder(Rectangle.NO_BORDER);
				cell0411.setHorizontalAlignment(Element.ALIGN_RIGHT);
				cell0411.setPaddingRight(21f);
			//	cell0411.setPaddingTop(10f);
				table141.addCell(cell0411);
			
				cell0411 = new PdfPCell(new Phrase(String.valueOf(totalipAdvCardAmt), redFont));
				cell0411.setBorder(Rectangle.NO_BORDER);
				cell0411.setHorizontalAlignment(Element.ALIGN_RIGHT);
				cell0411.setPaddingRight(13f);
				//cell0411.setPaddingTop(10f);
				table141.addCell(cell0411);
				
				cell0411 = new PdfPCell(new Phrase(String.valueOf(totalCashPlusCardipAdvAmt), redFont));
				cell0411.setBorder(Rectangle.NO_BORDER);
				cell0411.setHorizontalAlignment(Element.ALIGN_RIGHT);
				//cell0411.setPaddingRight(15f);
				//cell0411.setPaddingTop(10f);
				table141.addCell(cell0411);

				cell0411 = new PdfPCell(new Phrase(String.valueOf(totalipAdvDueAmt), redFont));
				cell0411.setBorder(Rectangle.NO_BORDER);
				cell0411.setHorizontalAlignment(Element.ALIGN_RIGHT);
				//cell0411.setPaddingTop(10f);
				table141.addCell(cell0411);
	
				cell1.addElement(table141);
				
                
                
              //----------------------------------LABORATORY BILLS---------------------------------------------------                 
                              
    				PdfPTable table1411 = new PdfPTable(11);
    				table1411.setWidths(new float[] { 7.5f, 4f, 1.5f, 4f, 4f, 4f, 4f, 3f, 4f,4.5f,3f});
    				table1411.setSpacingBefore(10);
    				table1411.setWidthPercentage(100f);

    				float labFee = 0;
    				float labCashAmt1 = 0;
    				float labChqAmt1 = 0;
    				float labCardAmt1 = 0;
    				float labAdvAmt = 0;
    				float totalLabFeeAmt1 = 0;
    				float totalLabCashAmt1 = 0;
    				float totalLabCardAmt1 = 0;
    				float totalLabChqAmt1 = 0;
    				float totalLabDueAmt1 = 0;
    				float labDueAmt1=0;
    				float labRecpAmt1=0;
    				float totalLabRecAmt1=0;
    				float totalLabAdvAmt = 0;
    				float labCashPlusCardAmt=0;
                    float labTotalCashPlusCardAmt=0;
    							
    				
    				  List<LaboratoryRegistration> labDetails=laboratoryRegistrationServiceImpl.findUserWiseIpOpDetailed(user.get("fromDate"),user.get("toDate"),user1.get(0).getUserId(),"Yes");
                      
    				  if(!labDetails.isEmpty())
    				  {
    				                                   for(LaboratoryRegistration lab : labDetails)
    				                                   {
    				                                      /* typeOfCharge=pp.getTypeOfCharge();
    				                                       if(patientType.equalsIgnoreCase("INPATIENT"))
    				                                       {
    				                                           if(!(typeOfCharge.equalsIgnoreCase("Doctor Fee")|| typeOfCharge.equalsIgnoreCase("Reg Fees")))
    				                                           { */
    				                                 	  if(lab.getNetAmount()!=0)
    				                                 	  {
    				                                               if(lab.getPaymentType().equalsIgnoreCase("CASH"))
    				                                               {
    				                                                   labFee=lab.getNetAmount();
    				                                                   labAdvAmt=0;
    				                                                   labCashAmt1=lab.getNetAmount();
    				                                                   labChqAmt1=0;
    				                                                   labCardAmt1=0;
    				                                                   totalLabFeeAmt1+=labFee;
    				                                                   totalLabCashAmt1+=labCashAmt1;
    				                                                   labRecpAmt1=lab.getNetAmount();
    				                                                   labDueAmt1 =0;
    				                                                   totalLabDueAmt1+=labDueAmt1;
    				                                                   totalLabRecAmt1+=labRecpAmt1;
    				                                               }
    				                                               else if(lab.getPaymentType().equalsIgnoreCase("CHQ") || lab.getPaymentType().equalsIgnoreCase("CHEQUE"))
    				                                               {
    				                                           
    				                                               	 labFee=lab.getNetAmount();
    				                                                    labAdvAmt=0;
    				                                                    labCashAmt1=0;
    				                                                    labChqAmt1=lab.getNetAmount();
    				                                                    labCardAmt1=0;
    				                                                    totalLabFeeAmt1+=labFee;
    				                                                    totalLabChqAmt1+=labChqAmt1;
    				                                                    labRecpAmt1=lab.getNetAmount();
    				                                                    labDueAmt1 =0;
    				                                                    totalLabDueAmt1+=labDueAmt1;
    				                                                    totalLabRecAmt1+=labRecpAmt1;
    				                                               }
    				                                               else if(lab.getPaymentType().equalsIgnoreCase("DEBIT CARD") || lab.getPaymentType().equalsIgnoreCase("CREDIT CARD") || lab.getPaymentType().equalsIgnoreCase("CARD"))
    				                                               {
    				                                                   
    				                                               	 labFee=lab.getNetAmount();
    				                                                    labAdvAmt=0;
    				                                                    labCashAmt1=0;
    				                                                    labChqAmt1=0;
    				                                                    labCardAmt1=lab.getNetAmount();
    				                                                    totalLabFeeAmt1+=labFee;
    				                                                    totalLabCardAmt1+=labCardAmt1;
    				                                                    labRecpAmt1=lab.getNetAmount();
    				                                                    labDueAmt1 =0;
    				                                                    totalLabDueAmt1+=labDueAmt1;
    				                                                    totalLabRecAmt1+=labRecpAmt1;
    				                                                       
    				                                               
    				                                               }
    				                                               else if(lab.getPaymentType().equalsIgnoreCase("ADVANCE"))
    				                                               {
    				                                                   
    				                                                   
    				                                               	 labFee=lab.getNetAmount();
    				                                                    labAdvAmt=lab.getNetAmount();
    				                                                    labCashAmt1=0;
    				                                                    labChqAmt1=0;
    				                                                    labCardAmt1=0;
    				                                                    totalLabFeeAmt1+=labFee;
    				                                                    totalLabAdvAmt+=labAdvAmt;
    				                                                    labRecpAmt1=lab.getNetAmount();
    				                                                    labDueAmt1 =0;
    				                                                    totalLabDueAmt1+=labDueAmt1;
    				                                                    totalLabRecAmt1+=labRecpAmt1;
    				                                                   
    				                                               }  else if(lab.getPaymentType().equalsIgnoreCase("DUE"))
    				                                               {
    				                                                   
    				                                                   
    				 	                                              	 labFee=0;
    				 	                                                   labAdvAmt=0;
    				 	                                                   labCashAmt1=0;
    				 	                                                   labChqAmt1=0;
    				 	                                                   labCardAmt1=0;
    				 	                                                   totalLabFeeAmt1+=labFee;
    				 	                                                   totalLabAdvAmt+=labAdvAmt;
    				 	                                                   labRecpAmt1=0;
    				 	                                                   labDueAmt1 =lab.getNetAmount();
    				 	                                                   totalLabDueAmt1+=labDueAmt1;
    				 	                                                   totalLabRecAmt1+=labRecpAmt1;
    				 	                                                  
    				 	                                              }else if(lab.getPaymentType().equalsIgnoreCase("Cash+Card"))
    				 	                                              {
    				 	                                                  
    				 	                                                  
    				 		                                              	 labFee=lab.getNetAmount();
    				 		                                                   labAdvAmt=0;
    				 		                                                   labCashAmt1=0;
    				 		                                                   labChqAmt1=0;
    				 		                                                   labCardAmt1=0;
    				 		                                                   labCashPlusCardAmt=lab.getNetAmount();
    				 		                                                   labTotalCashPlusCardAmt=labCashPlusCardAmt;
    				 		                                                   totalLabFeeAmt1+=labFee;
    				 		                                                   totalLabAdvAmt+=labAdvAmt;
    				 		                                                   labRecpAmt1=0;
    				 		                                                   labDueAmt1 =0;
    				 		                                                   totalLabDueAmt1+=labDueAmt1;
    				 		                                                   totalLabRecAmt1+=labRecpAmt1;
    				 		                                                  
    				 		                                              }
    				 }
    				 }
    				 }
    				 
    					
    					
    					PdfPCell cell04111;
    					
    					cell04111 = new PdfPCell(new Phrase("LABORATORY BILLS", headFont));
    					cell04111.setBorder(Rectangle.NO_BORDER);
    					cell04111.setHorizontalAlignment(Element.ALIGN_LEFT);
    					//cell0411.setPaddingTop(10f);
    					table1411.addCell(cell04111);

    					cell04111 = new PdfPCell(new Phrase(String.valueOf(totalLabFeeAmt1), redFont));
    					cell04111.setBorder(Rectangle.NO_BORDER);
    					cell04111.setHorizontalAlignment(Element.ALIGN_RIGHT);
    					cell04111.setPaddingRight(42f);
    					//cell0411.setPaddingTop(10f);
    					//cell0411.setPaddingRight(20f);
    					table1411.addCell(cell04111);
    				
    					cell04111 = new PdfPCell(new Phrase("0", redFont));
    					cell04111.setBorder(Rectangle.NO_BORDER);
    					cell04111.setHorizontalAlignment(Element.ALIGN_RIGHT);
    					cell04111.setPaddingRight(12f);
    					//cell0411.setPaddingTop(10f);
    					table1411.addCell(cell04111);

    					cell04111 = new PdfPCell(new Phrase(String.valueOf(totalLabFeeAmt1), redFont));
    					cell04111.setBorder(Rectangle.NO_BORDER);
    					cell04111.setHorizontalAlignment(Element.ALIGN_RIGHT);
    					//cell0411.setPaddingTop(10f);
    					cell04111.setPaddingRight(20f);
    					table1411.addCell(cell04111);
    				
    					cell04111 = new PdfPCell(new Phrase(String.valueOf(totalLabAdvAmt), redFont));
    					cell04111.setBorder(Rectangle.NO_BORDER);
    					cell04111.setHorizontalAlignment(Element.ALIGN_RIGHT);
    					cell04111.setPaddingRight(21f);
    					//cell0411.setPaddingTop(10f);
    					table1411.addCell(cell04111);

    					cell04111 = new PdfPCell(new Phrase(String.valueOf(totalLabRecAmt1), redFont));
    					cell04111.setBorder(Rectangle.NO_BORDER);
    					cell04111.setHorizontalAlignment(Element.ALIGN_RIGHT);
    					//cell0411.setPaddingTop(10f);
    					cell04111.setPaddingRight(20f);
    					table1411.addCell(cell04111);
    				
    					cell04111 = new PdfPCell(new Phrase(String.valueOf(totalLabCashAmt1), redFont));
    					cell04111.setBorder(Rectangle.NO_BORDER);
    					cell04111.setHorizontalAlignment(Element.ALIGN_RIGHT);
    					cell04111.setPaddingRight(19f);
    					//cell0411.setPaddingTop(10f);
    					table1411.addCell(cell04111);

    					cell04111 = new PdfPCell(new Phrase(String.valueOf(totalLabChqAmt1), redFont));
    					cell04111.setBorder(Rectangle.NO_BORDER);
    					cell04111.setHorizontalAlignment(Element.ALIGN_RIGHT);
    					cell04111.setPaddingRight(21f);
    				//	cell0411.setPaddingTop(10f);
    					table1411.addCell(cell04111);
    				
    					cell04111 = new PdfPCell(new Phrase(String.valueOf(totalLabCardAmt1), redFont));
    					cell04111.setBorder(Rectangle.NO_BORDER);
    					cell04111.setHorizontalAlignment(Element.ALIGN_RIGHT);
    					cell04111.setPaddingRight(13f);
    					//cell0411.setPaddingTop(10f);
    					table1411.addCell(cell04111);
    					
    					cell04111 = new PdfPCell(new Phrase(String.valueOf(labTotalCashPlusCardAmt), redFont));
    					cell04111.setBorder(Rectangle.NO_BORDER);
    					cell04111.setHorizontalAlignment(Element.ALIGN_RIGHT);
    					//cell0411.setPaddingRight(15f);
    					//cell0411.setPaddingTop(10f);
    					table1411.addCell(cell04111);

    					cell04111 = new PdfPCell(new Phrase(String.valueOf(totalLabDueAmt1), redFont));
    					cell04111.setBorder(Rectangle.NO_BORDER);
    					cell04111.setHorizontalAlignment(Element.ALIGN_RIGHT);
    					//cell0411.setPaddingTop(10f);
    					table1411.addCell(cell04111);
    		
    					cell1.addElement(table1411);
    					
    				  
                
                
//--------------------------------- VOUCHERS PAYMENT -------------------------------------------------        
                
    					PdfPTable table15 = new PdfPTable(11);
    					table15.setWidths(new float[] { 7.5f, 4f, 1.5f, 4f, 4f, 4f, 4f, 3f, 4f,4.5f,3f});
    					table15.setSpacingBefore(10);
    					table15.setWidthPercentage(100f);
    		
    					long vAmt = 0;
    					long vCashAmt = 0;
    					long vChqAmt = 0;
    					long vCardAmt = 0;
    					float totalVAmt = 0;
    					float totalVCashAmt = 0;
    					float totalVCardAmt = 0;
    					float totalVChqAmt = 0;
    					float totalVDueAmt = 0;
    					long vDueAmt=0;
    					long vRecpAmt=0;
    					float totalVRecpAmt =0;
    					float vCashPlusCardAmt=0;
    	                float vTotalCashPlusCardAmt=0;
    					
    					List<Voucher> voucher = (List<Voucher>) voucherRepository.findUserWiseIpOpDetailed(user.get("fromDate"), user.get("toDate"),user1.get(0).getUserId());
    								
    					 if(!voucher.isEmpty())
    		             {
    		                for(Voucher v : voucher)
    		                {
    		                    if(v.getPaymentType().equalsIgnoreCase("CASH"))
    		                    {
    		                        vAmt = v.getVoucherAmount();
    		                        vCashAmt = v.getVoucherAmount();
    		                        vChqAmt = 0;
    		                        vCardAmt = 0;
    		                        vRecpAmt = v.getVoucherAmount();
    		                        vDueAmt = vRecpAmt-vCashAmt;
    		                        totalVCashAmt+=vCashAmt;
    		                        totalVAmt+=vAmt;
    		                        totalVDueAmt+=vDueAmt;
    		                        totalVRecpAmt+=vRecpAmt;
    		                        
    		                    }
    		                    else if(v.getPaymentType().equalsIgnoreCase("CHQ")||v.getPaymentType().equalsIgnoreCase("Cheque"))
    		                    {
    		                        vAmt = v.getVoucherAmount();
    		                        vChqAmt = v.getVoucherAmount();
    		                        vCashAmt = 0;
    		                        vCardAmt = 0;
    		                        vRecpAmt = v.getVoucherAmount();
    		                        vDueAmt = vRecpAmt-vChqAmt;
    		                        totalVChqAmt+=vChqAmt;
    		                        totalVAmt+=vAmt;
    		                        totalVDueAmt+=vDueAmt;
    		                        totalVRecpAmt+=vRecpAmt;
    		                        
    		                    }
    		                    else if(v.getPaymentType().equalsIgnoreCase("DEBIT CARD") || v.getPaymentType().equalsIgnoreCase("CREDIT CARD") || v.getPaymentType().equalsIgnoreCase("CARD"))
    		                    {
    		                        vAmt = v.getVoucherAmount();
    		                        vCardAmt = v.getVoucherAmount();
    		                        vCashAmt = 0;
    		                        vChqAmt = 0;
    		                        vRecpAmt = v.getVoucherAmount();
    		                        vDueAmt = vRecpAmt-vCardAmt;
    		                        totalVCardAmt+=vCardAmt;
    		                        totalVAmt+=vAmt;
    		                        totalVDueAmt+=vDueAmt;
    		                        totalVRecpAmt+=vRecpAmt;
    		                        
    		                    }
    		                    else if(v.getPaymentType().equalsIgnoreCase("DUE"))
    		                    {
    		                        vAmt = 0;
    		                        vCashAmt =0;
    		                        vChqAmt = 0;
    		                        vCardAmt = 0;
    		                        vRecpAmt =0;
    		                        vDueAmt = v.getVoucherAmount();
    		                        totalVCashAmt+=vCashAmt;
    		                        totalVAmt+=vAmt;
    		                        totalVDueAmt+=vDueAmt;
    		                        totalVRecpAmt+=vRecpAmt;
    		                        
    		                    }
    		                    else if(v.getPaymentType().equalsIgnoreCase("Cash+Card"))
    		                    {
    		                        vAmt = v.getVoucherAmount();
    		                        vCashAmt =0;
    		                        vChqAmt = 0;
    		                        vCardAmt = 0;
    		                        vRecpAmt =vAmt;
    		                        vDueAmt = 0;
    		                        vCashPlusCardAmt=v.getVoucherAmount();
    		                        vTotalCashPlusCardAmt=vCashPlusCardAmt;
    		                        totalVCashAmt+=vCashAmt;
    		                        totalVAmt+=vAmt;
    		                        totalVDueAmt+=vDueAmt;
    		                        totalVRecpAmt+=vRecpAmt;
    		                        
    		                    }
    		}
    		}					
    						
    						PdfPCell cell05;
    						
    						cell05 = new PdfPCell(new Phrase("VOUCHER PAYMENTS", headFont));
    						cell05.setBorder(Rectangle.NO_BORDER);
    						cell05.setHorizontalAlignment(Element.ALIGN_LEFT);
    						//cell05.setPaddingTop(10f);
    						table15.addCell(cell05);

    						cell05 = new PdfPCell(new Phrase("-"+String.valueOf(totalVAmt), redFont1));
    						cell05.setBorder(Rectangle.NO_BORDER);
    						cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
    						//cell05.setPaddingTop(10f);
    						cell05.setPaddingRight(42f);
    						table15.addCell(cell05);
    					
    						cell05 = new PdfPCell(new Phrase("0", redFont));
    						cell05.setBorder(Rectangle.NO_BORDER);
    						cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
    						cell05.setPaddingRight(12f);
    						table15.addCell(cell05);

    						cell05 = new PdfPCell(new Phrase("-"+String.valueOf(totalVAmt), redFont1));
    						cell05.setBorder(Rectangle.NO_BORDER);
    						cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
    						//cell05.setPaddingTop(10f);
    						cell05.setPaddingRight(20f);
    						table15.addCell(cell05);
    					
    						cell05 = new PdfPCell(new Phrase("0.0", redFont));
    						cell05.setBorder(Rectangle.NO_BORDER);
    						cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
    						cell05.setPaddingRight(21f);
    						table15.addCell(cell05);

    						cell05 = new PdfPCell(new Phrase("-"+String.valueOf(totalVRecpAmt), redFont1));
    						cell05.setBorder(Rectangle.NO_BORDER);
    						cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
    						//cell05.setPaddingTop(10f);
    						cell05.setPaddingRight(19f);
    						table15.addCell(cell05);
    					
    						cell05 = new PdfPCell(new Phrase("-"+String.valueOf(totalVCashAmt), redFont1));
    						cell05.setBorder(Rectangle.NO_BORDER);
    						cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
    						cell05.setPaddingRight(21f);
    						table15.addCell(cell05);

    						cell05 = new PdfPCell(new Phrase("-"+String.valueOf(totalVChqAmt), redFont1));
    						cell05.setBorder(Rectangle.NO_BORDER);
    						cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
    						cell05.setPaddingRight(21f);
    						table15.addCell(cell05);
    					
    						cell05 = new PdfPCell(new Phrase("-"+String.valueOf(totalVCardAmt), redFont1));
    						cell05.setBorder(Rectangle.NO_BORDER);
    						cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
    						cell05.setPaddingRight(12f);
    						table15.addCell(cell05);
    						
    						cell05 = new PdfPCell(new Phrase("-"+String.valueOf(vTotalCashPlusCardAmt), redFont1));
    						cell05.setBorder(Rectangle.NO_BORDER);
    						cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
    						//cell05.setPaddingRight(10f);
    						table15.addCell(cell05);

    						cell05 = new PdfPCell(new Phrase("-"+String.valueOf(totalVDueAmt), redFont1));
    						cell05.setBorder(Rectangle.NO_BORDER);
    						cell05.setHorizontalAlignment(Element.ALIGN_RIGHT);
    						//cell05.setPaddingRight(10f);
    						table15.addCell(cell05);
    			
    						cell1.addElement(table15);
        
    						
    						//----------------------------FOR total calculation----------------------------------------
    						float totalGAmt = ((totalFeeAmt1+totalFeeAmt+totalFeeAmtReg+totalIpFeeAmt1+totalLabFeeAmt1+totalFeeOspAmt1+totalipAdvFeeAmt)-totalVAmt);
    	                    float totalNetAmt = ((totalFeeAmt1+totalFeeAmt+totalFeeAmtReg+totalIpFeeAmt1+totalLabFeeAmt1+totalFeeOspAmt1+totalipAdvFeeAmt)-totalVAmt);
    	                    float totalAdvAmt = (totalIpAdvAmt+totalAdvcAmt+totalOpAdvAmt+totalLabAdvAmt+totalAdvcAmtReg+totalOspAdvAmt+totalipAdvAdvcAmt);
    	                    float totalRAmt = ((totalRecAmt1+totalRecpAmt+totalRecpAmtReg+totalIpRecAmt1+totalLabRecAmt1+totalOspRecAmt1+totalipAdvRecpAmt)-totalVRecpAmt);
    	                    float totalCAmt = ((totalCashAmt1+totalCashAmt+totalCashAmtReg+totalIpCashAmt1+totalLabCashAmt1+totalCashOspAmt1+totalipAdvCashAmt)-totalVCashAmt);
    	                    float totalChAmt = ((totalChqAmt1+totalChqAmt+totalChqAmtReg+totalIpChqAmt1+totalLabChqAmt1+totalChqOspAmt1+totalipAdvChqAmt)-totalVChqAmt);
    	                    float totalCrdAmt = ((totalCardAmt1+totalCardAmt+totalCardAmtReg+totalIpCardAmt1+totalLabCardAmt1+totalCardOspAmt1+totalipAdvCardAmt)-totalVCardAmt);
    	                    float totalDAmt = ((totalDueAmt1+totalDueAmt+totalDueAmtReg+totalIpDueAmt1+totalLabDueAmt1+totalDueOspAmt1+totalipAdvDueAmt)-totalVDueAmt);
    	                    float totalCPCAmt=((totalCashPlusCardDocAmt+totalCashPlusCardRegAmt+ipTotalCashPlusCardAmt+labTotalCashPlusCardAmt+totalcashPlusCardAmt+totalcashPlusCardOspAmt+totalCashPlusCardipAdvAmt)-vTotalCashPlusCardAmt);

                    
            
                	PdfPTable table06 = new PdfPTable(11);
        			table06.setWidths(new float[] {7.5f, 4f, 1.5f, 4f, 4f, 4f, 4f, 3f, 4f,4.5f,3f});
        			table06.setSpacingBefore(10);
        			table06.setWidthPercentage(100f);
        			
        			PdfPCell cell08;

        			cell08 = new PdfPCell(new Phrase("User Total         :", headFont));
        			cell08.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        			cell08.setPaddingTop(5f);
        			cell08.setPaddingBottom(7f);
        			cell08.setHorizontalAlignment(Element.ALIGN_LEFT);
        			table06.addCell(cell08);

        			cell08 = new PdfPCell(new Phrase(String.valueOf(totalGAmt), redFont));
        			cell08.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        			cell08.setPaddingTop(5f);
        			cell08.setPaddingBottom(7f);
        			cell08.setHorizontalAlignment(Element.ALIGN_RIGHT);
        			cell08.setPaddingRight(42f);
        			table06.addCell(cell08);
        		
        			cell08 = new PdfPCell(new Phrase("0", redFont));
        			cell08.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        			cell08.setPaddingTop(5f);
        			cell08.setPaddingBottom(7f);
        			cell08.setHorizontalAlignment(Element.ALIGN_RIGHT);
        			cell08.setPaddingRight(12f);
        			table06.addCell(cell08);

        			cell08 = new PdfPCell(new Phrase(String.valueOf(totalNetAmt), redFont));
        			cell08.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        			cell08.setPaddingTop(5f);
        			cell08.setPaddingBottom(7f);
        			cell08.setHorizontalAlignment(Element.ALIGN_RIGHT);
        			cell08.setPaddingRight(20f);
        			table06.addCell(cell08);
        		
        			cell08 = new PdfPCell(new Phrase(String.valueOf(totalAdvAmt), redFont));
        			cell08.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        			cell08.setPaddingTop(5f);
        			cell08.setPaddingBottom(7f);
        			cell08.setHorizontalAlignment(Element.ALIGN_RIGHT);
        			cell08.setPaddingRight(21f);
        			table06.addCell(cell08);

        			cell08 = new PdfPCell(new Phrase(String.valueOf(totalRAmt), redFont));
        			cell08.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        			cell08.setPaddingTop(5f);
        			cell08.setPaddingBottom(7f);
        			cell08.setHorizontalAlignment(Element.ALIGN_RIGHT);
        			cell08.setPaddingRight(19f);
        			table06.addCell(cell08);
        		
        			cell08 = new PdfPCell(new Phrase(String.valueOf(totalCAmt), redFont));
        			cell08.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        			cell08.setPaddingTop(5f);
        			cell08.setPaddingBottom(7f);
        			cell08.setHorizontalAlignment(Element.ALIGN_RIGHT);
        			cell08.setPaddingRight(21f);
        			table06.addCell(cell08);

        			cell08 = new PdfPCell(new Phrase(String.valueOf(totalChAmt), redFont));
        			cell08.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        			cell08.setPaddingTop(5f);
        			cell08.setPaddingBottom(7f);
        			cell08.setHorizontalAlignment(Element.ALIGN_RIGHT);
        			cell08.setPaddingRight(21f);
        			table06.addCell(cell08);
        		
        			cell08 = new PdfPCell(new Phrase(String.valueOf(totalCrdAmt), redFont));
        			cell08.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        			cell08.setPaddingTop(5f);
        			cell08.setPaddingBottom(7f);
        			cell08.setHorizontalAlignment(Element.ALIGN_RIGHT);
        			cell08.setPaddingRight(12f);
        			table06.addCell(cell08);
        			
        			cell08 = new PdfPCell(new Phrase(String.valueOf(totalCPCAmt), redFont));
        			cell08.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        			cell08.setPaddingTop(5f);
        			cell08.setPaddingBottom(7f);
        			cell08.setHorizontalAlignment(Element.ALIGN_RIGHT);
        			table06.addCell(cell08);

        			cell08 = new PdfPCell(new Phrase(String.valueOf(totalDAmt), redFont));
        			cell08.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        			cell08.setPaddingTop(5f);
        			cell08.setPaddingBottom(7f);
        			cell08.setHorizontalAlignment(Element.ALIGN_RIGHT);
        			table06.addCell(cell08);

        			cell1.addElement(table06);
        			
        			gGAmt+=totalGAmt;
        	        gConcAmt=0;
        	        gNetAmt+=totalNetAmt;
        	        gAdvAmt+=totalAdvAmt;
        	        gRecAmt+=totalRAmt;
        	        gCashAmt+=totalCAmt;
        	        gCardAmt+=totalCrdAmt;
        	        gchqAmt+=totalChAmt;
        	        gCashPlusCardAmt+=totalCPCAmt;
        	        gDueAmt+=totalDAmt;
        			
        			
        }
        			PdfPTable table08 = new PdfPTable(11);
        			table08.setWidths(new float[] {7.5f, 4f, 1.5f, 4f, 4f, 4f, 4f, 3f, 4f,4.5f,3f});
        			table08.setSpacingBefore(10);
        			table08.setWidthPercentage(100f);
        			
        			PdfPCell cell09;

        			cell09 = new PdfPCell(new Phrase("Grand Total      :", headFont));
        			cell09.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        			cell09.setPaddingTop(5f);
        			cell09.setPaddingBottom(7f);
        			cell09.setHorizontalAlignment(Element.ALIGN_LEFT);
        			table08.addCell(cell09);

        			cell09 = new PdfPCell(new Phrase(String.valueOf(gGAmt), redFont));
        			cell09.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        			cell09.setPaddingTop(5f);
        			cell09.setPaddingBottom(7f);
        			cell09.setHorizontalAlignment(Element.ALIGN_RIGHT);
        			cell09.setPaddingRight(42f);
        			table08.addCell(cell09);
        		
        			cell09 = new PdfPCell(new Phrase(String.valueOf(gConcAmt), redFont));
        			cell09.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        			cell09.setPaddingTop(5f);
        			cell09.setPaddingBottom(7f);
        			cell09.setHorizontalAlignment(Element.ALIGN_RIGHT);
        			cell09.setPaddingRight(12f);
        			table08.addCell(cell09);

        			cell09 = new PdfPCell(new Phrase(String.valueOf(gNetAmt), redFont));
        			cell09.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        			cell09.setPaddingTop(5f);
        			cell09.setPaddingBottom(7f);
        			cell09.setHorizontalAlignment(Element.ALIGN_RIGHT);
        			cell09.setPaddingRight(20f);
        			table08.addCell(cell09);
        		
        			cell09 = new PdfPCell(new Phrase(String.valueOf(gAdvAmt), redFont));
        			cell09.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        			cell09.setPaddingTop(5f);
        			cell09.setPaddingBottom(7f);
        			cell09.setHorizontalAlignment(Element.ALIGN_RIGHT);
        			cell09.setPaddingRight(21f);
        			table08.addCell(cell09);

        			cell09 = new PdfPCell(new Phrase(String.valueOf(gRecAmt), redFont));
        			cell09.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        			cell09.setPaddingTop(5f);
        			cell09.setPaddingBottom(7f);
        			cell09.setHorizontalAlignment(Element.ALIGN_RIGHT);
        			cell09.setPaddingRight(20f);
        			//cell09.setPaddingRight(-5f);
        			table08.addCell(cell09);
        		
        			cell09 = new PdfPCell(new Phrase(String.valueOf(gCashAmt), redFont));
        			cell09.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        			cell09.setPaddingTop(5f);
        			cell09.setPaddingBottom(7f);
        			cell09.setHorizontalAlignment(Element.ALIGN_RIGHT);
        			cell09.setPaddingRight(19f);
        			table08.addCell(cell09);

        			cell09 = new PdfPCell(new Phrase(String.valueOf(gchqAmt), redFont));
        			cell09.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        			cell09.setPaddingTop(5f);
        			cell09.setPaddingBottom(7f);
        			cell09.setHorizontalAlignment(Element.ALIGN_RIGHT);
        			cell09.setPaddingRight(21f);
        			table08.addCell(cell09);
        		
        			cell09 = new PdfPCell(new Phrase(String.valueOf(gCardAmt), redFont));
        			cell09.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        			cell09.setPaddingTop(5f);
        			cell09.setPaddingBottom(7f);
        			cell09.setHorizontalAlignment(Element.ALIGN_RIGHT);
        			cell09.setPaddingRight(12f);
        			table08.addCell(cell09);
        			
        			cell09 = new PdfPCell(new Phrase(String.valueOf(gCashPlusCardAmt), redFont));
        			cell09.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        			cell09.setPaddingTop(5f);
        			cell09.setPaddingBottom(7f);
        			cell09.setHorizontalAlignment(Element.ALIGN_RIGHT);
        			//cell09.setPaddingRight(17f);
        			table08.addCell(cell09);

        			cell09 = new PdfPCell(new Phrase(String.valueOf(gDueAmt), redFont));
        			cell09.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
        			cell09.setPaddingTop(5f);
        			cell09.setPaddingBottom(7f);
        			cell09.setHorizontalAlignment(Element.ALIGN_RIGHT);
        			table08.addCell(cell09);
        			 cell1.addElement(table08);
			
			
                //for cash + card calculations--------------------------------------------------------
                
             /*   
                PdfPTable table051 = new PdfPTable(1);
                table051.setWidths(new float[] { 8f});
                table051.setSpacingBefore(10);
                table051.setWidthPercentage(100f);
               
                PdfPCell hcell1011;
        
                hcell1011 = new PdfPCell(new Phrase("CASH PLUS CARD PAYMENTS", headFont));
                hcell1011.setBorder(Rectangle.NO_BORDER);
                
                hcell1011.setHorizontalAlignment(Element.ALIGN_LEFT);
                hcell1011.setPaddingBottom(1f);
                table051.addCell(hcell1011);
                cell1.addElement(table051);
                
                PdfPTable table151 = new PdfPTable(14);
                table151.setWidths(new float[] {4.8f, 6.4f, 6f, 6f, 4f, 4f, 3.3f, 3.4f, 3.3f, 3.6f, 3.4f, 3.6f,4.5f,3.1f});
                table151.setSpacingBefore(10);
                table151.setWidthPercentage(100f);
                PdfPCell hcell176;
        
                hcell176 = new PdfPCell(new Phrase("Umr No", redFont));
                hcell176.setBorder(Rectangle.NO_BORDER);
                hcell176.setBackgroundColor(BaseColor.GRAY);
                hcell176.setPaddingBottom(5f);
                hcell176.setHorizontalAlignment(Element.ALIGN_LEFT);
                table151.addCell(hcell176);
                
                hcell176 = new PdfPCell(new Phrase("Bill No", redFont));
                hcell176.setBorder(Rectangle.NO_BORDER);
                hcell176.setBackgroundColor(BaseColor.GRAY);
                hcell176.setPaddingBottom(5f);
                hcell176.setHorizontalAlignment(Element.ALIGN_LEFT);
                table151.addCell(hcell176);
                
                hcell176 = new PdfPCell(new Phrase("Cash Amount", redFont));
                hcell176.setBorder(Rectangle.NO_BORDER);
                hcell176.setBackgroundColor(BaseColor.GRAY);
                hcell176.setPaddingBottom(5f);
                hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
                hcell176.setPaddingRight(10f);
                table151.addCell(hcell176);
                
                hcell176 = new PdfPCell(new Phrase("Card Amount", redFont));
                hcell176.setBorder(Rectangle.NO_BORDER);
                hcell176.setBackgroundColor(BaseColor.GRAY);
                hcell176.setPaddingBottom(5f);
                hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
                hcell176.setPaddingRight(10f);
                table151.addCell(hcell176);
                
                hcell176 = new PdfPCell(new Phrase(" ", redFont));
                hcell176.setBorder(Rectangle.NO_BORDER);
                hcell176.setBackgroundColor(BaseColor.GRAY);
                hcell176.setPaddingBottom(5f);
                hcell176.setHorizontalAlignment(Element.ALIGN_LEFT);
                //hcell10.setPaddingRight(20f);
                table151.addCell(hcell176);
                
                hcell176 = new PdfPCell(new Phrase(" ", redFont));
                hcell176.setBorder(Rectangle.NO_BORDER);
                hcell176.setBackgroundColor(BaseColor.GRAY);
                hcell176.setPaddingBottom(5f);
                hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
                hcell176.setPaddingRight(10f);
                table151.addCell(hcell176);
                
                hcell176 = new PdfPCell(new Phrase(" ", redFont));
                hcell176.setBorder(Rectangle.NO_BORDER);
                hcell176.setBackgroundColor(BaseColor.GRAY);
                hcell176.setPaddingBottom(5f);
                hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
                hcell176.setPaddingRight(10f);
                table151.addCell(hcell176);
                
                hcell176 = new PdfPCell(new Phrase(" ", redFont));
                hcell176.setBorder(Rectangle.NO_BORDER);
                hcell176.setBackgroundColor(BaseColor.GRAY);
                hcell176.setPaddingBottom(5f);
                hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
                hcell176.setPaddingRight(10f);
                table151.addCell(hcell176);
                
                hcell176 = new PdfPCell(new Phrase(" ", redFont));
                hcell176.setBorder(Rectangle.NO_BORDER);
                hcell176.setBackgroundColor(BaseColor.GRAY);
                hcell176.setPaddingBottom(5f);
                hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
                hcell176.setPaddingRight(10f);
                table151.addCell(hcell176);
                
                hcell176 = new PdfPCell(new Phrase(" ", redFont));
                hcell176.setBorder(Rectangle.NO_BORDER);
                hcell176.setBackgroundColor(BaseColor.GRAY);
                hcell176.setPaddingBottom(5f);
                hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
                hcell176.setPaddingRight(10f);
                table151.addCell(hcell176);
                
                hcell176 = new PdfPCell(new Phrase(" ", redFont));
                hcell176.setBorder(Rectangle.NO_BORDER);
                hcell176.setBackgroundColor(BaseColor.GRAY);
                hcell176.setPaddingBottom(5f);
                hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
                hcell176.setPaddingRight(10f);
                table151.addCell(hcell176);
                
                hcell176 = new PdfPCell(new Phrase(" ", redFont));
                hcell176.setBorder(Rectangle.NO_BORDER);
                hcell176.setBackgroundColor(BaseColor.GRAY);
                hcell176.setPaddingBottom(5f);
                hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
                hcell176.setPaddingRight(10f);
                table151.addCell(hcell176);
                
                hcell176 = new PdfPCell(new Phrase(" ", redFont));
                hcell176.setBorder(Rectangle.NO_BORDER);
                hcell176.setBackgroundColor(BaseColor.GRAY);
                hcell176.setPaddingBottom(5f);
                hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
                hcell176.setPaddingRight(10f);
                table151.addCell(hcell176);
                
                
                hcell176 = new PdfPCell(new Phrase(" ", redFont));
                hcell176.setBorder(Rectangle.NO_BORDER);
                hcell176.setBackgroundColor(BaseColor.GRAY);
                hcell176.setPaddingBottom(5f);
                hcell176.setHorizontalAlignment(Element.ALIGN_RIGHT);
                table151.addCell(hcell176);
                
                
                
                //-----------------------------------------------
                
                String billNo=null;
                float cardAmount=0;
                float cardAmount1=0;
                float cashAmount=0;
                float cashAmount1=0;
                float totalCardAmount=0;
                float totalCardAmount1=0;
                float totalCashAmount=0;
                float totalCashAmount1=0;
                String umr=null;
                String pId=null;
                
                PdfPTable table1511 = new PdfPTable(14);
                table1511.setWidths(new float[] {9.9f, 3.7f, 6f, 6f, 5f, 5f, 3.3f, 3.4f, 3.3f, 3.6f, 3.4f, 3.6f,4.5f,3.1f});
                table1511.setSpacingBefore(10);
                table1511.setWidthPercentage(100f);
                PdfPCell cell111;
                
                
                List<Map<String, String>> show = new ArrayList<>();
	        	List<String> info = new ArrayList<>();
	        	Map<String, String> displayInfo = null; 
	        	
	        	
	        	for(User uid:user1)
	        	{
	        	 List<PatientRegistration> patientRegistration = patientRegistrationRepository.findUserWiseIpOpDetailed(user.get("fromDate"), user.get("toDate"),uid.getUserId());
                
                if(!patientRegistration.isEmpty())
                {
                for (PatientRegistration pReg : patientRegistration) 
	            {
	            	pId = pReg.getRegId();

	            	displayInfo = new HashMap<>();
	            	List<PatientPayment> patientPayments = paymentRepository.findByPatientRegistrationId(pId);
                
				              if(!patientPayments.isEmpty())
				              {
						                for(PatientPayment payment:patientPayments)
						                {
						                	billNo=payment.getBillNo();
						                	CashPlusCard cashNCard=cashPlusCardRepository.findByBillNo(billNo);
						                
									                	if(cashNCard!=null && payment.getModeOfPaymant().equalsIgnoreCase("cash+card"))
									                	{
									                		umr=pReg.getPatientDetails().getUmr();
									                	
									                		if(!info.contains(billNo))
									                		{
											                	
											                
											                		
											                		if(billNo!=null) 
											                		{
														                    if(cashNCard.getCardAmount()!=0)
														                    {
														                    	cardAmount=cashNCard.getCardAmount();
														                    	totalCardAmount+=cardAmount;
														                        
														                    }
														                   if(cashNCard.getCashAmount()!=0)
														                    {
														                       cashAmount=cashNCard.getCashAmount();
														                       totalCashAmount+=cashAmount;
														                        
														                    }
														                   // cashAmount1+=cashAmount;
														                   // cardAmount1+=cardAmount;
														                    displayInfo.put("cashAmount", String.valueOf(cashAmount));
							    	 	    		     	                displayInfo.put("cardAmount", String.valueOf(cardAmount));
											                		} 
											                		
						
											                	
											                	info.add(billNo);
											                	
											                	displayInfo.put("umr", String.valueOf(umr));
				    	 	    		     	                displayInfo.put("billNo", String.valueOf(billNo));
				    	 	    		     	             
				    	 	    		     	              show.add(displayInfo);
				    	 	    		     	            
									                		}
						  
									                		
									                	}
									                	           	
						                }
						                
				              
				              }
	                 
	            }
                }
              //  totalCashAmount1+=totalCashAmount;
              //  totalCardAmount1+=totalCardAmount;
                for (Map<String, String> show1 : show) { 
                
                	  PdfPCell cell36;
		                
                      cell36 = new PdfPCell(new Phrase(String.valueOf( show1.get("umr")), redFont));
                      cell36.setBorder(Rectangle.NO_BORDER);
                      cell36.setHorizontalAlignment(Element.ALIGN_LEFT);
                      table151.addCell(cell36);
      
                      cell36 = new PdfPCell(new Phrase(String.valueOf( show1.get("billNo")), redFont));
                      cell36.setBorder(Rectangle.NO_BORDER);
                      cell36.setHorizontalAlignment(Element.ALIGN_LEFT);
                      //cell111.setPaddingLeft(-30f);
                      table151.addCell(cell36);
      
                      cell36 = new PdfPCell(new Phrase(String.valueOf( show1.get("cashAmount")), redFont));
                      cell36.setBorder(Rectangle.NO_BORDER);
                      cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                      cell36.setPaddingRight(10f);
                      //cell111.setPaddingLeft(-30f);
                      table151.addCell(cell36);
      
                      cell36 = new PdfPCell(new Phrase(String.valueOf( show1.get("cardAmount")), redFont));
                      cell36.setBorder(Rectangle.NO_BORDER);
                      cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                      cell36.setPaddingRight(10f);
                      //cell111.setPaddingLeft(-20f);
                      table151.addCell(cell36);
      
                      cell36 = new PdfPCell(new Phrase("", redFont));
                      cell36.setBorder(Rectangle.NO_BORDER);
                      cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                      cell36.setPaddingRight(10f);
                      //cell111.setPaddingRight(35f);
                      table151.addCell(cell36);
                  
                      cell36 = new PdfPCell(new Phrase("", redFont));
                      cell36.setBorder(Rectangle.NO_BORDER);
                      cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                      cell36.setPaddingRight(10f);
                      //cell111.setPaddingRight(20f);
                      table151.addCell(cell36);
      
                      cell36 = new PdfPCell(new Phrase("", redFont));
                      cell36.setBorder(Rectangle.NO_BORDER);
                      cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                      cell36.setPaddingRight(10f);
                      //cell111.setPaddingRight(15f);
                      table151.addCell(cell36);
                  
                      cell36 = new PdfPCell(new Phrase("", redFont));
                      cell36.setBorder(Rectangle.NO_BORDER);
                      cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                      cell36.setPaddingRight(10f);
                      //cell111.setPaddingRight(12f);
                      table151.addCell(cell36);
      
                      cell36 = new PdfPCell(new Phrase("", redFont));
                      cell36.setBorder(Rectangle.NO_BORDER);
                      cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                      cell36.setPaddingRight(10f);
                      //cell111.setPaddingRight(10f);
                      table151.addCell(cell36);
                  
                      cell36 = new PdfPCell(new Phrase("", redFont));
                      cell36.setBorder(Rectangle.NO_BORDER);
                      cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                      cell36.setPaddingRight(10f);
                      //cell111.setPaddingRight(10f);
                      table151.addCell(cell36);
      
                      cell36 = new PdfPCell(new Phrase("", redFont));
                      cell36.setBorder(Rectangle.NO_BORDER);
                      cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                      cell36.setPaddingRight(10f);
                      table151.addCell(cell36);
                  
                      cell36 = new PdfPCell(new Phrase("", redFont));
                      cell36.setBorder(Rectangle.NO_BORDER);
                      cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                      cell36.setPaddingRight(10f);
                      table151.addCell(cell36);
                      
                      cell36 = new PdfPCell(new Phrase("", redFont));
                      cell36.setBorder(Rectangle.NO_BORDER);
                      cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                      cell36.setPaddingRight(10f);
                      table151.addCell(cell36);
      
                      cell36 = new PdfPCell(new Phrase("", redFont));
                      cell36.setBorder(Rectangle.NO_BORDER);
                      cell36.setHorizontalAlignment(Element.ALIGN_RIGHT);
                      
                      table151.addCell(cell36);
                
                }
	        	
              
              
                
                cell111 = new PdfPCell(new Phrase("Total Cash+ Card Amount :", headFont));
                cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell111.setPaddingBottom(3f);
                cell111.setPaddingTop(3f);
                cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                table1511.addCell(cell111);

                cell111 = new PdfPCell(new Phrase("", redFont));
                cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell111.setPaddingBottom(3f);
                cell111.setPaddingTop(3f);
                cell111.setHorizontalAlignment(Element.ALIGN_LEFT);
                //cell111.setPaddingLeft(-30f);
                table1511.addCell(cell111);

                cell111 = new PdfPCell(new Phrase(String.valueOf(totalCashAmount), redFont));
                cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell111.setPaddingBottom(3f);
                cell111.setPaddingTop(3f);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell111.setPaddingRight(22f);
                cell111.setPaddingBottom(3f);
                cell111.setPaddingTop(3f);

                //cell111.setPaddingLeft(-30f);
                table1511.addCell(cell111);

                cell111 = new PdfPCell(new Phrase(String.valueOf(totalCardAmount), redFont));

                cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell111.setPaddingBottom(3f);
                cell111.setPaddingTop(3f);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell111.setPaddingRight(19f);
                //cell111.setPaddingLeft(-20f);
                table1511.addCell(cell111);

                cell111 = new PdfPCell(new Phrase("", redFont));
                cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell111.setPaddingBottom(3f);
                cell111.setPaddingTop(3f);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell111.setPaddingRight(10f);
                //cell111.setPaddingRight(35f);
                table1511.addCell(cell111);
            
                cell111 = new PdfPCell(new Phrase("", redFont));
                cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell111.setPaddingBottom(3f);
                cell111.setPaddingTop(3f);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell111.setPaddingRight(10f);
                //cell111.setPaddingRight(20f);
                table1511.addCell(cell111);

                cell111 = new PdfPCell(new Phrase("", redFont));
                cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell111.setPaddingBottom(3f);
                cell111.setPaddingTop(3f);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell111.setPaddingRight(10f);
                //cell111.setPaddingRight(15f);
                table1511.addCell(cell111);
            
                cell111 = new PdfPCell(new Phrase("", redFont));
                cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell111.setPaddingBottom(3f);
                cell111.setPaddingTop(3f);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell111.setPaddingRight(10f);
                //cell111.setPaddingRight(12f);
                table1511.addCell(cell111);

                cell111 = new PdfPCell(new Phrase("", redFont));
                cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell111.setPaddingBottom(3f);
                cell111.setPaddingTop(3f);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell111.setPaddingRight(10f);
                //cell111.setPaddingRight(10f);
                table1511.addCell(cell111);
            
                cell111 = new PdfPCell(new Phrase("", redFont));
                cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell111.setPaddingBottom(3f);
                cell111.setPaddingTop(3f);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell111.setPaddingRight(10f);
                //cell111.setPaddingRight(10f);
                table1511.addCell(cell111);

                cell111 = new PdfPCell(new Phrase("", redFont));
                cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell111.setPaddingBottom(3f);
                cell111.setPaddingTop(3f);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell111.setPaddingRight(10f);
                table1511.addCell(cell111);
            
                cell111 = new PdfPCell(new Phrase("", redFont));
                cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell111.setPaddingBottom(3f);
                cell111.setPaddingTop(3f);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell111.setPaddingRight(10f);
                table1511.addCell(cell111);
                
                cell111 = new PdfPCell(new Phrase("", redFont));
                cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell111.setPaddingBottom(3f);
                cell111.setPaddingTop(3f);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell111.setPaddingRight(10f);
                table1511.addCell(cell111);

                cell111 = new PdfPCell(new Phrase("", redFont));
                cell111.setBorder(Rectangle.TOP|Rectangle.BOTTOM);
                cell111.setPaddingBottom(3f);
                cell111.setPaddingTop(3f);
                cell111.setHorizontalAlignment(Element.ALIGN_RIGHT);
                
                table1511.addCell(cell111);
                
               //-----------------------------for total amount calculation------------------------------------------
                
                float totalCashGAmount=0;
                float totalCardGAmount=0;
                float totalChequeGAmount=0;
                float totalDueGAmount=0;
              
                if(totalCashAmount!=0 || totalCAmt!=0)
                {
                	totalCashGAmount+=totalCashAmount+totalCAmt;
                }
                if(totalCardAmount!=0 || totalCrdAmt!=0)
                {
                	totalCardGAmount+=totalCardAmount+totalCrdAmt;
                }
                if(totalChAmt!=0)
                {
                	totalChequeGAmount+=totalChAmt;
                }
                if(totalDAmt!=0)
                {
                	totalDueGAmount+=totalDAmt;
                }
               
                PdfPTable table059 = new PdfPTable(1);
                table059.setWidths(new float[] { 8f});
                table059.setSpacingBefore(10);
                table059.setWidthPercentage(100f);
               
                PdfPCell hcell1059;
        
                hcell1059 = new PdfPCell(new Phrase("GRAND TOTAL AMOUNT :", headFont));
                hcell1059.setBorder(Rectangle.NO_BORDER);
                
                hcell1059.setHorizontalAlignment(Element.ALIGN_LEFT);
                hcell1059.setPaddingBottom(1f);
                table059.addCell(hcell1059);
               // cell1.addElement(table059);
                
                PdfPTable table15111 = new PdfPTable(14);
                table15111.setWidths(new float[] {9.9f, 9.9f, 9.9f, 9.9f, 3f, 3f, 3.3f, 3f, 3f, 3f, 3.4f, 3.6f,4.5f,3.1f});
                table15111.setSpacingBefore(10);
                table15111.setWidthPercentage(100f);
                
                
                PdfPCell cell17;
                
                cell17 = new PdfPCell(new Phrase("Cash Amount", headFont));
                cell17.setBackgroundColor(BaseColor.GRAY);
                cell17.setBorder(Rectangle.NO_BORDER);
                cell17.setPaddingBottom(3f);
                cell17.setPaddingTop(3f);
                cell17.setHorizontalAlignment(Element.ALIGN_LEFT);
                table15111.addCell(cell17);

                cell17 = new PdfPCell(new Phrase("Card Amount", headFont));
                cell17.setBackgroundColor(BaseColor.GRAY);
                cell17.setBorder(Rectangle.NO_BORDER);
                cell17.setPaddingBottom(3f);
                cell17.setPaddingTop(3f);
                cell17.setHorizontalAlignment(Element.ALIGN_LEFT);
                //cell111.setPaddingLeft(-30f);
                table15111.addCell(cell17);

                cell17 = new PdfPCell(new Phrase("Cheque Amount", headFont));
                cell17.setBackgroundColor(BaseColor.GRAY);
                cell17.setBorder(Rectangle.NO_BORDER);
                cell17.setPaddingBottom(3f);
                cell17.setPaddingTop(3f);
                cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell17.setPaddingRight(22f);
                //cell111.setPaddingLeft(-30f);
                table15111.addCell(cell17);

                cell17 = new PdfPCell(new Phrase("Due Amount", headFont));
                cell17.setBackgroundColor(BaseColor.GRAY);
                cell17.setBorder(Rectangle.NO_BORDER);
                cell17.setPaddingBottom(3f);
                cell17.setPaddingTop(3f);
                cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell17.setPaddingRight(19f);
                //cell111.setPaddingLeft(-20f);
                table15111.addCell(cell17);

                cell17 = new PdfPCell(new Phrase("", redFont));
                cell17.setBackgroundColor(BaseColor.GRAY);
                cell17.setBorder(Rectangle.NO_BORDER);
                cell17.setPaddingBottom(3f);
                cell17.setPaddingTop(3f);
                cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell17.setPaddingRight(10f);
                //cell111.setPaddingRight(35f);
                table15111.addCell(cell17);
            
                cell17 = new PdfPCell(new Phrase("", redFont));
                cell17.setBackgroundColor(BaseColor.GRAY);
                cell17.setBorder(Rectangle.NO_BORDER);
                cell17.setPaddingBottom(3f);
                cell17.setPaddingTop(3f);
                cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell17.setPaddingRight(10f);
                //cell111.setPaddingRight(20f);
                table15111.addCell(cell17);

                cell17 = new PdfPCell(new Phrase("", redFont));
                cell17.setBackgroundColor(BaseColor.GRAY);
                cell17.setBorder(Rectangle.NO_BORDER);
                cell17.setPaddingBottom(3f);
                cell17.setPaddingTop(3f);
                cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell17.setPaddingRight(10f);
                //cell111.setPaddingRight(15f);
                table15111.addCell(cell17);
            
                cell17 = new PdfPCell(new Phrase("", redFont));
                cell17.setBackgroundColor(BaseColor.GRAY);
                cell17.setBorder(Rectangle.NO_BORDER);
                cell17.setPaddingBottom(3f);
                cell17.setPaddingTop(3f);
                cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell17.setPaddingRight(10f);
                //cell111.setPaddingRight(12f);
                table15111.addCell(cell17);

                cell17 = new PdfPCell(new Phrase("", redFont));
                cell17.setBackgroundColor(BaseColor.GRAY);
                cell17.setBorder(Rectangle.NO_BORDER);
                cell17.setPaddingBottom(3f);
                cell17.setPaddingTop(3f);
                cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell17.setPaddingRight(10f);
                //cell111.setPaddingRight(10f);
                table15111.addCell(cell17);
            
                cell17 = new PdfPCell(new Phrase("", redFont));
                cell17.setBackgroundColor(BaseColor.GRAY);
                cell17.setBorder(Rectangle.NO_BORDER);
                cell17.setPaddingBottom(3f);
                cell17.setPaddingTop(3f);
                cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell17.setPaddingRight(10f);
                //cell111.setPaddingRight(10f);
                table15111.addCell(cell17);

                cell17 = new PdfPCell(new Phrase("", redFont));
                cell17.setBackgroundColor(BaseColor.GRAY);
                cell17.setBorder(Rectangle.NO_BORDER);
                cell17.setPaddingBottom(3f);
                cell17.setPaddingTop(3f);
                cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell17.setPaddingRight(10f);
                table15111.addCell(cell17);
            
                cell17 = new PdfPCell(new Phrase("", redFont));
                cell17.setBackgroundColor(BaseColor.GRAY);
                cell17.setBorder(Rectangle.NO_BORDER);
                cell17.setPaddingBottom(3f);
                cell17.setPaddingTop(3f);
                cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell17.setPaddingRight(10f);
                table15111.addCell(cell17);
                
                cell17 = new PdfPCell(new Phrase("", redFont));
                cell17.setBackgroundColor(BaseColor.GRAY);
                cell17.setBorder(Rectangle.NO_BORDER);
                cell17.setPaddingBottom(3f);
                cell17.setPaddingTop(3f);
                cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell17.setPaddingRight(10f);
                table15111.addCell(cell17);

                cell17 = new PdfPCell(new Phrase("", redFont));
                cell17.setBackgroundColor(BaseColor.GRAY);
                cell17.setBorder(Rectangle.NO_BORDER);
                cell17.setPaddingBottom(3f);
                cell17.setPaddingTop(3f);
                cell17.setHorizontalAlignment(Element.ALIGN_RIGHT);
                
                table15111.addCell(cell17);
                
                
                PdfPCell cell171;
                
                cell171 = new PdfPCell(new Phrase(String.valueOf(totalCashGAmount), redFont));
                cell171.setBorder(Rectangle.NO_BORDER);
                cell171.setPaddingBottom(3f);
                cell171.setPaddingTop(3f);
                cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell171.setPaddingRight(48f);
                table15111.addCell(cell171);

                cell171 = new PdfPCell(new Phrase(String.valueOf(totalCardGAmount), redFont));
                cell171.setBorder(Rectangle.NO_BORDER);
                cell171.setPaddingBottom(3f);
                cell171.setPaddingTop(3f);
                cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell171.setPaddingRight(49f);
                //cell111.setPaddingLeft(-30f);
                table15111.addCell(cell171);

                cell171 = new PdfPCell(new Phrase(String.valueOf(totalChequeGAmount), redFont));
                cell171.setBorder(Rectangle.NO_BORDER);
                cell171.setPaddingBottom(3f);
                cell171.setPaddingTop(3f);
                cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell171.setPaddingRight(22f);
                //cell111.setPaddingLeft(-30f);
                table15111.addCell(cell171);

                cell171 = new PdfPCell(new Phrase(String.valueOf(totalDueGAmount), redFont));
                cell171.setBorder(Rectangle.NO_BORDER);
                cell171.setPaddingBottom(3f);
                cell171.setPaddingTop(3f);
                cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell171.setPaddingRight(19f);
                //cell111.setPaddingLeft(-20f);
                table15111.addCell(cell171);

                cell171 = new PdfPCell(new Phrase("", redFont));
                cell171.setBorder(Rectangle.NO_BORDER);
                cell171.setPaddingBottom(3f);
                cell171.setPaddingTop(3f);
                cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell171.setPaddingRight(10f);
                //cell111.setPaddingRight(35f);
                table15111.addCell(cell171);
            
                cell171 = new PdfPCell(new Phrase("", redFont));
                cell171.setBorder(Rectangle.NO_BORDER);
                cell171.setPaddingBottom(3f);
                cell171.setPaddingTop(3f);
                cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell171.setPaddingRight(10f);
                //cell111.setPaddingRight(20f);
                table15111.addCell(cell171);

                cell171 = new PdfPCell(new Phrase("", redFont));
                cell171.setBorder(Rectangle.NO_BORDER);
                cell171.setPaddingBottom(3f);
                cell171.setPaddingTop(3f);
                cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell171.setPaddingRight(10f);
                //cell111.setPaddingRight(15f);
                table15111.addCell(cell171);
            
                cell171 = new PdfPCell(new Phrase("", redFont));
                cell171.setBorder(Rectangle.NO_BORDER);
                cell171.setPaddingBottom(3f);
                cell171.setPaddingTop(3f);
                cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell171.setPaddingRight(10f);
                //cell111.setPaddingRight(12f);
                table15111.addCell(cell171);

                cell171 = new PdfPCell(new Phrase("", redFont));
                cell171.setBorder(Rectangle.NO_BORDER);
                cell171.setPaddingBottom(3f);
                cell171.setPaddingTop(3f);
                cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell171.setPaddingRight(10f);
                //cell111.setPaddingRight(10f);
                table15111.addCell(cell171);
            
                cell171 = new PdfPCell(new Phrase("", redFont));
                cell171.setBorder(Rectangle.NO_BORDER);
                cell171.setPaddingBottom(3f);
                cell171.setPaddingTop(3f);
                cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell171.setPaddingRight(10f);
                //cell111.setPaddingRight(10f);
                table15111.addCell(cell171);

                cell171 = new PdfPCell(new Phrase("", redFont));
                cell171.setBorder(Rectangle.NO_BORDER);
                cell171.setPaddingBottom(3f);
                cell171.setPaddingTop(3f);
                cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell171.setPaddingRight(10f);
                table15111.addCell(cell171);
            
                cell171 = new PdfPCell(new Phrase("", redFont));
                cell171.setBorder(Rectangle.NO_BORDER);
                cell171.setPaddingBottom(3f);
                cell171.setPaddingTop(3f);
                cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell171.setPaddingRight(10f);
                table15111.addCell(cell171);
                
                cell171 = new PdfPCell(new Phrase("", redFont));
                cell171.setBorder(Rectangle.NO_BORDER);
                cell171.setPaddingBottom(3f);
                cell171.setPaddingTop(3f);
                cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cell171.setPaddingRight(10f);
                table15111.addCell(cell171);

                cell171 = new PdfPCell(new Phrase("", redFont));
                cell171.setBorder(Rectangle.NO_BORDER);
                cell171.setPaddingBottom(3f);
                cell171.setPaddingTop(3f);
                cell171.setHorizontalAlignment(Element.ALIGN_RIGHT);
                
                table15111.addCell(cell171);*/
               
                //----------------------------------end of pdf-------------------------------------------
                
                
               /* cell1.addElement(table151);
                cell1.addElement(table1511);
                cell1.addElement(table059);
                cell1.addElement(table15111);
            */
                
            table.addCell(cell1);
            document.add(table);
            document.close();
        
        System.out.println("finished");
        pdfByte = byteArrayOutputStream.toByteArray();
        String uri = ServletUriComponentsBuilder.fromCurrentContextPath().path("/v1/sales/viewFile/")
                .path(salesPaymentPdfServiceImpl.getNextId()).toUriString();
        salesPaymentPdf = new SalesPaymentPdf();
        salesPaymentPdf.setFileName("User Wise IP/OP All Users");
        salesPaymentPdf.setFileuri(uri);
        salesPaymentPdf.setPid(salesPaymentPdfServiceImpl.getNextId());
        salesPaymentPdf.setData(pdfByte);
        System.out.println(salesPaymentPdf);    
        // System.out.println("------------------------End--------------------------------");
        // System.out.println(totalBillAmount);
        //System.out.println(to);
       // System.out.println(typeOfCharge);
        //System.out.println(patientType);
        //System.out.println(cServiceId);
        salesPaymentPdfServiceImpl.save(salesPaymentPdf);
    } catch (Exception e) {
       Logger.error(e.getMessage());
    }
    return salesPaymentPdf;
    }

@RequestMapping(value="/getMedByBillNo/{billNo}",method=RequestMethod.GET)
public List<Object> getMedByBillNo(@PathVariable String billNo)
{
	List<Object> list=new ArrayList<>();
	List<Object> list1=new ArrayList<>();
	List<Sales> sales=salesServiceImpl.findByBillNo(billNo);
	List<Object> displayList=new ArrayList<>();
	Iterable<MedicineDetails> medicine= medicineDetailsRepository.findAll();
	Iterable<MedicineDetails> medicineDetails=medicineDetailsRepository.findAll();
	for(MedicineDetails medicineDetailsInfo:medicineDetails)
	{
		List<MedicineProcurement> medicineProcurements=medicineProcurementRepository.findOneApproved(medicineDetailsInfo);
		
		if(!medicineProcurements.isEmpty())
		{	
			RefSalesIds refSalesIds=new RefSalesIds();
			
			
			refSalesIds.setMedName(medicineDetailsInfo.getName());
			refSalesIds.setBatch(medicineDetailsInfo.getBatchNo());
			refSalesIds.setExpDate(medicineProcurements.get(medicineProcurements.size()-1).getExpDate());
			refSalesIds.setMrp(medicineProcurements.get(medicineProcurements.size()-1).getMrp());
			list.add(refSalesIds);
		}
	}
	list1.add(sales);
	displayList.add(list);
	displayList.add(list1);
	return displayList;
} 


@RequestMapping(value="/updatemed/{billNo}",method=RequestMethod.POST)
public void updateMedDetails(@RequestBody SalesDto salesDto,Principal principal,@PathVariable("billNo") String billNo) {
	
	Sales sales=new Sales();
	BeanUtils.copyProperties(salesDto, sales);
	
	salesServiceImpl.updateMedDetails(sales,principal,billNo);
}
}
